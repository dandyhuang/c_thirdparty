// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recommend.proto

#include "recommend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_recommend_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdItemInfo_IdeaMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Interval;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocationInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NetworkInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PredictorInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RecomResponse_DebugInfoEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RecommendInfo_MapContextEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RecommendItem_MapContextEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RuleAppDirectInfo_MapTagInfoEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SeviceSceneInsulateInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AdItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AgeSexInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IncomeCityInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RecomRequest_SceneInsulateContextEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RecommendInfo_MapItemEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SceneSubAlgInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RecomResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RecommendItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_RecommendInfo;
}  // namespace protobuf_recommend_2eproto
namespace protobuf_rtrs_5fexpinfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fexpinfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AlgMultiTestInfo;
}  // namespace protobuf_rtrs_5fexpinfo_2eproto
namespace so_rtrs {
class AllTestInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllTestInfo>
      _instance;
} _AllTestInfo_default_instance_;
class PredictorInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictorInfo>
      _instance;
} _PredictorInfo_default_instance_;
class SceneSubAlgInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneSubAlgInfo>
      _instance;
} _SceneSubAlgInfo_default_instance_;
class SeviceSceneInsulateInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SeviceSceneInsulateInfo>
      _instance;
} _SeviceSceneInsulateInfo_default_instance_;
class DeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceInfo>
      _instance;
} _DeviceInfo_default_instance_;
class LocationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationInfo>
      _instance;
} _LocationInfo_default_instance_;
class NetworkInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkInfo>
      _instance;
} _NetworkInfo_default_instance_;
class AdItemInfo_IdeaMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdItemInfo_IdeaMapEntry_DoNotUse>
      _instance;
} _AdItemInfo_IdeaMapEntry_DoNotUse_default_instance_;
class AdItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdItemInfo>
      _instance;
} _AdItemInfo_default_instance_;
class RecommendItem_MapContextEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecommendItem_MapContextEntry_DoNotUse>
      _instance;
} _RecommendItem_MapContextEntry_DoNotUse_default_instance_;
class RecommendItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecommendItem>
      _instance;
} _RecommendItem_default_instance_;
class IntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Interval>
      _instance;
} _Interval_default_instance_;
class AgeSexInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgeSexInfo>
      _instance;
} _AgeSexInfo_default_instance_;
class IncomeCityInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncomeCityInfo>
      _instance;
} _IncomeCityInfo_default_instance_;
class RuleAppDirectInfo_MapTagInfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuleAppDirectInfo_MapTagInfoEntry_DoNotUse>
      _instance;
} _RuleAppDirectInfo_MapTagInfoEntry_DoNotUse_default_instance_;
class RuleAppDirectInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuleAppDirectInfo>
      _instance;
} _RuleAppDirectInfo_default_instance_;
class RecommendInfo_MapItemEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecommendInfo_MapItemEntry_DoNotUse>
      _instance;
} _RecommendInfo_MapItemEntry_DoNotUse_default_instance_;
class RecommendInfo_MapContextEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecommendInfo_MapContextEntry_DoNotUse>
      _instance;
} _RecommendInfo_MapContextEntry_DoNotUse_default_instance_;
class RecommendInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecommendInfo>
      _instance;
} _RecommendInfo_default_instance_;
class RecomRequest_SceneInsulateContextEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecomRequest_SceneInsulateContextEntry_DoNotUse>
      _instance;
} _RecomRequest_SceneInsulateContextEntry_DoNotUse_default_instance_;
class RecomRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecomRequest>
      _instance;
} _RecomRequest_default_instance_;
class RecomResponse_DebugInfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecomResponse_DebugInfoEntry_DoNotUse>
      _instance;
} _RecomResponse_DebugInfoEntry_DoNotUse_default_instance_;
class RecomResponse_DebugInfo2Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecomResponse_DebugInfo2Entry_DoNotUse>
      _instance;
} _RecomResponse_DebugInfo2Entry_DoNotUse_default_instance_;
class RecomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecomResponse>
      _instance;
} _RecomResponse_default_instance_;
}  // namespace so_rtrs
namespace protobuf_recommend_2eproto {
static void InitDefaultsAllTestInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_AllTestInfo_default_instance_;
    new (ptr) ::so_rtrs::AllTestInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::AllTestInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllTestInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllTestInfo}, {
      &protobuf_rtrs_5fexpinfo_2eproto::scc_info_AlgMultiTestInfo.base,}};

static void InitDefaultsPredictorInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_PredictorInfo_default_instance_;
    new (ptr) ::so_rtrs::PredictorInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::PredictorInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PredictorInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPredictorInfo}, {}};

static void InitDefaultsSceneSubAlgInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_SceneSubAlgInfo_default_instance_;
    new (ptr) ::so_rtrs::SceneSubAlgInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::SceneSubAlgInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneSubAlgInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneSubAlgInfo}, {
      &protobuf_recommend_2eproto::scc_info_PredictorInfo.base,}};

static void InitDefaultsSeviceSceneInsulateInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_SeviceSceneInsulateInfo_default_instance_;
    new (ptr) ::so_rtrs::SeviceSceneInsulateInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::SeviceSceneInsulateInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SeviceSceneInsulateInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSeviceSceneInsulateInfo}, {}};

static void InitDefaultsDeviceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_DeviceInfo_default_instance_;
    new (ptr) ::so_rtrs::DeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::DeviceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceInfo}, {}};

static void InitDefaultsLocationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_LocationInfo_default_instance_;
    new (ptr) ::so_rtrs::LocationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::LocationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocationInfo}, {}};

static void InitDefaultsNetworkInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_NetworkInfo_default_instance_;
    new (ptr) ::so_rtrs::NetworkInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::NetworkInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NetworkInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNetworkInfo}, {}};

static void InitDefaultsAdItemInfo_IdeaMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_AdItemInfo_IdeaMapEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::AdItemInfo_IdeaMapEntry_DoNotUse();
  }
  ::so_rtrs::AdItemInfo_IdeaMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdItemInfo_IdeaMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdItemInfo_IdeaMapEntry_DoNotUse}, {}};

static void InitDefaultsAdItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_AdItemInfo_default_instance_;
    new (ptr) ::so_rtrs::AdItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::AdItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AdItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAdItemInfo}, {
      &protobuf_recommend_2eproto::scc_info_AdItemInfo_IdeaMapEntry_DoNotUse.base,}};

static void InitDefaultsRecommendItem_MapContextEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecommendItem_MapContextEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RecommendItem_MapContextEntry_DoNotUse();
  }
  ::so_rtrs::RecommendItem_MapContextEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecommendItem_MapContextEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecommendItem_MapContextEntry_DoNotUse}, {}};

static void InitDefaultsRecommendItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecommendItem_default_instance_;
    new (ptr) ::so_rtrs::RecommendItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::RecommendItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RecommendItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRecommendItem}, {
      &protobuf_recommend_2eproto::scc_info_AdItemInfo.base,
      &protobuf_recommend_2eproto::scc_info_RecommendItem_MapContextEntry_DoNotUse.base,}};

static void InitDefaultsInterval() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_Interval_default_instance_;
    new (ptr) ::so_rtrs::Interval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::Interval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Interval =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInterval}, {}};

static void InitDefaultsAgeSexInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_AgeSexInfo_default_instance_;
    new (ptr) ::so_rtrs::AgeSexInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::AgeSexInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AgeSexInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAgeSexInfo}, {
      &protobuf_recommend_2eproto::scc_info_Interval.base,}};

static void InitDefaultsIncomeCityInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_IncomeCityInfo_default_instance_;
    new (ptr) ::so_rtrs::IncomeCityInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::IncomeCityInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IncomeCityInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIncomeCityInfo}, {
      &protobuf_recommend_2eproto::scc_info_Interval.base,}};

static void InitDefaultsRuleAppDirectInfo_MapTagInfoEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RuleAppDirectInfo_MapTagInfoEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse();
  }
  ::so_rtrs::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RuleAppDirectInfo_MapTagInfoEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRuleAppDirectInfo_MapTagInfoEntry_DoNotUse}, {}};

static void InitDefaultsRuleAppDirectInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RuleAppDirectInfo_default_instance_;
    new (ptr) ::so_rtrs::RuleAppDirectInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::RuleAppDirectInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RuleAppDirectInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRuleAppDirectInfo}, {
      &protobuf_recommend_2eproto::scc_info_RuleAppDirectInfo_MapTagInfoEntry_DoNotUse.base,
      &protobuf_recommend_2eproto::scc_info_AgeSexInfo.base,
      &protobuf_recommend_2eproto::scc_info_IncomeCityInfo.base,}};

static void InitDefaultsRecommendInfo_MapItemEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecommendInfo_MapItemEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RecommendInfo_MapItemEntry_DoNotUse();
  }
  ::so_rtrs::RecommendInfo_MapItemEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecommendInfo_MapItemEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecommendInfo_MapItemEntry_DoNotUse}, {
      &protobuf_recommend_2eproto::scc_info_RecommendItem.base,}};

static void InitDefaultsRecommendInfo_MapContextEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecommendInfo_MapContextEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RecommendInfo_MapContextEntry_DoNotUse();
  }
  ::so_rtrs::RecommendInfo_MapContextEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecommendInfo_MapContextEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecommendInfo_MapContextEntry_DoNotUse}, {}};

static void InitDefaultsRecommendInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecommendInfo_default_instance_;
    new (ptr) ::so_rtrs::RecommendInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::RecommendInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RecommendInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRecommendInfo}, {
      &protobuf_recommend_2eproto::scc_info_RecommendItem.base,
      &protobuf_recommend_2eproto::scc_info_RecommendInfo_MapItemEntry_DoNotUse.base,
      &protobuf_recommend_2eproto::scc_info_RecommendInfo_MapContextEntry_DoNotUse.base,
      &protobuf_recommend_2eproto::scc_info_SceneSubAlgInfo.base,}};

static void InitDefaultsRecomRequest_SceneInsulateContextEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecomRequest_SceneInsulateContextEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RecomRequest_SceneInsulateContextEntry_DoNotUse();
  }
  ::so_rtrs::RecomRequest_SceneInsulateContextEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecomRequest_SceneInsulateContextEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecomRequest_SceneInsulateContextEntry_DoNotUse}, {
      &protobuf_recommend_2eproto::scc_info_SeviceSceneInsulateInfo.base,}};

static void InitDefaultsRecomRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecomRequest_default_instance_;
    new (ptr) ::so_rtrs::RecomRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::RecomRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_RecomRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsRecomRequest}, {
      &protobuf_recommend_2eproto::scc_info_DeviceInfo.base,
      &protobuf_recommend_2eproto::scc_info_LocationInfo.base,
      &protobuf_recommend_2eproto::scc_info_NetworkInfo.base,
      &protobuf_recommend_2eproto::scc_info_RecommendInfo.base,
      &protobuf_rtrs_5fexpinfo_2eproto::scc_info_AlgMultiTestInfo.base,
      &protobuf_recommend_2eproto::scc_info_RecomRequest_SceneInsulateContextEntry_DoNotUse.base,}};

static void InitDefaultsRecomResponse_DebugInfoEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecomResponse_DebugInfoEntry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RecomResponse_DebugInfoEntry_DoNotUse();
  }
  ::so_rtrs::RecomResponse_DebugInfoEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecomResponse_DebugInfoEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecomResponse_DebugInfoEntry_DoNotUse}, {}};

static void InitDefaultsRecomResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RecomResponse_DebugInfo2Entry_DoNotUse_default_instance_;
    new (ptr) ::so_rtrs::RecomResponse_DebugInfo2Entry_DoNotUse();
  }
  {
    void* ptr = &::so_rtrs::_RecomResponse_default_instance_;
    new (ptr) ::so_rtrs::RecomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::RecomResponse_DebugInfo2Entry_DoNotUse::InitAsDefaultInstance();
  ::so_rtrs::RecomResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RecomResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRecomResponse}, {
      &protobuf_recommend_2eproto::scc_info_RecommendInfo.base,
      &protobuf_recommend_2eproto::scc_info_RecomResponse_DebugInfoEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AllTestInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PredictorInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneSubAlgInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SeviceSceneInsulateInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdItemInfo_IdeaMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecommendItem_MapContextEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecommendItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Interval.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgeSexInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncomeCityInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RuleAppDirectInfo_MapTagInfoEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RuleAppDirectInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecommendInfo_MapItemEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecommendInfo_MapContextEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecommendInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecomRequest_SceneInsulateContextEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecomRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecomResponse_DebugInfoEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecomResponse.base);
}

}  // namespace protobuf_recommend_2eproto
namespace so_rtrs {
bool SCENE_CMD_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 12:
    case 13:
    case 19:
    case 28:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 102:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 365:
    case 366:
    case 367:
    case 368:
    case 369:
    case 370:
    case 371:
    case 372:
    case 373:
    case 374:
    case 375:
    case 376:
    case 377:
    case 400:
    case 410:
    case 411:
    case 412:
    case 413:
    case 414:
    case 415:
    case 450:
    case 451:
    case 452:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 600:
    case 601:
    case 602:
    case 603:
    case 606:
    case 611:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AllTestInfo::InitAsDefaultInstance() {
}
void AllTestInfo::clear_vectestinfo() {
  vectestinfo_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllTestInfo::kVecTestInfoFieldNumber;
const int AllTestInfo::kDebugErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllTestInfo::AllTestInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_AllTestInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.AllTestInfo)
}
AllTestInfo::AllTestInfo(const AllTestInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      vectestinfo_(from.vectestinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  debug_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.debug_error().size() > 0) {
    debug_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_error_);
  }
  // @@protoc_insertion_point(copy_constructor:so_rtrs.AllTestInfo)
}

void AllTestInfo::SharedCtor() {
  debug_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AllTestInfo::~AllTestInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.AllTestInfo)
  SharedDtor();
}

void AllTestInfo::SharedDtor() {
  debug_error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllTestInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllTestInfo& AllTestInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_AllTestInfo.base);
  return *internal_default_instance();
}


void AllTestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.AllTestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vectestinfo_.Clear();
  debug_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AllTestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.AllTestInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .so_rtrs.AlgMultiTestInfo vecTestInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vectestinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string debug_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debug_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debug_error().data(), static_cast<int>(this->debug_error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.AllTestInfo.debug_error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.AllTestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.AllTestInfo)
  return false;
#undef DO_
}

void AllTestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.AllTestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .so_rtrs.AlgMultiTestInfo vecTestInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vectestinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->vectestinfo(static_cast<int>(i)),
      output);
  }

  // string debug_error = 2;
  if (this->debug_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debug_error().data(), static_cast<int>(this->debug_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.AllTestInfo.debug_error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->debug_error(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.AllTestInfo)
}

size_t AllTestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.AllTestInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.AlgMultiTestInfo vecTestInfo = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vectestinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vectestinfo(static_cast<int>(i)));
    }
  }

  // string debug_error = 2;
  if (this->debug_error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debug_error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllTestInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AllTestInfo*>(&from));
}

void AllTestInfo::MergeFrom(const AllTestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.AllTestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vectestinfo_.MergeFrom(from.vectestinfo_);
  if (from.debug_error().size() > 0) {

    debug_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_error_);
  }
}

void AllTestInfo::CopyFrom(const AllTestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.AllTestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllTestInfo::IsInitialized() const {
  return true;
}

void AllTestInfo::Swap(AllTestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllTestInfo::InternalSwap(AllTestInfo* other) {
  using std::swap;
  CastToBase(&vectestinfo_)->InternalSwap(CastToBase(&other->vectestinfo_));
  debug_error_.Swap(&other->debug_error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AllTestInfo::GetTypeName() const {
  return "so_rtrs.AllTestInfo";
}


// ===================================================================

void PredictorInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictorInfo::kPlatformFieldNumber;
const int PredictorInfo::kModelNameFieldNumber;
const int PredictorInfo::kPowerRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictorInfo::PredictorInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_PredictorInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.PredictorInfo)
}
PredictorInfo::PredictorInfo(const PredictorInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  modelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modelname().size() > 0) {
    modelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelname_);
  }
  powerratio_ = from.powerratio_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.PredictorInfo)
}

void PredictorInfo::SharedCtor() {
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  powerratio_ = 0;
}

PredictorInfo::~PredictorInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.PredictorInfo)
  SharedDtor();
}

void PredictorInfo::SharedDtor() {
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PredictorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorInfo& PredictorInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_PredictorInfo.base);
  return *internal_default_instance();
}


void PredictorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.PredictorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  powerratio_ = 0;
  _internal_metadata_.Clear();
}

bool PredictorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.PredictorInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string platform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.PredictorInfo.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string modelName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modelname().data(), static_cast<int>(this->modelname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.PredictorInfo.modelName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double powerRatio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &powerratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.PredictorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.PredictorInfo)
  return false;
#undef DO_
}

void PredictorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.PredictorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.PredictorInfo.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->platform(), output);
  }

  // string modelName = 2;
  if (this->modelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modelname().data(), static_cast<int>(this->modelname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.PredictorInfo.modelName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->modelname(), output);
  }

  // double powerRatio = 3;
  if (this->powerratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->powerratio(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.PredictorInfo)
}

size_t PredictorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.PredictorInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string platform = 1;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string modelName = 2;
  if (this->modelname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modelname());
  }

  // double powerRatio = 3;
  if (this->powerratio() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PredictorInfo*>(&from));
}

void PredictorInfo::MergeFrom(const PredictorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.PredictorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.modelname().size() > 0) {

    modelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelname_);
  }
  if (from.powerratio() != 0) {
    set_powerratio(from.powerratio());
  }
}

void PredictorInfo::CopyFrom(const PredictorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.PredictorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorInfo::IsInitialized() const {
  return true;
}

void PredictorInfo::Swap(PredictorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictorInfo::InternalSwap(PredictorInfo* other) {
  using std::swap;
  platform_.Swap(&other->platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modelname_.Swap(&other->modelname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(powerratio_, other->powerratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PredictorInfo::GetTypeName() const {
  return "so_rtrs.PredictorInfo";
}


// ===================================================================

void SceneSubAlgInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneSubAlgInfo::kRankAlgsFieldNumber;
const int SceneSubAlgInfo::kRecallAlgsFieldNumber;
const int SceneSubAlgInfo::kPredictorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneSubAlgInfo::SceneSubAlgInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_SceneSubAlgInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.SceneSubAlgInfo)
}
SceneSubAlgInfo::SceneSubAlgInfo(const SceneSubAlgInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      rankalgs_(from.rankalgs_),
      recallalgs_(from.recallalgs_),
      predictors_(from.predictors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:so_rtrs.SceneSubAlgInfo)
}

void SceneSubAlgInfo::SharedCtor() {
}

SceneSubAlgInfo::~SceneSubAlgInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.SceneSubAlgInfo)
  SharedDtor();
}

void SceneSubAlgInfo::SharedDtor() {
}

void SceneSubAlgInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneSubAlgInfo& SceneSubAlgInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_SceneSubAlgInfo.base);
  return *internal_default_instance();
}


void SceneSubAlgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.SceneSubAlgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankalgs_.Clear();
  recallalgs_.Clear();
  predictors_.Clear();
  _internal_metadata_.Clear();
}

bool SceneSubAlgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.SceneSubAlgInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string rankAlgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rankalgs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rankalgs(this->rankalgs_size() - 1).data(),
            static_cast<int>(this->rankalgs(this->rankalgs_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.SceneSubAlgInfo.rankAlgs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string recallAlgs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_recallalgs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recallalgs(this->recallalgs_size() - 1).data(),
            static_cast<int>(this->recallalgs(this->recallalgs_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.SceneSubAlgInfo.recallAlgs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.PredictorInfo predictors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_predictors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.SceneSubAlgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.SceneSubAlgInfo)
  return false;
#undef DO_
}

void SceneSubAlgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.SceneSubAlgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string rankAlgs = 1;
  for (int i = 0, n = this->rankalgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rankalgs(i).data(), static_cast<int>(this->rankalgs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.SceneSubAlgInfo.rankAlgs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rankalgs(i), output);
  }

  // repeated string recallAlgs = 2;
  for (int i = 0, n = this->recallalgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recallalgs(i).data(), static_cast<int>(this->recallalgs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.SceneSubAlgInfo.recallAlgs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->recallalgs(i), output);
  }

  // repeated .so_rtrs.PredictorInfo predictors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->predictors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->predictors(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.SceneSubAlgInfo)
}

size_t SceneSubAlgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.SceneSubAlgInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string rankAlgs = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rankalgs_size());
  for (int i = 0, n = this->rankalgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rankalgs(i));
  }

  // repeated string recallAlgs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->recallalgs_size());
  for (int i = 0, n = this->recallalgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->recallalgs(i));
  }

  // repeated .so_rtrs.PredictorInfo predictors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->predictors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->predictors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneSubAlgInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SceneSubAlgInfo*>(&from));
}

void SceneSubAlgInfo::MergeFrom(const SceneSubAlgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.SceneSubAlgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankalgs_.MergeFrom(from.rankalgs_);
  recallalgs_.MergeFrom(from.recallalgs_);
  predictors_.MergeFrom(from.predictors_);
}

void SceneSubAlgInfo::CopyFrom(const SceneSubAlgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.SceneSubAlgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneSubAlgInfo::IsInitialized() const {
  return true;
}

void SceneSubAlgInfo::Swap(SceneSubAlgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneSubAlgInfo::InternalSwap(SceneSubAlgInfo* other) {
  using std::swap;
  rankalgs_.InternalSwap(CastToBase(&other->rankalgs_));
  recallalgs_.InternalSwap(CastToBase(&other->recallalgs_));
  CastToBase(&predictors_)->InternalSwap(CastToBase(&other->predictors_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SceneSubAlgInfo::GetTypeName() const {
  return "so_rtrs.SceneSubAlgInfo";
}


// ===================================================================

void SeviceSceneInsulateInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeviceSceneInsulateInfo::kIsEffectFieldNumber;
const int SeviceSceneInsulateInfo::kServiceNameFieldNumber;
const int SeviceSceneInsulateInfo::kServiceNameSuffixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeviceSceneInsulateInfo::SeviceSceneInsulateInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_SeviceSceneInsulateInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.SeviceSceneInsulateInfo)
}
SeviceSceneInsulateInfo::SeviceSceneInsulateInfo(const SeviceSceneInsulateInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicename().size() > 0) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  servicenamesuffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicenamesuffix().size() > 0) {
    servicenamesuffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicenamesuffix_);
  }
  iseffect_ = from.iseffect_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.SeviceSceneInsulateInfo)
}

void SeviceSceneInsulateInfo::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servicenamesuffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iseffect_ = false;
}

SeviceSceneInsulateInfo::~SeviceSceneInsulateInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.SeviceSceneInsulateInfo)
  SharedDtor();
}

void SeviceSceneInsulateInfo::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servicenamesuffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SeviceSceneInsulateInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SeviceSceneInsulateInfo& SeviceSceneInsulateInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_SeviceSceneInsulateInfo.base);
  return *internal_default_instance();
}


void SeviceSceneInsulateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.SeviceSceneInsulateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servicenamesuffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iseffect_ = false;
  _internal_metadata_.Clear();
}

bool SeviceSceneInsulateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.SeviceSceneInsulateInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isEffect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iseffect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serviceName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.SeviceSceneInsulateInfo.serviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serviceNameSuffix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicenamesuffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servicenamesuffix().data(), static_cast<int>(this->servicenamesuffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.SeviceSceneInsulateInfo.serviceNameSuffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.SeviceSceneInsulateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.SeviceSceneInsulateInfo)
  return false;
#undef DO_
}

void SeviceSceneInsulateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.SeviceSceneInsulateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isEffect = 1;
  if (this->iseffect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->iseffect(), output);
  }

  // string serviceName = 2;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.SeviceSceneInsulateInfo.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servicename(), output);
  }

  // string serviceNameSuffix = 3;
  if (this->servicenamesuffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicenamesuffix().data(), static_cast<int>(this->servicenamesuffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.SeviceSceneInsulateInfo.serviceNameSuffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->servicenamesuffix(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.SeviceSceneInsulateInfo)
}

size_t SeviceSceneInsulateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.SeviceSceneInsulateInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string serviceName = 2;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  // string serviceNameSuffix = 3;
  if (this->servicenamesuffix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicenamesuffix());
  }

  // bool isEffect = 1;
  if (this->iseffect() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SeviceSceneInsulateInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SeviceSceneInsulateInfo*>(&from));
}

void SeviceSceneInsulateInfo::MergeFrom(const SeviceSceneInsulateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.SeviceSceneInsulateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  if (from.servicenamesuffix().size() > 0) {

    servicenamesuffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicenamesuffix_);
  }
  if (from.iseffect() != 0) {
    set_iseffect(from.iseffect());
  }
}

void SeviceSceneInsulateInfo::CopyFrom(const SeviceSceneInsulateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.SeviceSceneInsulateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeviceSceneInsulateInfo::IsInitialized() const {
  return true;
}

void SeviceSceneInsulateInfo::Swap(SeviceSceneInsulateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeviceSceneInsulateInfo::InternalSwap(SeviceSceneInsulateInfo* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  servicenamesuffix_.Swap(&other->servicenamesuffix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iseffect_, other->iseffect_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SeviceSceneInsulateInfo::GetTypeName() const {
  return "so_rtrs.SeviceSceneInsulateInfo";
}


// ===================================================================

void DeviceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInfo::kAndroidIdFieldNumber;
const int DeviceInfo::kImeiFieldNumber;
const int DeviceInfo::kSuperUserFieldNumber;
const int DeviceInfo::kLanguageFieldNumber;
const int DeviceInfo::kManufacturerFieldNumber;
const int DeviceInfo::kModelNameFieldNumber;
const int DeviceInfo::kOsVersionFieldNumber;
const int DeviceInfo::kResolutionFieldNumber;
const int DeviceInfo::kMacAddrFieldNumber;
const int DeviceInfo::kClientVersionFieldNumber;
const int DeviceInfo::kAddAttributeFieldNumber;
const int DeviceInfo::kPreferInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInfo::DeviceInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_DeviceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.DeviceInfo)
}
DeviceInfo::DeviceInfo(const DeviceInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      preferinfos_(from.preferinfos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  androidid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.androidid().size() > 0) {
    androidid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidid_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imei().size() > 0) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manufacturer().size() > 0) {
    manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
  }
  modelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modelname().size() > 0) {
    modelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelname_);
  }
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.osversion().size() > 0) {
    osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
  }
  resolution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resolution().size() > 0) {
    resolution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resolution_);
  }
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.macaddr().size() > 0) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientversion().size() > 0) {
    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
  ::memcpy(&superuser_, &from.superuser_,
    static_cast<size_t>(reinterpret_cast<char*>(&addattribute_) -
    reinterpret_cast<char*>(&superuser_)) + sizeof(addattribute_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.DeviceInfo)
}

void DeviceInfo::SharedCtor() {
  androidid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&superuser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addattribute_) -
      reinterpret_cast<char*>(&superuser_)) + sizeof(addattribute_));
}

DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.DeviceInfo)
  SharedDtor();
}

void DeviceInfo::SharedDtor() {
  androidid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceInfo& DeviceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_DeviceInfo.base);
  return *internal_default_instance();
}


void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  preferinfos_.Clear();
  androidid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&superuser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addattribute_) -
      reinterpret_cast<char*>(&superuser_)) + sizeof(addattribute_));
  _internal_metadata_.Clear();
}

bool DeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.DeviceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string androidId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->androidid().data(), static_cast<int>(this->androidid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.androidId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imei = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.imei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 superUser = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &superuser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string manufacturer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manufacturer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->manufacturer().data(), static_cast<int>(this->manufacturer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.manufacturer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string modelName = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modelname().data(), static_cast<int>(this->modelname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.modelName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string osVersion = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->osversion().data(), static_cast<int>(this->osversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.osVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resolution = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resolution()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resolution().data(), static_cast<int>(this->resolution().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.resolution"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string macAddr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->macaddr().data(), static_cast<int>(this->macaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.macAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clientVersion = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientversion().data(), static_cast<int>(this->clientversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.DeviceInfo.clientVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 addAttribute = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &addattribute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 preferInfos = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_preferinfos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_preferinfos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.DeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.DeviceInfo)
  return false;
#undef DO_
}

void DeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string androidId = 1;
  if (this->androidid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->androidid().data(), static_cast<int>(this->androidid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.androidId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->androidid(), output);
  }

  // string imei = 2;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->imei(), output);
  }

  // int64 superUser = 3;
  if (this->superuser() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->superuser(), output);
  }

  // string language = 4;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language(), output);
  }

  // string manufacturer = 5;
  if (this->manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturer().data(), static_cast<int>(this->manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->manufacturer(), output);
  }

  // string modelName = 6;
  if (this->modelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modelname().data(), static_cast<int>(this->modelname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.modelName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->modelname(), output);
  }

  // string osVersion = 7;
  if (this->osversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->osversion().data(), static_cast<int>(this->osversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.osVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->osversion(), output);
  }

  // string resolution = 8;
  if (this->resolution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resolution().data(), static_cast<int>(this->resolution().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.resolution");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->resolution(), output);
  }

  // string macAddr = 9;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), static_cast<int>(this->macaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.macAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->macaddr(), output);
  }

  // string clientVersion = 10;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), static_cast<int>(this->clientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.DeviceInfo.clientVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->clientversion(), output);
  }

  // int64 addAttribute = 11;
  if (this->addattribute() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->addattribute(), output);
  }

  // repeated int32 preferInfos = 12;
  if (this->preferinfos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _preferinfos_cached_byte_size_));
  }
  for (int i = 0, n = this->preferinfos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->preferinfos(i), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.DeviceInfo)
}

size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.DeviceInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated int32 preferInfos = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->preferinfos_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _preferinfos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string androidId = 1;
  if (this->androidid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->androidid());
  }

  // string imei = 2;
  if (this->imei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // string language = 4;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // string manufacturer = 5;
  if (this->manufacturer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manufacturer());
  }

  // string modelName = 6;
  if (this->modelname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modelname());
  }

  // string osVersion = 7;
  if (this->osversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->osversion());
  }

  // string resolution = 8;
  if (this->resolution().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resolution());
  }

  // string macAddr = 9;
  if (this->macaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());
  }

  // string clientVersion = 10;
  if (this->clientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientversion());
  }

  // int64 superUser = 3;
  if (this->superuser() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->superuser());
  }

  // int64 addAttribute = 11;
  if (this->addattribute() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->addattribute());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeviceInfo*>(&from));
}

void DeviceInfo::MergeFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  preferinfos_.MergeFrom(from.preferinfos_);
  if (from.androidid().size() > 0) {

    androidid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidid_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.manufacturer().size() > 0) {

    manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
  }
  if (from.modelname().size() > 0) {

    modelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelname_);
  }
  if (from.osversion().size() > 0) {

    osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
  }
  if (from.resolution().size() > 0) {

    resolution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resolution_);
  }
  if (from.macaddr().size() > 0) {

    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  if (from.clientversion().size() > 0) {

    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
  if (from.superuser() != 0) {
    set_superuser(from.superuser());
  }
  if (from.addattribute() != 0) {
    set_addattribute(from.addattribute());
  }
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInfo::IsInitialized() const {
  return true;
}

void DeviceInfo::Swap(DeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInfo::InternalSwap(DeviceInfo* other) {
  using std::swap;
  preferinfos_.InternalSwap(&other->preferinfos_);
  androidid_.Swap(&other->androidid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manufacturer_.Swap(&other->manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modelname_.Swap(&other->modelname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  osversion_.Swap(&other->osversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resolution_.Swap(&other->resolution_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  macaddr_.Swap(&other->macaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  clientversion_.Swap(&other->clientversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(superuser_, other->superuser_);
  swap(addattribute_, other->addattribute_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DeviceInfo::GetTypeName() const {
  return "so_rtrs.DeviceInfo";
}


// ===================================================================

void LocationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationInfo::kCityFieldNumber;
const int LocationInfo::kLongitudeFieldNumber;
const int LocationInfo::kTimezoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInfo::LocationInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_LocationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.LocationInfo)
}
LocationInfo::LocationInfo(const LocationInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.longitude().size() > 0) {
    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timezone().size() > 0) {
    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  // @@protoc_insertion_point(copy_constructor:so_rtrs.LocationInfo)
}

void LocationInfo::SharedCtor() {
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LocationInfo::~LocationInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.LocationInfo)
  SharedDtor();
}

void LocationInfo::SharedDtor() {
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LocationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationInfo& LocationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_LocationInfo.base);
  return *internal_default_instance();
}


void LocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.LocationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string city = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.LocationInfo.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->longitude().data(), static_cast<int>(this->longitude().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.LocationInfo.longitude"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timezone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timezone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timezone().data(), static_cast<int>(this->timezone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.LocationInfo.timezone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.LocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.LocationInfo)
  return false;
#undef DO_
}

void LocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string city = 1;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.LocationInfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->city(), output);
  }

  // string longitude = 2;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), static_cast<int>(this->longitude().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.LocationInfo.longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->longitude(), output);
  }

  // string timezone = 3;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.LocationInfo.timezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->timezone(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.LocationInfo)
}

size_t LocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.LocationInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string city = 1;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string longitude = 2;
  if (this->longitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->longitude());
  }

  // string timezone = 3;
  if (this->timezone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timezone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LocationInfo*>(&from));
}

void LocationInfo::MergeFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.LocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.longitude().size() > 0) {

    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  if (from.timezone().size() > 0) {

    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
}

void LocationInfo::CopyFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.LocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationInfo::IsInitialized() const {
  return true;
}

void LocationInfo::Swap(LocationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationInfo::InternalSwap(LocationInfo* other) {
  using std::swap;
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  longitude_.Swap(&other->longitude_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timezone_.Swap(&other->timezone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LocationInfo::GetTypeName() const {
  return "so_rtrs.LocationInfo";
}


// ===================================================================

void NetworkInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkInfo::kImsiFieldNumber;
const int NetworkInfo::kNetworkTypeFieldNumber;
const int NetworkInfo::kNetworkOperatorFieldNumber;
const int NetworkInfo::kPhoneNumberFieldNumber;
const int NetworkInfo::kClientIpFieldNumber;
const int NetworkInfo::kWifiSsidFieldNumber;
const int NetworkInfo::kWifiBssidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkInfo::NetworkInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_NetworkInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.NetworkInfo)
}
NetworkInfo::NetworkInfo(const NetworkInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imsi().size() > 0) {
    imsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imsi_);
  }
  networktype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.networktype().size() > 0) {
    networktype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.networktype_);
  }
  networkoperator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.networkoperator().size() > 0) {
    networkoperator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.networkoperator_);
  }
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phonenumber().size() > 0) {
    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientip().size() > 0) {
    clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
  }
  wifissid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wifissid().size() > 0) {
    wifissid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wifissid_);
  }
  wifibssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wifibssid().size() > 0) {
    wifibssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wifibssid_);
  }
  // @@protoc_insertion_point(copy_constructor:so_rtrs.NetworkInfo)
}

void NetworkInfo::SharedCtor() {
  imsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  networktype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  networkoperator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wifissid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wifibssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NetworkInfo::~NetworkInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.NetworkInfo)
  SharedDtor();
}

void NetworkInfo::SharedDtor() {
  imsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  networktype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  networkoperator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wifissid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wifibssid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NetworkInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkInfo& NetworkInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_NetworkInfo.base);
  return *internal_default_instance();
}


void NetworkInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.NetworkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  networktype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  networkoperator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wifissid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wifibssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NetworkInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.NetworkInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string imsi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imsi().data(), static_cast<int>(this->imsi().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.imsi"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string networkType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_networktype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->networktype().data(), static_cast<int>(this->networktype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.networkType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string networkOperator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_networkoperator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->networkoperator().data(), static_cast<int>(this->networkoperator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.networkOperator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phoneNumber = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.phoneNumber"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clientIp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientip().data(), static_cast<int>(this->clientip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.clientIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wifiSsid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wifissid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wifissid().data(), static_cast<int>(this->wifissid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.wifiSsid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wifiBssid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wifibssid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wifibssid().data(), static_cast<int>(this->wifibssid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.NetworkInfo.wifiBssid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.NetworkInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.NetworkInfo)
  return false;
#undef DO_
}

void NetworkInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.NetworkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imsi = 1;
  if (this->imsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imsi().data(), static_cast<int>(this->imsi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.imsi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->imsi(), output);
  }

  // string networkType = 2;
  if (this->networktype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->networktype().data(), static_cast<int>(this->networktype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.networkType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->networktype(), output);
  }

  // string networkOperator = 3;
  if (this->networkoperator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->networkoperator().data(), static_cast<int>(this->networkoperator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.networkOperator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->networkoperator(), output);
  }

  // string phoneNumber = 4;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.phoneNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phonenumber(), output);
  }

  // string clientIp = 5;
  if (this->clientip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientip().data(), static_cast<int>(this->clientip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.clientIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->clientip(), output);
  }

  // string wifiSsid = 6;
  if (this->wifissid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wifissid().data(), static_cast<int>(this->wifissid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.wifiSsid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->wifissid(), output);
  }

  // string wifiBssid = 7;
  if (this->wifibssid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wifibssid().data(), static_cast<int>(this->wifibssid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.NetworkInfo.wifiBssid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->wifibssid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.NetworkInfo)
}

size_t NetworkInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.NetworkInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string imsi = 1;
  if (this->imsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imsi());
  }

  // string networkType = 2;
  if (this->networktype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->networktype());
  }

  // string networkOperator = 3;
  if (this->networkoperator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->networkoperator());
  }

  // string phoneNumber = 4;
  if (this->phonenumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());
  }

  // string clientIp = 5;
  if (this->clientip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientip());
  }

  // string wifiSsid = 6;
  if (this->wifissid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wifissid());
  }

  // string wifiBssid = 7;
  if (this->wifibssid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wifibssid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const NetworkInfo*>(&from));
}

void NetworkInfo::MergeFrom(const NetworkInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.NetworkInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imsi().size() > 0) {

    imsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imsi_);
  }
  if (from.networktype().size() > 0) {

    networktype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.networktype_);
  }
  if (from.networkoperator().size() > 0) {

    networkoperator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.networkoperator_);
  }
  if (from.phonenumber().size() > 0) {

    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  if (from.clientip().size() > 0) {

    clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
  }
  if (from.wifissid().size() > 0) {

    wifissid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wifissid_);
  }
  if (from.wifibssid().size() > 0) {

    wifibssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wifibssid_);
  }
}

void NetworkInfo::CopyFrom(const NetworkInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.NetworkInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkInfo::IsInitialized() const {
  return true;
}

void NetworkInfo::Swap(NetworkInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkInfo::InternalSwap(NetworkInfo* other) {
  using std::swap;
  imsi_.Swap(&other->imsi_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  networktype_.Swap(&other->networktype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  networkoperator_.Swap(&other->networkoperator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenumber_.Swap(&other->phonenumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  clientip_.Swap(&other->clientip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wifissid_.Swap(&other->wifissid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wifibssid_.Swap(&other->wifibssid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string NetworkInfo::GetTypeName() const {
  return "so_rtrs.NetworkInfo";
}


// ===================================================================

AdItemInfo_IdeaMapEntry_DoNotUse::AdItemInfo_IdeaMapEntry_DoNotUse() {}
AdItemInfo_IdeaMapEntry_DoNotUse::AdItemInfo_IdeaMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void AdItemInfo_IdeaMapEntry_DoNotUse::MergeFrom(const AdItemInfo_IdeaMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void AdItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdItemInfo::kTraceIdFieldNumber;
const int AdItemInfo::kAdTxtFieldNumber;
const int AdItemInfo::kAdTypeFieldNumber;
const int AdItemInfo::kStartTimeFieldNumber;
const int AdItemInfo::kEndTimeFieldNumber;
const int AdItemInfo::kPriceFieldNumber;
const int AdItemInfo::kCostTypeFieldNumber;
const int AdItemInfo::kIdeaMapFieldNumber;
const int AdItemInfo::kCurrentIdeaFieldNumber;
const int AdItemInfo::kPricingTypeFieldNumber;
const int AdItemInfo::kCreativeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdItemInfo::AdItemInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_AdItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.AdItemInfo)
}
AdItemInfo::AdItemInfo(const AdItemInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ideamap_.MergeFrom(from.ideamap_);
  traceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.traceid().size() > 0) {
    traceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traceid_);
  }
  adtxt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.adtxt().size() > 0) {
    adtxt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adtxt_);
  }
  currentidea_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currentidea().size() > 0) {
    currentidea_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currentidea_);
  }
  ::memcpy(&adtype_, &from.adtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pricingtype_) -
    reinterpret_cast<char*>(&adtype_)) + sizeof(pricingtype_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.AdItemInfo)
}

void AdItemInfo::SharedCtor() {
  traceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adtxt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currentidea_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&adtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pricingtype_) -
      reinterpret_cast<char*>(&adtype_)) + sizeof(pricingtype_));
}

AdItemInfo::~AdItemInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.AdItemInfo)
  SharedDtor();
}

void AdItemInfo::SharedDtor() {
  traceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adtxt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currentidea_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdItemInfo& AdItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_AdItemInfo.base);
  return *internal_default_instance();
}


void AdItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.AdItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ideamap_.Clear();
  traceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currentidea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&adtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pricingtype_) -
      reinterpret_cast<char*>(&adtype_)) + sizeof(pricingtype_));
  _internal_metadata_.Clear();
}

bool AdItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.AdItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string traceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_traceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->traceid().data(), static_cast<int>(this->traceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.AdItemInfo.traceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string adTxt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adtxt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->adtxt().data(), static_cast<int>(this->adtxt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.AdItemInfo.adTxt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 adType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 startTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 endTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 costType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ideaMap = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          AdItemInfo_IdeaMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              AdItemInfo_IdeaMapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ideamap_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.AdItemInfo.IdeaMapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.AdItemInfo.IdeaMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currentIdea = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currentidea()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currentidea().data(), static_cast<int>(this->currentidea().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.AdItemInfo.currentIdea"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pricingType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pricingtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 creativeid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creativeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.AdItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.AdItemInfo)
  return false;
#undef DO_
}

void AdItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.AdItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string traceId = 1;
  if (this->traceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traceid().data(), static_cast<int>(this->traceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.AdItemInfo.traceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->traceid(), output);
  }

  // string adTxt = 2;
  if (this->adtxt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->adtxt().data(), static_cast<int>(this->adtxt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.AdItemInfo.adTxt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->adtxt(), output);
  }

  // int32 adType = 3;
  if (this->adtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->adtype(), output);
  }

  // int32 startTime = 4;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->starttime(), output);
  }

  // int32 endTime = 5;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->endtime(), output);
  }

  // double price = 6;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->price(), output);
  }

  // int32 costType = 7;
  if (this->costtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->costtype(), output);
  }

  // map<string, string> ideaMap = 8;
  if (!this->ideamap().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.AdItemInfo.IdeaMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.AdItemInfo.IdeaMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ideamap().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->ideamap().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ideamap().begin();
          it != this->ideamap().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AdItemInfo_IdeaMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ideamap_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AdItemInfo_IdeaMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ideamap().begin();
          it != this->ideamap().end(); ++it) {
        entry.reset(ideamap_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string currentIdea = 9;
  if (this->currentidea().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currentidea().data(), static_cast<int>(this->currentidea().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.AdItemInfo.currentIdea");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->currentidea(), output);
  }

  // int32 pricingType = 10;
  if (this->pricingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pricingtype(), output);
  }

  // int64 creativeid = 11;
  if (this->creativeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->creativeid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.AdItemInfo)
}

size_t AdItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.AdItemInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<string, string> ideaMap = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ideamap_size());
  {
    ::std::unique_ptr<AdItemInfo_IdeaMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ideamap().begin();
        it != this->ideamap().end(); ++it) {
      entry.reset(ideamap_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string traceId = 1;
  if (this->traceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->traceid());
  }

  // string adTxt = 2;
  if (this->adtxt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->adtxt());
  }

  // string currentIdea = 9;
  if (this->currentidea().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currentidea());
  }

  // int32 adType = 3;
  if (this->adtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adtype());
  }

  // int32 startTime = 4;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starttime());
  }

  // double price = 6;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // int32 endTime = 5;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endtime());
  }

  // int32 costType = 7;
  if (this->costtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->costtype());
  }

  // int64 creativeid = 11;
  if (this->creativeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->creativeid());
  }

  // int32 pricingType = 10;
  if (this->pricingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pricingtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdItemInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AdItemInfo*>(&from));
}

void AdItemInfo::MergeFrom(const AdItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.AdItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ideamap_.MergeFrom(from.ideamap_);
  if (from.traceid().size() > 0) {

    traceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traceid_);
  }
  if (from.adtxt().size() > 0) {

    adtxt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adtxt_);
  }
  if (from.currentidea().size() > 0) {

    currentidea_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currentidea_);
  }
  if (from.adtype() != 0) {
    set_adtype(from.adtype());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
  if (from.costtype() != 0) {
    set_costtype(from.costtype());
  }
  if (from.creativeid() != 0) {
    set_creativeid(from.creativeid());
  }
  if (from.pricingtype() != 0) {
    set_pricingtype(from.pricingtype());
  }
}

void AdItemInfo::CopyFrom(const AdItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.AdItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdItemInfo::IsInitialized() const {
  return true;
}

void AdItemInfo::Swap(AdItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdItemInfo::InternalSwap(AdItemInfo* other) {
  using std::swap;
  ideamap_.Swap(&other->ideamap_);
  traceid_.Swap(&other->traceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  adtxt_.Swap(&other->adtxt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currentidea_.Swap(&other->currentidea_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(adtype_, other->adtype_);
  swap(starttime_, other->starttime_);
  swap(price_, other->price_);
  swap(endtime_, other->endtime_);
  swap(costtype_, other->costtype_);
  swap(creativeid_, other->creativeid_);
  swap(pricingtype_, other->pricingtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AdItemInfo::GetTypeName() const {
  return "so_rtrs.AdItemInfo";
}


// ===================================================================

RecommendItem_MapContextEntry_DoNotUse::RecommendItem_MapContextEntry_DoNotUse() {}
RecommendItem_MapContextEntry_DoNotUse::RecommendItem_MapContextEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RecommendItem_MapContextEntry_DoNotUse::MergeFrom(const RecommendItem_MapContextEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void RecommendItem::InitAsDefaultInstance() {
  ::so_rtrs::_RecommendItem_default_instance_._instance.get_mutable()->adinfo_ = const_cast< ::so_rtrs::AdItemInfo*>(
      ::so_rtrs::AdItemInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecommendItem::kIdFieldNumber;
const int RecommendItem::kScoreFieldNumber;
const int RecommendItem::kRecomReasonFieldNumber;
const int RecommendItem::kVersionCodeFieldNumber;
const int RecommendItem::kAdInfoFieldNumber;
const int RecommendItem::kCvrFieldNumber;
const int RecommendItem::kTraceIdFieldNumber;
const int RecommendItem::kStrIdFieldNumber;
const int RecommendItem::kAppnameFieldNumber;
const int RecommendItem::kMapContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecommendItem::RecommendItem()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_RecommendItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.RecommendItem)
}
RecommendItem::RecommendItem(const RecommendItem& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mapcontext_.MergeFrom(from.mapcontext_);
  recomreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recomreason().size() > 0) {
    recomreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recomreason_);
  }
  traceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.traceid().size() > 0) {
    traceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traceid_);
  }
  strid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strid().size() > 0) {
    strid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strid_);
  }
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.has_adinfo()) {
    adinfo_ = new ::so_rtrs::AdItemInfo(*from.adinfo_);
  } else {
    adinfo_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&versioncode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(versioncode_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.RecommendItem)
}

void RecommendItem::SharedCtor() {
  recomreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&adinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&versioncode_) -
      reinterpret_cast<char*>(&adinfo_)) + sizeof(versioncode_));
}

RecommendItem::~RecommendItem() {
  // @@protoc_insertion_point(destructor:so_rtrs.RecommendItem)
  SharedDtor();
}

void RecommendItem::SharedDtor() {
  recomreason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete adinfo_;
}

void RecommendItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecommendItem& RecommendItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_RecommendItem.base);
  return *internal_default_instance();
}


void RecommendItem::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.RecommendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mapcontext_.Clear();
  recomreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && adinfo_ != NULL) {
    delete adinfo_;
  }
  adinfo_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&versioncode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(versioncode_));
  _internal_metadata_.Clear();
}

bool RecommendItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.RecommendItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string recomReason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recomreason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recomreason().data(), static_cast<int>(this->recomreason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendItem.recomReason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 versionCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &versioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.AdItemInfo adInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cvr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cvr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string traceId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_traceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->traceid().data(), static_cast<int>(this->traceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendItem.traceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strid().data(), static_cast<int>(this->strid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendItem.strId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appname = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appname().data(), static_cast<int>(this->appname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendItem.appname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> mapContext = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          RecommendItem_MapContextEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RecommendItem_MapContextEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&mapcontext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendItem.MapContextEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendItem.MapContextEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.RecommendItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.RecommendItem)
  return false;
#undef DO_
}

void RecommendItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.RecommendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // double score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->score(), output);
  }

  // string recomReason = 3;
  if (this->recomreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recomreason().data(), static_cast<int>(this->recomreason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendItem.recomReason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->recomreason(), output);
  }

  // int32 versionCode = 4;
  if (this->versioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->versioncode(), output);
  }

  // .so_rtrs.AdItemInfo adInfo = 5;
  if (this->has_adinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_adinfo(), output);
  }

  // double cvr = 6;
  if (this->cvr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cvr(), output);
  }

  // string traceId = 7;
  if (this->traceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traceid().data(), static_cast<int>(this->traceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendItem.traceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->traceid(), output);
  }

  // string strId = 8;
  if (this->strid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strid().data(), static_cast<int>(this->strid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendItem.strId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->strid(), output);
  }

  // string appname = 9;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appname().data(), static_cast<int>(this->appname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendItem.appname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->appname(), output);
  }

  // map<string, string> mapContext = 10;
  if (!this->mapcontext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecommendItem.MapContextEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecommendItem.MapContextEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->mapcontext().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->mapcontext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->mapcontext().begin();
          it != this->mapcontext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RecommendItem_MapContextEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(mapcontext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            10, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RecommendItem_MapContextEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->mapcontext().begin();
          it != this->mapcontext().end(); ++it) {
        entry.reset(mapcontext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            10, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.RecommendItem)
}

size_t RecommendItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.RecommendItem)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<string, string> mapContext = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mapcontext_size());
  {
    ::std::unique_ptr<RecommendItem_MapContextEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->mapcontext().begin();
        it != this->mapcontext().end(); ++it) {
      entry.reset(mapcontext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string recomReason = 3;
  if (this->recomreason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recomreason());
  }

  // string traceId = 7;
  if (this->traceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->traceid());
  }

  // string strId = 8;
  if (this->strid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strid());
  }

  // string appname = 9;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appname());
  }

  // .so_rtrs.AdItemInfo adInfo = 5;
  if (this->has_adinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adinfo_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // double score = 2;
  if (this->score() != 0) {
    total_size += 1 + 8;
  }

  // double cvr = 6;
  if (this->cvr() != 0) {
    total_size += 1 + 8;
  }

  // int32 versionCode = 4;
  if (this->versioncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->versioncode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecommendItem::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RecommendItem*>(&from));
}

void RecommendItem::MergeFrom(const RecommendItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.RecommendItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mapcontext_.MergeFrom(from.mapcontext_);
  if (from.recomreason().size() > 0) {

    recomreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recomreason_);
  }
  if (from.traceid().size() > 0) {

    traceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traceid_);
  }
  if (from.strid().size() > 0) {

    strid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strid_);
  }
  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.has_adinfo()) {
    mutable_adinfo()->::so_rtrs::AdItemInfo::MergeFrom(from.adinfo());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.cvr() != 0) {
    set_cvr(from.cvr());
  }
  if (from.versioncode() != 0) {
    set_versioncode(from.versioncode());
  }
}

void RecommendItem::CopyFrom(const RecommendItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.RecommendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecommendItem::IsInitialized() const {
  return true;
}

void RecommendItem::Swap(RecommendItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecommendItem::InternalSwap(RecommendItem* other) {
  using std::swap;
  mapcontext_.Swap(&other->mapcontext_);
  recomreason_.Swap(&other->recomreason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  traceid_.Swap(&other->traceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  strid_.Swap(&other->strid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(adinfo_, other->adinfo_);
  swap(id_, other->id_);
  swap(score_, other->score_);
  swap(cvr_, other->cvr_);
  swap(versioncode_, other->versioncode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string RecommendItem::GetTypeName() const {
  return "so_rtrs.RecommendItem";
}


// ===================================================================

void Interval::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Interval::kLowerLimitFieldNumber;
const int Interval::kUpperLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Interval::Interval()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_Interval.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.Interval)
}
Interval::Interval(const Interval& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lowerlimit_, &from.lowerlimit_,
    static_cast<size_t>(reinterpret_cast<char*>(&upperlimit_) -
    reinterpret_cast<char*>(&lowerlimit_)) + sizeof(upperlimit_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.Interval)
}

void Interval::SharedCtor() {
  ::memset(&lowerlimit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upperlimit_) -
      reinterpret_cast<char*>(&lowerlimit_)) + sizeof(upperlimit_));
}

Interval::~Interval() {
  // @@protoc_insertion_point(destructor:so_rtrs.Interval)
  SharedDtor();
}

void Interval::SharedDtor() {
}

void Interval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Interval& Interval::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_Interval.base);
  return *internal_default_instance();
}


void Interval::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lowerlimit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upperlimit_) -
      reinterpret_cast<char*>(&lowerlimit_)) + sizeof(upperlimit_));
  _internal_metadata_.Clear();
}

bool Interval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.Interval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double lowerLimit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowerlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double upperLimit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upperlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.Interval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.Interval)
  return false;
#undef DO_
}

void Interval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lowerLimit = 1;
  if (this->lowerlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lowerlimit(), output);
  }

  // double upperLimit = 2;
  if (this->upperlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->upperlimit(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.Interval)
}

size_t Interval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.Interval)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double lowerLimit = 1;
  if (this->lowerlimit() != 0) {
    total_size += 1 + 8;
  }

  // double upperLimit = 2;
  if (this->upperlimit() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Interval::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Interval*>(&from));
}

void Interval::MergeFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.Interval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lowerlimit() != 0) {
    set_lowerlimit(from.lowerlimit());
  }
  if (from.upperlimit() != 0) {
    set_upperlimit(from.upperlimit());
  }
}

void Interval::CopyFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interval::IsInitialized() const {
  return true;
}

void Interval::Swap(Interval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Interval::InternalSwap(Interval* other) {
  using std::swap;
  swap(lowerlimit_, other->lowerlimit_);
  swap(upperlimit_, other->upperlimit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Interval::GetTypeName() const {
  return "so_rtrs.Interval";
}


// ===================================================================

void AgeSexInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgeSexInfo::kIsIncludeAgeFieldNumber;
const int AgeSexInfo::kAgeIntervalFieldNumber;
const int AgeSexInfo::kIsIncludeSexFieldNumber;
const int AgeSexInfo::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgeSexInfo::AgeSexInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_AgeSexInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.AgeSexInfo)
}
AgeSexInfo::AgeSexInfo(const AgeSexInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      ageinterval_(from.ageinterval_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isincludeage_, &from.isincludeage_,
    static_cast<size_t>(reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&isincludeage_)) + sizeof(sex_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.AgeSexInfo)
}

void AgeSexInfo::SharedCtor() {
  ::memset(&isincludeage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&isincludeage_)) + sizeof(sex_));
}

AgeSexInfo::~AgeSexInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.AgeSexInfo)
  SharedDtor();
}

void AgeSexInfo::SharedDtor() {
}

void AgeSexInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgeSexInfo& AgeSexInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_AgeSexInfo.base);
  return *internal_default_instance();
}


void AgeSexInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.AgeSexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ageinterval_.Clear();
  ::memset(&isincludeage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&isincludeage_)) + sizeof(sex_));
  _internal_metadata_.Clear();
}

bool AgeSexInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.AgeSexInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isIncludeAge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isincludeage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.Interval ageInterval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ageinterval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isIncludeSex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isincludesex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.AgeSexInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.AgeSexInfo)
  return false;
#undef DO_
}

void AgeSexInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.AgeSexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isIncludeAge = 1;
  if (this->isincludeage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isincludeage(), output);
  }

  // repeated .so_rtrs.Interval ageInterval = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ageinterval_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->ageinterval(static_cast<int>(i)),
      output);
  }

  // bool isIncludeSex = 3;
  if (this->isincludesex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isincludesex(), output);
  }

  // int32 sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.AgeSexInfo)
}

size_t AgeSexInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.AgeSexInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.Interval ageInterval = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ageinterval_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ageinterval(static_cast<int>(i)));
    }
  }

  // bool isIncludeAge = 1;
  if (this->isincludeage() != 0) {
    total_size += 1 + 1;
  }

  // bool isIncludeSex = 3;
  if (this->isincludesex() != 0) {
    total_size += 1 + 1;
  }

  // int32 sex = 4;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgeSexInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AgeSexInfo*>(&from));
}

void AgeSexInfo::MergeFrom(const AgeSexInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.AgeSexInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ageinterval_.MergeFrom(from.ageinterval_);
  if (from.isincludeage() != 0) {
    set_isincludeage(from.isincludeage());
  }
  if (from.isincludesex() != 0) {
    set_isincludesex(from.isincludesex());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
}

void AgeSexInfo::CopyFrom(const AgeSexInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.AgeSexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgeSexInfo::IsInitialized() const {
  return true;
}

void AgeSexInfo::Swap(AgeSexInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgeSexInfo::InternalSwap(AgeSexInfo* other) {
  using std::swap;
  CastToBase(&ageinterval_)->InternalSwap(CastToBase(&other->ageinterval_));
  swap(isincludeage_, other->isincludeage_);
  swap(isincludesex_, other->isincludesex_);
  swap(sex_, other->sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AgeSexInfo::GetTypeName() const {
  return "so_rtrs.AgeSexInfo";
}


// ===================================================================

void IncomeCityInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncomeCityInfo::kIsIncludeIncomeFieldNumber;
const int IncomeCityInfo::kIncomeIntervalFieldNumber;
const int IncomeCityInfo::kIsIncludeCityFieldNumber;
const int IncomeCityInfo::kVecCityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncomeCityInfo::IncomeCityInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_IncomeCityInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.IncomeCityInfo)
}
IncomeCityInfo::IncomeCityInfo(const IncomeCityInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      incomeinterval_(from.incomeinterval_),
      veccityid_(from.veccityid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isincludeincome_, &from.isincludeincome_,
    static_cast<size_t>(reinterpret_cast<char*>(&isincludecity_) -
    reinterpret_cast<char*>(&isincludeincome_)) + sizeof(isincludecity_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.IncomeCityInfo)
}

void IncomeCityInfo::SharedCtor() {
  ::memset(&isincludeincome_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isincludecity_) -
      reinterpret_cast<char*>(&isincludeincome_)) + sizeof(isincludecity_));
}

IncomeCityInfo::~IncomeCityInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.IncomeCityInfo)
  SharedDtor();
}

void IncomeCityInfo::SharedDtor() {
}

void IncomeCityInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IncomeCityInfo& IncomeCityInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_IncomeCityInfo.base);
  return *internal_default_instance();
}


void IncomeCityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.IncomeCityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  incomeinterval_.Clear();
  veccityid_.Clear();
  ::memset(&isincludeincome_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isincludecity_) -
      reinterpret_cast<char*>(&isincludeincome_)) + sizeof(isincludecity_));
  _internal_metadata_.Clear();
}

bool IncomeCityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.IncomeCityInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isIncludeIncome = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isincludeincome_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.Interval incomeInterval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_incomeinterval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isIncludeCity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isincludecity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vecCityId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_veccityid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_veccityid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.IncomeCityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.IncomeCityInfo)
  return false;
#undef DO_
}

void IncomeCityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.IncomeCityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isIncludeIncome = 1;
  if (this->isincludeincome() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isincludeincome(), output);
  }

  // repeated .so_rtrs.Interval incomeInterval = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->incomeinterval_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->incomeinterval(static_cast<int>(i)),
      output);
  }

  // bool isIncludeCity = 3;
  if (this->isincludecity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isincludecity(), output);
  }

  // repeated uint32 vecCityId = 4;
  if (this->veccityid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _veccityid_cached_byte_size_));
  }
  for (int i = 0, n = this->veccityid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->veccityid(i), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.IncomeCityInfo)
}

size_t IncomeCityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.IncomeCityInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.Interval incomeInterval = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->incomeinterval_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->incomeinterval(static_cast<int>(i)));
    }
  }

  // repeated uint32 vecCityId = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->veccityid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _veccityid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool isIncludeIncome = 1;
  if (this->isincludeincome() != 0) {
    total_size += 1 + 1;
  }

  // bool isIncludeCity = 3;
  if (this->isincludecity() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncomeCityInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IncomeCityInfo*>(&from));
}

void IncomeCityInfo::MergeFrom(const IncomeCityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.IncomeCityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  incomeinterval_.MergeFrom(from.incomeinterval_);
  veccityid_.MergeFrom(from.veccityid_);
  if (from.isincludeincome() != 0) {
    set_isincludeincome(from.isincludeincome());
  }
  if (from.isincludecity() != 0) {
    set_isincludecity(from.isincludecity());
  }
}

void IncomeCityInfo::CopyFrom(const IncomeCityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.IncomeCityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncomeCityInfo::IsInitialized() const {
  return true;
}

void IncomeCityInfo::Swap(IncomeCityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncomeCityInfo::InternalSwap(IncomeCityInfo* other) {
  using std::swap;
  CastToBase(&incomeinterval_)->InternalSwap(CastToBase(&other->incomeinterval_));
  veccityid_.InternalSwap(&other->veccityid_);
  swap(isincludeincome_, other->isincludeincome_);
  swap(isincludecity_, other->isincludecity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string IncomeCityInfo::GetTypeName() const {
  return "so_rtrs.IncomeCityInfo";
}


// ===================================================================

RuleAppDirectInfo_MapTagInfoEntry_DoNotUse::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse() {}
RuleAppDirectInfo_MapTagInfoEntry_DoNotUse::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RuleAppDirectInfo_MapTagInfoEntry_DoNotUse::MergeFrom(const RuleAppDirectInfo_MapTagInfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void RuleAppDirectInfo::InitAsDefaultInstance() {
  ::so_rtrs::_RuleAppDirectInfo_default_instance_._instance.get_mutable()->agesexinfo_ = const_cast< ::so_rtrs::AgeSexInfo*>(
      ::so_rtrs::AgeSexInfo::internal_default_instance());
  ::so_rtrs::_RuleAppDirectInfo_default_instance_._instance.get_mutable()->incomecityinfo_ = const_cast< ::so_rtrs::IncomeCityInfo*>(
      ::so_rtrs::IncomeCityInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuleAppDirectInfo::kMapTagInfoFieldNumber;
const int RuleAppDirectInfo::kExposePercentFieldNumber;
const int RuleAppDirectInfo::kVecInstallAppIdKaiFieldNumber;
const int RuleAppDirectInfo::kVecUnInstallAppIdKaiFieldNumber;
const int RuleAppDirectInfo::kAgeSexInfoFieldNumber;
const int RuleAppDirectInfo::kIncomeCityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuleAppDirectInfo::RuleAppDirectInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_RuleAppDirectInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.RuleAppDirectInfo)
}
RuleAppDirectInfo::RuleAppDirectInfo(const RuleAppDirectInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      vecinstallappidkai_(from.vecinstallappidkai_),
      vecuninstallappidkai_(from.vecuninstallappidkai_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  maptaginfo_.MergeFrom(from.maptaginfo_);
  if (from.has_agesexinfo()) {
    agesexinfo_ = new ::so_rtrs::AgeSexInfo(*from.agesexinfo_);
  } else {
    agesexinfo_ = NULL;
  }
  if (from.has_incomecityinfo()) {
    incomecityinfo_ = new ::so_rtrs::IncomeCityInfo(*from.incomecityinfo_);
  } else {
    incomecityinfo_ = NULL;
  }
  exposepercent_ = from.exposepercent_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.RuleAppDirectInfo)
}

void RuleAppDirectInfo::SharedCtor() {
  ::memset(&agesexinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exposepercent_) -
      reinterpret_cast<char*>(&agesexinfo_)) + sizeof(exposepercent_));
}

RuleAppDirectInfo::~RuleAppDirectInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.RuleAppDirectInfo)
  SharedDtor();
}

void RuleAppDirectInfo::SharedDtor() {
  if (this != internal_default_instance()) delete agesexinfo_;
  if (this != internal_default_instance()) delete incomecityinfo_;
}

void RuleAppDirectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RuleAppDirectInfo& RuleAppDirectInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_RuleAppDirectInfo.base);
  return *internal_default_instance();
}


void RuleAppDirectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.RuleAppDirectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maptaginfo_.Clear();
  vecinstallappidkai_.Clear();
  vecuninstallappidkai_.Clear();
  if (GetArenaNoVirtual() == NULL && agesexinfo_ != NULL) {
    delete agesexinfo_;
  }
  agesexinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && incomecityinfo_ != NULL) {
    delete incomecityinfo_;
  }
  incomecityinfo_ = NULL;
  exposepercent_ = 0;
  _internal_metadata_.Clear();
}

bool RuleAppDirectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.RuleAppDirectInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, double> mapTagInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          RuleAppDirectInfo_MapTagInfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RuleAppDirectInfo_MapTagInfoEntry_DoNotUse,
              ::google::protobuf::uint32, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, double > > parser(&maptaginfo_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double exposePercent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exposepercent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vecInstallAppIdKai = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vecinstallappidkai())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_vecinstallappidkai())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vecUnInstallAppIdKai = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vecuninstallappidkai())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_vecuninstallappidkai())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.AgeSexInfo ageSexInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_agesexinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.IncomeCityInfo incomeCityInfo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_incomecityinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.RuleAppDirectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.RuleAppDirectInfo)
  return false;
#undef DO_
}

void RuleAppDirectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.RuleAppDirectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, double> mapTagInfo = 1;
  if (!this->maptaginfo().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->maptaginfo().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->maptaginfo().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, double >::const_iterator
          it = this->maptaginfo().begin();
          it != this->maptaginfo().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RuleAppDirectInfo_MapTagInfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(maptaginfo_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<RuleAppDirectInfo_MapTagInfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, double >::const_iterator
          it = this->maptaginfo().begin();
          it != this->maptaginfo().end(); ++it) {
        entry.reset(maptaginfo_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *entry, output);
      }
    }
  }

  // double exposePercent = 2;
  if (this->exposepercent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->exposepercent(), output);
  }

  // repeated uint32 vecInstallAppIdKai = 3;
  if (this->vecinstallappidkai_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vecinstallappidkai_cached_byte_size_));
  }
  for (int i = 0, n = this->vecinstallappidkai_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vecinstallappidkai(i), output);
  }

  // repeated uint32 vecUnInstallAppIdKai = 4;
  if (this->vecuninstallappidkai_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vecuninstallappidkai_cached_byte_size_));
  }
  for (int i = 0, n = this->vecuninstallappidkai_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vecuninstallappidkai(i), output);
  }

  // .so_rtrs.AgeSexInfo ageSexInfo = 5;
  if (this->has_agesexinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_agesexinfo(), output);
  }

  // .so_rtrs.IncomeCityInfo incomeCityInfo = 6;
  if (this->has_incomecityinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_incomecityinfo(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.RuleAppDirectInfo)
}

size_t RuleAppDirectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.RuleAppDirectInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<uint32, double> mapTagInfo = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->maptaginfo_size());
  {
    ::std::unique_ptr<RuleAppDirectInfo_MapTagInfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, double >::const_iterator
        it = this->maptaginfo().begin();
        it != this->maptaginfo().end(); ++it) {
      entry.reset(maptaginfo_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 vecInstallAppIdKai = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vecinstallappidkai_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vecinstallappidkai_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vecUnInstallAppIdKai = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vecuninstallappidkai_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vecuninstallappidkai_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .so_rtrs.AgeSexInfo ageSexInfo = 5;
  if (this->has_agesexinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *agesexinfo_);
  }

  // .so_rtrs.IncomeCityInfo incomeCityInfo = 6;
  if (this->has_incomecityinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *incomecityinfo_);
  }

  // double exposePercent = 2;
  if (this->exposepercent() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RuleAppDirectInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RuleAppDirectInfo*>(&from));
}

void RuleAppDirectInfo::MergeFrom(const RuleAppDirectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.RuleAppDirectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  maptaginfo_.MergeFrom(from.maptaginfo_);
  vecinstallappidkai_.MergeFrom(from.vecinstallappidkai_);
  vecuninstallappidkai_.MergeFrom(from.vecuninstallappidkai_);
  if (from.has_agesexinfo()) {
    mutable_agesexinfo()->::so_rtrs::AgeSexInfo::MergeFrom(from.agesexinfo());
  }
  if (from.has_incomecityinfo()) {
    mutable_incomecityinfo()->::so_rtrs::IncomeCityInfo::MergeFrom(from.incomecityinfo());
  }
  if (from.exposepercent() != 0) {
    set_exposepercent(from.exposepercent());
  }
}

void RuleAppDirectInfo::CopyFrom(const RuleAppDirectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.RuleAppDirectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuleAppDirectInfo::IsInitialized() const {
  return true;
}

void RuleAppDirectInfo::Swap(RuleAppDirectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuleAppDirectInfo::InternalSwap(RuleAppDirectInfo* other) {
  using std::swap;
  maptaginfo_.Swap(&other->maptaginfo_);
  vecinstallappidkai_.InternalSwap(&other->vecinstallappidkai_);
  vecuninstallappidkai_.InternalSwap(&other->vecuninstallappidkai_);
  swap(agesexinfo_, other->agesexinfo_);
  swap(incomecityinfo_, other->incomecityinfo_);
  swap(exposepercent_, other->exposepercent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string RuleAppDirectInfo::GetTypeName() const {
  return "so_rtrs.RuleAppDirectInfo";
}


// ===================================================================

RecommendInfo_MapItemEntry_DoNotUse::RecommendInfo_MapItemEntry_DoNotUse() {}
RecommendInfo_MapItemEntry_DoNotUse::RecommendInfo_MapItemEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RecommendInfo_MapItemEntry_DoNotUse::MergeFrom(const RecommendInfo_MapItemEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

RecommendInfo_MapContextEntry_DoNotUse::RecommendInfo_MapContextEntry_DoNotUse() {}
RecommendInfo_MapContextEntry_DoNotUse::RecommendInfo_MapContextEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RecommendInfo_MapContextEntry_DoNotUse::MergeFrom(const RecommendInfo_MapContextEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void RecommendInfo::InitAsDefaultInstance() {
  ::so_rtrs::_RecommendInfo_default_instance_._instance.get_mutable()->subalginfo_ = const_cast< ::so_rtrs::SceneSubAlgInfo*>(
      ::so_rtrs::SceneSubAlgInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecommendInfo::kSceneIdFieldNumber;
const int RecommendInfo::kSceneSubAlgFieldNumber;
const int RecommendInfo::kContextFieldNumber;
const int RecommendInfo::kPlatformVersionFieldNumber;
const int RecommendInfo::kVecItemFieldNumber;
const int RecommendInfo::kMapItemFieldNumber;
const int RecommendInfo::kTraceIdFieldNumber;
const int RecommendInfo::kTotalResultFieldNumber;
const int RecommendInfo::kIndexBeginFieldNumber;
const int RecommendInfo::kIndexEndFieldNumber;
const int RecommendInfo::kQueryFieldNumber;
const int RecommendInfo::kMapContextFieldNumber;
const int RecommendInfo::kPositionIdFieldNumber;
const int RecommendInfo::kValueModifyParamAFieldNumber;
const int RecommendInfo::kValueModifyParamTFieldNumber;
const int RecommendInfo::kValueModifyParamFactorFieldNumber;
const int RecommendInfo::kSubAlgInfoFieldNumber;
const int RecommendInfo::kSceneInfoFieldNumber;
const int RecommendInfo::kPositionIdStrFieldNumber;
const int RecommendInfo::kWordSegFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecommendInfo::RecommendInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_RecommendInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.RecommendInfo)
}
RecommendInfo::RecommendInfo(const RecommendInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      vecitem_(from.vecitem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mapitem_.MergeFrom(from.mapitem_);
  mapcontext_.MergeFrom(from.mapcontext_);
  scenesubalg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scenesubalg().size() > 0) {
    scenesubalg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scenesubalg_);
  }
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context().size() > 0) {
    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  traceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.traceid().size() > 0) {
    traceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traceid_);
  }
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  sceneinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sceneinfo().size() > 0) {
    sceneinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sceneinfo_);
  }
  positionidstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.positionidstr().size() > 0) {
    positionidstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.positionidstr_);
  }
  word_seg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.word_seg().size() > 0) {
    word_seg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_seg_);
  }
  if (from.has_subalginfo()) {
    subalginfo_ = new ::so_rtrs::SceneSubAlgInfo(*from.subalginfo_);
  } else {
    subalginfo_ = NULL;
  }
  ::memcpy(&sceneid_, &from.sceneid_,
    static_cast<size_t>(reinterpret_cast<char*>(&indexend_) -
    reinterpret_cast<char*>(&sceneid_)) + sizeof(indexend_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.RecommendInfo)
}

void RecommendInfo::SharedCtor() {
  scenesubalg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  positionidstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_seg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&subalginfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&indexend_) -
      reinterpret_cast<char*>(&subalginfo_)) + sizeof(indexend_));
}

RecommendInfo::~RecommendInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.RecommendInfo)
  SharedDtor();
}

void RecommendInfo::SharedDtor() {
  scenesubalg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  positionidstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_seg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete subalginfo_;
}

void RecommendInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecommendInfo& RecommendInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_RecommendInfo.base);
  return *internal_default_instance();
}


void RecommendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.RecommendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecitem_.Clear();
  mapitem_.Clear();
  mapcontext_.Clear();
  scenesubalg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  positionidstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_seg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && subalginfo_ != NULL) {
    delete subalginfo_;
  }
  subalginfo_ = NULL;
  ::memset(&sceneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&indexend_) -
      reinterpret_cast<char*>(&sceneid_)) + sizeof(indexend_));
  _internal_metadata_.Clear();
}

bool RecommendInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.RecommendInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .so_rtrs.SCENE_CMD_ID sceneId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sceneid(static_cast< ::so_rtrs::SCENE_CMD_ID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sceneSubAlg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scenesubalg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scenesubalg().data(), static_cast<int>(this->scenesubalg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.sceneSubAlg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context().data(), static_cast<int>(this->context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 platformVersion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platformversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.RecommendItem vecItem = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vecitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, .so_rtrs.RecommendItem> mapItem = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          RecommendInfo_MapItemEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RecommendInfo_MapItemEntry_DoNotUse,
              ::google::protobuf::int64, ::so_rtrs::RecommendItem,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::so_rtrs::RecommendItem > > parser(&mapitem_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string traceId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_traceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->traceid().data(), static_cast<int>(this->traceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.traceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 totalResult = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 indexBegin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexbegin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 indexEnd = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> mapContext = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          RecommendInfo_MapContextEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RecommendInfo_MapContextEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&mapcontext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.MapContextEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.MapContextEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 positionId = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &positionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double valueModifyParamA = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valuemodifyparama_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double valueModifyParamT = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valuemodifyparamt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double valueModifyParamFactor = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valuemodifyparamfactor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.SceneSubAlgInfo subAlgInfo = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subalginfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sceneInfo = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sceneinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sceneinfo().data(), static_cast<int>(this->sceneinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.sceneInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string positionIdStr = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_positionidstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->positionidstr().data(), static_cast<int>(this->positionidstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.positionIdStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string word_seg = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_word_seg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->word_seg().data(), static_cast<int>(this->word_seg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecommendInfo.word_seg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.RecommendInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.RecommendInfo)
  return false;
#undef DO_
}

void RecommendInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.RecommendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .so_rtrs.SCENE_CMD_ID sceneId = 1;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sceneid(), output);
  }

  // string sceneSubAlg = 2;
  if (this->scenesubalg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scenesubalg().data(), static_cast<int>(this->scenesubalg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.sceneSubAlg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scenesubalg(), output);
  }

  // string context = 3;
  if (this->context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context().data(), static_cast<int>(this->context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->context(), output);
  }

  // int32 platformVersion = 4;
  if (this->platformversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->platformversion(), output);
  }

  // repeated .so_rtrs.RecommendItem vecItem = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vecitem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->vecitem(static_cast<int>(i)),
      output);
  }

  // map<int64, .so_rtrs.RecommendItem> mapItem = 6;
  if (!this->mapitem().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::so_rtrs::RecommendItem >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->mapitem().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->mapitem().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::so_rtrs::RecommendItem >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::so_rtrs::RecommendItem >::const_iterator
          it = this->mapitem().begin();
          it != this->mapitem().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RecommendInfo_MapItemEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(mapitem_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            6, *entry, output);
      }
    } else {
      ::std::unique_ptr<RecommendInfo_MapItemEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::so_rtrs::RecommendItem >::const_iterator
          it = this->mapitem().begin();
          it != this->mapitem().end(); ++it) {
        entry.reset(mapitem_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            6, *entry, output);
      }
    }
  }

  // string traceId = 7;
  if (this->traceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traceid().data(), static_cast<int>(this->traceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.traceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->traceid(), output);
  }

  // int32 totalResult = 8;
  if (this->totalresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->totalresult(), output);
  }

  // int32 indexBegin = 9;
  if (this->indexbegin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->indexbegin(), output);
  }

  // int32 indexEnd = 10;
  if (this->indexend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->indexend(), output);
  }

  // string query = 11;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->query(), output);
  }

  // map<string, string> mapContext = 12;
  if (!this->mapcontext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecommendInfo.MapContextEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecommendInfo.MapContextEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->mapcontext().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->mapcontext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->mapcontext().begin();
          it != this->mapcontext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RecommendInfo_MapContextEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(mapcontext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            12, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RecommendInfo_MapContextEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->mapcontext().begin();
          it != this->mapcontext().end(); ++it) {
        entry.reset(mapcontext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            12, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 positionId = 13;
  if (this->positionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->positionid(), output);
  }

  // double valueModifyParamA = 14;
  if (this->valuemodifyparama() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->valuemodifyparama(), output);
  }

  // double valueModifyParamT = 15;
  if (this->valuemodifyparamt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->valuemodifyparamt(), output);
  }

  // double valueModifyParamFactor = 16;
  if (this->valuemodifyparamfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->valuemodifyparamfactor(), output);
  }

  // .so_rtrs.SceneSubAlgInfo subAlgInfo = 17;
  if (this->has_subalginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, this->_internal_subalginfo(), output);
  }

  // string sceneInfo = 18;
  if (this->sceneinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sceneinfo().data(), static_cast<int>(this->sceneinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.sceneInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->sceneinfo(), output);
  }

  // string positionIdStr = 19;
  if (this->positionidstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->positionidstr().data(), static_cast<int>(this->positionidstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.positionIdStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->positionidstr(), output);
  }

  // string word_seg = 20;
  if (this->word_seg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->word_seg().data(), static_cast<int>(this->word_seg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecommendInfo.word_seg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->word_seg(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.RecommendInfo)
}

size_t RecommendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.RecommendInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.RecommendItem vecItem = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vecitem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vecitem(static_cast<int>(i)));
    }
  }

  // map<int64, .so_rtrs.RecommendItem> mapItem = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mapitem_size());
  {
    ::std::unique_ptr<RecommendInfo_MapItemEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::so_rtrs::RecommendItem >::const_iterator
        it = this->mapitem().begin();
        it != this->mapitem().end(); ++it) {
      entry.reset(mapitem_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> mapContext = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mapcontext_size());
  {
    ::std::unique_ptr<RecommendInfo_MapContextEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->mapcontext().begin();
        it != this->mapcontext().end(); ++it) {
      entry.reset(mapcontext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string sceneSubAlg = 2;
  if (this->scenesubalg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scenesubalg());
  }

  // string context = 3;
  if (this->context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context());
  }

  // string traceId = 7;
  if (this->traceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->traceid());
  }

  // string query = 11;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // string sceneInfo = 18;
  if (this->sceneinfo().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sceneinfo());
  }

  // string positionIdStr = 19;
  if (this->positionidstr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->positionidstr());
  }

  // string word_seg = 20;
  if (this->word_seg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->word_seg());
  }

  // .so_rtrs.SceneSubAlgInfo subAlgInfo = 17;
  if (this->has_subalginfo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subalginfo_);
  }

  // .so_rtrs.SCENE_CMD_ID sceneId = 1;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sceneid());
  }

  // int32 platformVersion = 4;
  if (this->platformversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platformversion());
  }

  // int32 totalResult = 8;
  if (this->totalresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalresult());
  }

  // int32 indexBegin = 9;
  if (this->indexbegin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->indexbegin());
  }

  // int64 positionId = 13;
  if (this->positionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->positionid());
  }

  // double valueModifyParamA = 14;
  if (this->valuemodifyparama() != 0) {
    total_size += 1 + 8;
  }

  // double valueModifyParamT = 15;
  if (this->valuemodifyparamt() != 0) {
    total_size += 1 + 8;
  }

  // double valueModifyParamFactor = 16;
  if (this->valuemodifyparamfactor() != 0) {
    total_size += 2 + 8;
  }

  // int32 indexEnd = 10;
  if (this->indexend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->indexend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecommendInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RecommendInfo*>(&from));
}

void RecommendInfo::MergeFrom(const RecommendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.RecommendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vecitem_.MergeFrom(from.vecitem_);
  mapitem_.MergeFrom(from.mapitem_);
  mapcontext_.MergeFrom(from.mapcontext_);
  if (from.scenesubalg().size() > 0) {

    scenesubalg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scenesubalg_);
  }
  if (from.context().size() > 0) {

    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.traceid().size() > 0) {

    traceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traceid_);
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.sceneinfo().size() > 0) {

    sceneinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sceneinfo_);
  }
  if (from.positionidstr().size() > 0) {

    positionidstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.positionidstr_);
  }
  if (from.word_seg().size() > 0) {

    word_seg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_seg_);
  }
  if (from.has_subalginfo()) {
    mutable_subalginfo()->::so_rtrs::SceneSubAlgInfo::MergeFrom(from.subalginfo());
  }
  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
  if (from.platformversion() != 0) {
    set_platformversion(from.platformversion());
  }
  if (from.totalresult() != 0) {
    set_totalresult(from.totalresult());
  }
  if (from.indexbegin() != 0) {
    set_indexbegin(from.indexbegin());
  }
  if (from.positionid() != 0) {
    set_positionid(from.positionid());
  }
  if (from.valuemodifyparama() != 0) {
    set_valuemodifyparama(from.valuemodifyparama());
  }
  if (from.valuemodifyparamt() != 0) {
    set_valuemodifyparamt(from.valuemodifyparamt());
  }
  if (from.valuemodifyparamfactor() != 0) {
    set_valuemodifyparamfactor(from.valuemodifyparamfactor());
  }
  if (from.indexend() != 0) {
    set_indexend(from.indexend());
  }
}

void RecommendInfo::CopyFrom(const RecommendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.RecommendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecommendInfo::IsInitialized() const {
  return true;
}

void RecommendInfo::Swap(RecommendInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecommendInfo::InternalSwap(RecommendInfo* other) {
  using std::swap;
  CastToBase(&vecitem_)->InternalSwap(CastToBase(&other->vecitem_));
  mapitem_.Swap(&other->mapitem_);
  mapcontext_.Swap(&other->mapcontext_);
  scenesubalg_.Swap(&other->scenesubalg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  context_.Swap(&other->context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  traceid_.Swap(&other->traceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sceneinfo_.Swap(&other->sceneinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  positionidstr_.Swap(&other->positionidstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  word_seg_.Swap(&other->word_seg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(subalginfo_, other->subalginfo_);
  swap(sceneid_, other->sceneid_);
  swap(platformversion_, other->platformversion_);
  swap(totalresult_, other->totalresult_);
  swap(indexbegin_, other->indexbegin_);
  swap(positionid_, other->positionid_);
  swap(valuemodifyparama_, other->valuemodifyparama_);
  swap(valuemodifyparamt_, other->valuemodifyparamt_);
  swap(valuemodifyparamfactor_, other->valuemodifyparamfactor_);
  swap(indexend_, other->indexend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string RecommendInfo::GetTypeName() const {
  return "so_rtrs.RecommendInfo";
}


// ===================================================================

RecomRequest_SceneInsulateContextEntry_DoNotUse::RecomRequest_SceneInsulateContextEntry_DoNotUse() {}
RecomRequest_SceneInsulateContextEntry_DoNotUse::RecomRequest_SceneInsulateContextEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RecomRequest_SceneInsulateContextEntry_DoNotUse::MergeFrom(const RecomRequest_SceneInsulateContextEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void RecomRequest::InitAsDefaultInstance() {
  ::so_rtrs::_RecomRequest_default_instance_._instance.get_mutable()->device_ = const_cast< ::so_rtrs::DeviceInfo*>(
      ::so_rtrs::DeviceInfo::internal_default_instance());
  ::so_rtrs::_RecomRequest_default_instance_._instance.get_mutable()->location_ = const_cast< ::so_rtrs::LocationInfo*>(
      ::so_rtrs::LocationInfo::internal_default_instance());
  ::so_rtrs::_RecomRequest_default_instance_._instance.get_mutable()->network_ = const_cast< ::so_rtrs::NetworkInfo*>(
      ::so_rtrs::NetworkInfo::internal_default_instance());
  ::so_rtrs::_RecomRequest_default_instance_._instance.get_mutable()->recommend_ = const_cast< ::so_rtrs::RecommendInfo*>(
      ::so_rtrs::RecommendInfo::internal_default_instance());
}
void RecomRequest::clear_vectestinfo() {
  vectestinfo_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecomRequest::kDeviceFieldNumber;
const int RecomRequest::kLocationFieldNumber;
const int RecomRequest::kNetworkFieldNumber;
const int RecomRequest::kRecommendFieldNumber;
const int RecomRequest::kVecTestInfoFieldNumber;
const int RecomRequest::kReqIdFieldNumber;
const int RecomRequest::kTimeoutFieldNumber;
const int RecomRequest::kAppKeyFieldNumber;
const int RecomRequest::kNeedDebugFieldNumber;
const int RecomRequest::kSceneInsulateContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecomRequest::RecomRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_RecomRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.RecomRequest)
}
RecomRequest::RecomRequest(const RecomRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      vectestinfo_(from.vectestinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sceneinsulatecontext_.MergeFrom(from.sceneinsulatecontext_);
  reqid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reqid().size() > 0) {
    reqid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.has_device()) {
    device_ = new ::so_rtrs::DeviceInfo(*from.device_);
  } else {
    device_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::so_rtrs::LocationInfo(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_network()) {
    network_ = new ::so_rtrs::NetworkInfo(*from.network_);
  } else {
    network_ = NULL;
  }
  if (from.has_recommend()) {
    recommend_ = new ::so_rtrs::RecommendInfo(*from.recommend_);
  } else {
    recommend_ = NULL;
  }
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&need_debug_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(need_debug_));
  // @@protoc_insertion_point(copy_constructor:so_rtrs.RecomRequest)
}

void RecomRequest::SharedCtor() {
  reqid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&need_debug_) -
      reinterpret_cast<char*>(&device_)) + sizeof(need_debug_));
}

RecomRequest::~RecomRequest() {
  // @@protoc_insertion_point(destructor:so_rtrs.RecomRequest)
  SharedDtor();
}

void RecomRequest::SharedDtor() {
  reqid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete network_;
  if (this != internal_default_instance()) delete recommend_;
}

void RecomRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecomRequest& RecomRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_RecomRequest.base);
  return *internal_default_instance();
}


void RecomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.RecomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vectestinfo_.Clear();
  sceneinsulatecontext_.Clear();
  reqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_ != NULL) {
    delete device_;
  }
  device_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && network_ != NULL) {
    delete network_;
  }
  network_ = NULL;
  if (GetArenaNoVirtual() == NULL && recommend_ != NULL) {
    delete recommend_;
  }
  recommend_ = NULL;
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&need_debug_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(need_debug_));
  _internal_metadata_.Clear();
}

bool RecomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.RecomRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .so_rtrs.DeviceInfo device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.LocationInfo location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.NetworkInfo network = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.RecommendInfo recommend = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recommend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.AlgMultiTestInfo vecTestInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vectestinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reqId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reqid().data(), static_cast<int>(this->reqid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomRequest.reqId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeout = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appKey = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomRequest.appKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool need_debug = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .so_rtrs.SeviceSceneInsulateInfo> sceneInsulateContext = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          RecomRequest_SceneInsulateContextEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RecomRequest_SceneInsulateContextEntry_DoNotUse,
              ::std::string, ::so_rtrs::SeviceSceneInsulateInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::so_rtrs::SeviceSceneInsulateInfo > > parser(&sceneinsulatecontext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomRequest.SceneInsulateContextEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.RecomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.RecomRequest)
  return false;
#undef DO_
}

void RecomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.RecomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .so_rtrs.DeviceInfo device = 1;
  if (this->has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_device(), output);
  }

  // .so_rtrs.LocationInfo location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_location(), output);
  }

  // .so_rtrs.NetworkInfo network = 3;
  if (this->has_network()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_network(), output);
  }

  // .so_rtrs.RecommendInfo recommend = 4;
  if (this->has_recommend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_recommend(), output);
  }

  // repeated .so_rtrs.AlgMultiTestInfo vecTestInfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vectestinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->vectestinfo(static_cast<int>(i)),
      output);
  }

  // string reqId = 6;
  if (this->reqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqid().data(), static_cast<int>(this->reqid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecomRequest.reqId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->reqid(), output);
  }

  // int32 timeout = 7;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->timeout(), output);
  }

  // string appKey = 8;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecomRequest.appKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->appkey(), output);
  }

  // bool need_debug = 9;
  if (this->need_debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->need_debug(), output);
  }

  // map<string, .so_rtrs.SeviceSceneInsulateInfo> sceneInsulateContext = 10;
  if (!this->sceneinsulatecontext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::so_rtrs::SeviceSceneInsulateInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecomRequest.SceneInsulateContextEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->sceneinsulatecontext().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->sceneinsulatecontext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::so_rtrs::SeviceSceneInsulateInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::so_rtrs::SeviceSceneInsulateInfo >::const_iterator
          it = this->sceneinsulatecontext().begin();
          it != this->sceneinsulatecontext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RecomRequest_SceneInsulateContextEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sceneinsulatecontext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            10, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RecomRequest_SceneInsulateContextEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::so_rtrs::SeviceSceneInsulateInfo >::const_iterator
          it = this->sceneinsulatecontext().begin();
          it != this->sceneinsulatecontext().end(); ++it) {
        entry.reset(sceneinsulatecontext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            10, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.RecomRequest)
}

size_t RecomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.RecomRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.AlgMultiTestInfo vecTestInfo = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vectestinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vectestinfo(static_cast<int>(i)));
    }
  }

  // map<string, .so_rtrs.SeviceSceneInsulateInfo> sceneInsulateContext = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sceneinsulatecontext_size());
  {
    ::std::unique_ptr<RecomRequest_SceneInsulateContextEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::so_rtrs::SeviceSceneInsulateInfo >::const_iterator
        it = this->sceneinsulatecontext().begin();
        it != this->sceneinsulatecontext().end(); ++it) {
      entry.reset(sceneinsulatecontext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string reqId = 6;
  if (this->reqid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reqid());
  }

  // string appKey = 8;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // .so_rtrs.DeviceInfo device = 1;
  if (this->has_device()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_);
  }

  // .so_rtrs.LocationInfo location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .so_rtrs.NetworkInfo network = 3;
  if (this->has_network()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *network_);
  }

  // .so_rtrs.RecommendInfo recommend = 4;
  if (this->has_recommend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recommend_);
  }

  // int32 timeout = 7;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  // bool need_debug = 9;
  if (this->need_debug() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecomRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RecomRequest*>(&from));
}

void RecomRequest::MergeFrom(const RecomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.RecomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vectestinfo_.MergeFrom(from.vectestinfo_);
  sceneinsulatecontext_.MergeFrom(from.sceneinsulatecontext_);
  if (from.reqid().size() > 0) {

    reqid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.has_device()) {
    mutable_device()->::so_rtrs::DeviceInfo::MergeFrom(from.device());
  }
  if (from.has_location()) {
    mutable_location()->::so_rtrs::LocationInfo::MergeFrom(from.location());
  }
  if (from.has_network()) {
    mutable_network()->::so_rtrs::NetworkInfo::MergeFrom(from.network());
  }
  if (from.has_recommend()) {
    mutable_recommend()->::so_rtrs::RecommendInfo::MergeFrom(from.recommend());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.need_debug() != 0) {
    set_need_debug(from.need_debug());
  }
}

void RecomRequest::CopyFrom(const RecomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.RecomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecomRequest::IsInitialized() const {
  return true;
}

void RecomRequest::Swap(RecomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecomRequest::InternalSwap(RecomRequest* other) {
  using std::swap;
  CastToBase(&vectestinfo_)->InternalSwap(CastToBase(&other->vectestinfo_));
  sceneinsulatecontext_.Swap(&other->sceneinsulatecontext_);
  reqid_.Swap(&other->reqid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  appkey_.Swap(&other->appkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_, other->device_);
  swap(location_, other->location_);
  swap(network_, other->network_);
  swap(recommend_, other->recommend_);
  swap(timeout_, other->timeout_);
  swap(need_debug_, other->need_debug_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string RecomRequest::GetTypeName() const {
  return "so_rtrs.RecomRequest";
}


// ===================================================================

RecomResponse_DebugInfoEntry_DoNotUse::RecomResponse_DebugInfoEntry_DoNotUse() {}
RecomResponse_DebugInfoEntry_DoNotUse::RecomResponse_DebugInfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RecomResponse_DebugInfoEntry_DoNotUse::MergeFrom(const RecomResponse_DebugInfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

RecomResponse_DebugInfo2Entry_DoNotUse::RecomResponse_DebugInfo2Entry_DoNotUse() {}
RecomResponse_DebugInfo2Entry_DoNotUse::RecomResponse_DebugInfo2Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RecomResponse_DebugInfo2Entry_DoNotUse::MergeFrom(const RecomResponse_DebugInfo2Entry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void RecomResponse::InitAsDefaultInstance() {
  ::so_rtrs::_RecomResponse_default_instance_._instance.get_mutable()->recominfo_ = const_cast< ::so_rtrs::RecommendInfo*>(
      ::so_rtrs::RecommendInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecomResponse::kRetFieldNumber;
const int RecomResponse::kRetStrFieldNumber;
const int RecomResponse::kRecomInfoFieldNumber;
const int RecomResponse::kDebugInfoFieldNumber;
const int RecomResponse::kDebugInfo2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecomResponse::RecomResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_recommend_2eproto::scc_info_RecomResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.RecomResponse)
}
RecomResponse::RecomResponse(const RecomResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  debug_info_.MergeFrom(from.debug_info_);
  debug_info2_.MergeFrom(from.debug_info2_);
  retstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.retstr().size() > 0) {
    retstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retstr_);
  }
  if (from.has_recominfo()) {
    recominfo_ = new ::so_rtrs::RecommendInfo(*from.recominfo_);
  } else {
    recominfo_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.RecomResponse)
}

void RecomResponse::SharedCtor() {
  retstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&recominfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&recominfo_)) + sizeof(ret_));
}

RecomResponse::~RecomResponse() {
  // @@protoc_insertion_point(destructor:so_rtrs.RecomResponse)
  SharedDtor();
}

void RecomResponse::SharedDtor() {
  retstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete recominfo_;
}

void RecomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecomResponse& RecomResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_recommend_2eproto::scc_info_RecomResponse.base);
  return *internal_default_instance();
}


void RecomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.RecomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  debug_info_.Clear();
  debug_info2_.Clear();
  retstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && recominfo_ != NULL) {
    delete recominfo_;
  }
  recominfo_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool RecomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.RecomResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string retStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->retstr().data(), static_cast<int>(this->retstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomResponse.retStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.RecommendInfo recomInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> debug_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          RecomResponse_DebugInfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RecomResponse_DebugInfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&debug_info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomResponse.DebugInfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomResponse.DebugInfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .so_rtrs.RecomResponse> debug_info2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          RecomResponse_DebugInfo2Entry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              RecomResponse_DebugInfo2Entry_DoNotUse,
              ::std::string, ::so_rtrs::RecomResponse,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::so_rtrs::RecomResponse > > parser(&debug_info2_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RecomResponse.DebugInfo2Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.RecomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.RecomResponse)
  return false;
#undef DO_
}

void RecomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.RecomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // string retStr = 2;
  if (this->retstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retstr().data(), static_cast<int>(this->retstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RecomResponse.retStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retstr(), output);
  }

  // .so_rtrs.RecommendInfo recomInfo = 3;
  if (this->has_recominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_recominfo(), output);
  }

  // map<string, string> debug_info = 4;
  if (!this->debug_info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecomResponse.DebugInfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecomResponse.DebugInfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->debug_info().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->debug_info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->debug_info().begin();
          it != this->debug_info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RecomResponse_DebugInfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(debug_info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RecomResponse_DebugInfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->debug_info().begin();
          it != this->debug_info().end(); ++it) {
        entry.reset(debug_info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .so_rtrs.RecomResponse> debug_info2 = 5;
  if (!this->debug_info2().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::so_rtrs::RecomResponse >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "so_rtrs.RecomResponse.DebugInfo2Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->debug_info2().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->debug_info2().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::so_rtrs::RecomResponse >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::so_rtrs::RecomResponse >::const_iterator
          it = this->debug_info2().begin();
          it != this->debug_info2().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RecomResponse_DebugInfo2Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(debug_info2_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RecomResponse_DebugInfo2Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::so_rtrs::RecomResponse >::const_iterator
          it = this->debug_info2().begin();
          it != this->debug_info2().end(); ++it) {
        entry.reset(debug_info2_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.RecomResponse)
}

size_t RecomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.RecomResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<string, string> debug_info = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->debug_info_size());
  {
    ::std::unique_ptr<RecomResponse_DebugInfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->debug_info().begin();
        it != this->debug_info().end(); ++it) {
      entry.reset(debug_info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .so_rtrs.RecomResponse> debug_info2 = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->debug_info2_size());
  {
    ::std::unique_ptr<RecomResponse_DebugInfo2Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::so_rtrs::RecomResponse >::const_iterator
        it = this->debug_info2().begin();
        it != this->debug_info2().end(); ++it) {
      entry.reset(debug_info2_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string retStr = 2;
  if (this->retstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retstr());
  }

  // .so_rtrs.RecommendInfo recomInfo = 3;
  if (this->has_recominfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recominfo_);
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecomResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RecomResponse*>(&from));
}

void RecomResponse::MergeFrom(const RecomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.RecomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  debug_info_.MergeFrom(from.debug_info_);
  debug_info2_.MergeFrom(from.debug_info2_);
  if (from.retstr().size() > 0) {

    retstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retstr_);
  }
  if (from.has_recominfo()) {
    mutable_recominfo()->::so_rtrs::RecommendInfo::MergeFrom(from.recominfo());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void RecomResponse::CopyFrom(const RecomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.RecomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecomResponse::IsInitialized() const {
  return true;
}

void RecomResponse::Swap(RecomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecomResponse::InternalSwap(RecomResponse* other) {
  using std::swap;
  debug_info_.Swap(&other->debug_info_);
  debug_info2_.Swap(&other->debug_info2_);
  retstr_.Swap(&other->retstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(recominfo_, other->recominfo_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string RecomResponse::GetTypeName() const {
  return "so_rtrs.RecomResponse";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace so_rtrs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::AllTestInfo* Arena::CreateMaybeMessage< ::so_rtrs::AllTestInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::AllTestInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::PredictorInfo* Arena::CreateMaybeMessage< ::so_rtrs::PredictorInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::PredictorInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::SceneSubAlgInfo* Arena::CreateMaybeMessage< ::so_rtrs::SceneSubAlgInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::SceneSubAlgInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::SeviceSceneInsulateInfo* Arena::CreateMaybeMessage< ::so_rtrs::SeviceSceneInsulateInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::SeviceSceneInsulateInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::DeviceInfo* Arena::CreateMaybeMessage< ::so_rtrs::DeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::DeviceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::LocationInfo* Arena::CreateMaybeMessage< ::so_rtrs::LocationInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::LocationInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::NetworkInfo* Arena::CreateMaybeMessage< ::so_rtrs::NetworkInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::NetworkInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::AdItemInfo_IdeaMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::AdItemInfo_IdeaMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::AdItemInfo_IdeaMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::AdItemInfo* Arena::CreateMaybeMessage< ::so_rtrs::AdItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::AdItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecommendItem_MapContextEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RecommendItem_MapContextEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecommendItem_MapContextEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecommendItem* Arena::CreateMaybeMessage< ::so_rtrs::RecommendItem >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecommendItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::Interval* Arena::CreateMaybeMessage< ::so_rtrs::Interval >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::Interval >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::AgeSexInfo* Arena::CreateMaybeMessage< ::so_rtrs::AgeSexInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::AgeSexInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::IncomeCityInfo* Arena::CreateMaybeMessage< ::so_rtrs::IncomeCityInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::IncomeCityInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RuleAppDirectInfo_MapTagInfoEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RuleAppDirectInfo* Arena::CreateMaybeMessage< ::so_rtrs::RuleAppDirectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RuleAppDirectInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecommendInfo_MapItemEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RecommendInfo_MapItemEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecommendInfo_MapItemEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecommendInfo_MapContextEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RecommendInfo_MapContextEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecommendInfo_MapContextEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecommendInfo* Arena::CreateMaybeMessage< ::so_rtrs::RecommendInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecommendInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecomRequest_SceneInsulateContextEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RecomRequest_SceneInsulateContextEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecomRequest_SceneInsulateContextEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecomRequest* Arena::CreateMaybeMessage< ::so_rtrs::RecomRequest >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecomRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecomResponse_DebugInfoEntry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RecomResponse_DebugInfoEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecomResponse_DebugInfoEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecomResponse_DebugInfo2Entry_DoNotUse* Arena::CreateMaybeMessage< ::so_rtrs::RecomResponse_DebugInfo2Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecomResponse_DebugInfo2Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RecomResponse* Arena::CreateMaybeMessage< ::so_rtrs::RecomResponse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RecomResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
