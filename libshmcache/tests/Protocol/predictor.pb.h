// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: predictor.proto

#ifndef PROTOBUF_INCLUDED_predictor_2eproto
#define PROTOBUF_INCLUDED_predictor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry_lite.h>
#include <google/protobuf/map_field_lite.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_predictor_2eproto 

namespace protobuf_predictor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_predictor_2eproto
namespace so_predictor {
class ContextProfile;
class ContextProfileDefaultTypeInternal;
extern ContextProfileDefaultTypeInternal _ContextProfile_default_instance_;
class ContextProfile_IdeaMapEntry_DoNotUse;
class ContextProfile_IdeaMapEntry_DoNotUseDefaultTypeInternal;
extern ContextProfile_IdeaMapEntry_DoNotUseDefaultTypeInternal _ContextProfile_IdeaMapEntry_DoNotUse_default_instance_;
class ExperimentInfo;
class ExperimentInfoDefaultTypeInternal;
extern ExperimentInfoDefaultTypeInternal _ExperimentInfo_default_instance_;
class Interval;
class IntervalDefaultTypeInternal;
extern IntervalDefaultTypeInternal _Interval_default_instance_;
class ItemProfile;
class ItemProfileDefaultTypeInternal;
extern ItemProfileDefaultTypeInternal _ItemProfile_default_instance_;
class ItemScore;
class ItemScoreDefaultTypeInternal;
extern ItemScoreDefaultTypeInternal _ItemScore_default_instance_;
class PredictRequest;
class PredictRequestDefaultTypeInternal;
extern PredictRequestDefaultTypeInternal _PredictRequest_default_instance_;
class PredictRequest_ExtParamsEntry_DoNotUse;
class PredictRequest_ExtParamsEntry_DoNotUseDefaultTypeInternal;
extern PredictRequest_ExtParamsEntry_DoNotUseDefaultTypeInternal _PredictRequest_ExtParamsEntry_DoNotUse_default_instance_;
class PredictResponse;
class PredictResponseDefaultTypeInternal;
extern PredictResponseDefaultTypeInternal _PredictResponse_default_instance_;
class UserProfile;
class UserProfileDefaultTypeInternal;
extern UserProfileDefaultTypeInternal _UserProfile_default_instance_;
}  // namespace so_predictor
namespace google {
namespace protobuf {
template<> ::so_predictor::ContextProfile* Arena::CreateMaybeMessage<::so_predictor::ContextProfile>(Arena*);
template<> ::so_predictor::ContextProfile_IdeaMapEntry_DoNotUse* Arena::CreateMaybeMessage<::so_predictor::ContextProfile_IdeaMapEntry_DoNotUse>(Arena*);
template<> ::so_predictor::ExperimentInfo* Arena::CreateMaybeMessage<::so_predictor::ExperimentInfo>(Arena*);
template<> ::so_predictor::Interval* Arena::CreateMaybeMessage<::so_predictor::Interval>(Arena*);
template<> ::so_predictor::ItemProfile* Arena::CreateMaybeMessage<::so_predictor::ItemProfile>(Arena*);
template<> ::so_predictor::ItemScore* Arena::CreateMaybeMessage<::so_predictor::ItemScore>(Arena*);
template<> ::so_predictor::PredictRequest* Arena::CreateMaybeMessage<::so_predictor::PredictRequest>(Arena*);
template<> ::so_predictor::PredictRequest_ExtParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::so_predictor::PredictRequest_ExtParamsEntry_DoNotUse>(Arena*);
template<> ::so_predictor::PredictResponse* Arena::CreateMaybeMessage<::so_predictor::PredictResponse>(Arena*);
template<> ::so_predictor::UserProfile* Arena::CreateMaybeMessage<::so_predictor::UserProfile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace so_predictor {

// ===================================================================

class PredictRequest_ExtParamsEntry_DoNotUse : public ::google::protobuf::internal::MapEntryLite<PredictRequest_ExtParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntryLite<PredictRequest_ExtParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PredictRequest_ExtParamsEntry_DoNotUse();
  PredictRequest_ExtParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PredictRequest_ExtParamsEntry_DoNotUse& other);
  static const PredictRequest_ExtParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PredictRequest_ExtParamsEntry_DoNotUse*>(&_PredictRequest_ExtParamsEntry_DoNotUse_default_instance_); }
};

// -------------------------------------------------------------------

class PredictRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.PredictRequest) */ {
 public:
  PredictRequest();
  virtual ~PredictRequest();

  PredictRequest(const PredictRequest& from);

  inline PredictRequest& operator=(const PredictRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictRequest(PredictRequest&& from) noexcept
    : PredictRequest() {
    *this = ::std::move(from);
  }

  inline PredictRequest& operator=(PredictRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PredictRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictRequest* internal_default_instance() {
    return reinterpret_cast<const PredictRequest*>(
               &_PredictRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PredictRequest* other);
  friend void swap(PredictRequest& a, PredictRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictRequest* New() const final {
    return CreateMaybeMessage<PredictRequest>(NULL);
  }

  PredictRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PredictRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PredictRequest& from);
  void MergeFrom(const PredictRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PredictRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .so_predictor.ItemProfile items = 13;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 13;
  ::so_predictor::ItemProfile* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemProfile >*
      mutable_items();
  const ::so_predictor::ItemProfile& items(int index) const;
  ::so_predictor::ItemProfile* add_items();
  const ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemProfile >&
      items() const;

  // map<string, string> extParams = 15;
  int extparams_size() const;
  void clear_extparams();
  static const int kExtParamsFieldNumber = 15;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      extparams() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_extparams();

  // string requestId = 1;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& requestid() const;
  void set_requestid(const ::std::string& value);
  #if LANG_CXX11
  void set_requestid(::std::string&& value);
  #endif
  void set_requestid(const char* value);
  void set_requestid(const char* value, size_t size);
  ::std::string* mutable_requestid();
  ::std::string* release_requestid();
  void set_allocated_requestid(::std::string* requestid);

  // string requestIp = 2;
  void clear_requestip();
  static const int kRequestIpFieldNumber = 2;
  const ::std::string& requestip() const;
  void set_requestip(const ::std::string& value);
  #if LANG_CXX11
  void set_requestip(::std::string&& value);
  #endif
  void set_requestip(const char* value);
  void set_requestip(const char* value, size_t size);
  ::std::string* mutable_requestip();
  ::std::string* release_requestip();
  void set_allocated_requestip(::std::string* requestip);

  // string accessKey = 3;
  void clear_accesskey();
  static const int kAccessKeyFieldNumber = 3;
  const ::std::string& accesskey() const;
  void set_accesskey(const ::std::string& value);
  #if LANG_CXX11
  void set_accesskey(::std::string&& value);
  #endif
  void set_accesskey(const char* value);
  void set_accesskey(const char* value, size_t size);
  ::std::string* mutable_accesskey();
  ::std::string* release_accesskey();
  void set_allocated_accesskey(::std::string* accesskey);

  // string accessToken = 4;
  void clear_accesstoken();
  static const int kAccessTokenFieldNumber = 4;
  const ::std::string& accesstoken() const;
  void set_accesstoken(const ::std::string& value);
  #if LANG_CXX11
  void set_accesstoken(::std::string&& value);
  #endif
  void set_accesstoken(const char* value);
  void set_accesstoken(const char* value, size_t size);
  ::std::string* mutable_accesstoken();
  ::std::string* release_accesstoken();
  void set_allocated_accesstoken(::std::string* accesstoken);

  // string modelName = 11;
  void clear_modelname();
  static const int kModelNameFieldNumber = 11;
  const ::std::string& modelname() const;
  void set_modelname(const ::std::string& value);
  #if LANG_CXX11
  void set_modelname(::std::string&& value);
  #endif
  void set_modelname(const char* value);
  void set_modelname(const char* value, size_t size);
  ::std::string* mutable_modelname();
  ::std::string* release_modelname();
  void set_allocated_modelname(::std::string* modelname);

  // .so_predictor.ExperimentInfo expInfo = 5;
  bool has_expinfo() const;
  void clear_expinfo();
  static const int kExpInfoFieldNumber = 5;
  private:
  const ::so_predictor::ExperimentInfo& _internal_expinfo() const;
  public:
  const ::so_predictor::ExperimentInfo& expinfo() const;
  ::so_predictor::ExperimentInfo* release_expinfo();
  ::so_predictor::ExperimentInfo* mutable_expinfo();
  void set_allocated_expinfo(::so_predictor::ExperimentInfo* expinfo);

  // .so_predictor.UserProfile user = 12;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 12;
  private:
  const ::so_predictor::UserProfile& _internal_user() const;
  public:
  const ::so_predictor::UserProfile& user() const;
  ::so_predictor::UserProfile* release_user();
  ::so_predictor::UserProfile* mutable_user();
  void set_allocated_user(::so_predictor::UserProfile* user);

  // .so_predictor.ContextProfile context = 14;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 14;
  private:
  const ::so_predictor::ContextProfile& _internal_context() const;
  public:
  const ::so_predictor::ContextProfile& context() const;
  ::so_predictor::ContextProfile* release_context();
  ::so_predictor::ContextProfile* mutable_context();
  void set_allocated_context(::so_predictor::ContextProfile* context);

  // @@protoc_insertion_point(class_scope:so_predictor.PredictRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemProfile > items_;
  ::google::protobuf::internal::MapFieldLite<
      PredictRequest_ExtParamsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > extparams_;
  ::google::protobuf::internal::ArenaStringPtr requestid_;
  ::google::protobuf::internal::ArenaStringPtr requestip_;
  ::google::protobuf::internal::ArenaStringPtr accesskey_;
  ::google::protobuf::internal::ArenaStringPtr accesstoken_;
  ::google::protobuf::internal::ArenaStringPtr modelname_;
  ::so_predictor::ExperimentInfo* expinfo_;
  ::so_predictor::UserProfile* user_;
  ::so_predictor::ContextProfile* context_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PredictResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.PredictResponse) */ {
 public:
  PredictResponse();
  virtual ~PredictResponse();

  PredictResponse(const PredictResponse& from);

  inline PredictResponse& operator=(const PredictResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictResponse(PredictResponse&& from) noexcept
    : PredictResponse() {
    *this = ::std::move(from);
  }

  inline PredictResponse& operator=(PredictResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PredictResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictResponse* internal_default_instance() {
    return reinterpret_cast<const PredictResponse*>(
               &_PredictResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PredictResponse* other);
  friend void swap(PredictResponse& a, PredictResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictResponse* New() const final {
    return CreateMaybeMessage<PredictResponse>(NULL);
  }

  PredictResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PredictResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PredictResponse& from);
  void MergeFrom(const PredictResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PredictResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .so_predictor.ItemScore itemScores = 3;
  int itemscores_size() const;
  void clear_itemscores();
  static const int kItemScoresFieldNumber = 3;
  ::so_predictor::ItemScore* mutable_itemscores(int index);
  ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemScore >*
      mutable_itemscores();
  const ::so_predictor::ItemScore& itemscores(int index) const;
  ::so_predictor::ItemScore* add_itemscores();
  const ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemScore >&
      itemscores() const;

  // string errorMessage = 2;
  void clear_errormessage();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& errormessage() const;
  void set_errormessage(const ::std::string& value);
  #if LANG_CXX11
  void set_errormessage(::std::string&& value);
  #endif
  void set_errormessage(const char* value);
  void set_errormessage(const char* value, size_t size);
  ::std::string* mutable_errormessage();
  ::std::string* release_errormessage();
  void set_allocated_errormessage(::std::string* errormessage);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:so_predictor.PredictResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemScore > itemscores_;
  ::google::protobuf::internal::ArenaStringPtr errormessage_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserProfile : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.UserProfile) */ {
 public:
  UserProfile();
  virtual ~UserProfile();

  UserProfile(const UserProfile& from);

  inline UserProfile& operator=(const UserProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserProfile(UserProfile&& from) noexcept
    : UserProfile() {
    *this = ::std::move(from);
  }

  inline UserProfile& operator=(UserProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const UserProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserProfile* internal_default_instance() {
    return reinterpret_cast<const UserProfile*>(
               &_UserProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(UserProfile* other);
  friend void swap(UserProfile& a, UserProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserProfile* New() const final {
    return CreateMaybeMessage<UserProfile>(NULL);
  }

  UserProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserProfile>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const UserProfile& from);
  void MergeFrom(const UserProfile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string userId = 14;
  void clear_userid();
  static const int kUserIdFieldNumber = 14;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // @@protoc_insertion_point(class_scope:so_predictor.UserProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemProfile : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.ItemProfile) */ {
 public:
  ItemProfile();
  virtual ~ItemProfile();

  ItemProfile(const ItemProfile& from);

  inline ItemProfile& operator=(const ItemProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemProfile(ItemProfile&& from) noexcept
    : ItemProfile() {
    *this = ::std::move(from);
  }

  inline ItemProfile& operator=(ItemProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ItemProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ItemProfile* internal_default_instance() {
    return reinterpret_cast<const ItemProfile*>(
               &_ItemProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ItemProfile* other);
  friend void swap(ItemProfile& a, ItemProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemProfile* New() const final {
    return CreateMaybeMessage<ItemProfile>(NULL);
  }

  ItemProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ItemProfile>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ItemProfile& from);
  void MergeFrom(const ItemProfile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string itemId = 15;
  void clear_itemid();
  static const int kItemIdFieldNumber = 15;
  const ::std::string& itemid() const;
  void set_itemid(const ::std::string& value);
  #if LANG_CXX11
  void set_itemid(::std::string&& value);
  #endif
  void set_itemid(const char* value);
  void set_itemid(const char* value, size_t size);
  ::std::string* mutable_itemid();
  ::std::string* release_itemid();
  void set_allocated_itemid(::std::string* itemid);

  // @@protoc_insertion_point(class_scope:so_predictor.ItemProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr itemid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemScore : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.ItemScore) */ {
 public:
  ItemScore();
  virtual ~ItemScore();

  ItemScore(const ItemScore& from);

  inline ItemScore& operator=(const ItemScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemScore(ItemScore&& from) noexcept
    : ItemScore() {
    *this = ::std::move(from);
  }

  inline ItemScore& operator=(ItemScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ItemScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ItemScore* internal_default_instance() {
    return reinterpret_cast<const ItemScore*>(
               &_ItemScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ItemScore* other);
  friend void swap(ItemScore& a, ItemScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemScore* New() const final {
    return CreateMaybeMessage<ItemScore>(NULL);
  }

  ItemScore* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ItemScore>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ItemScore& from);
  void MergeFrom(const ItemScore& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  const ::std::string& itemid() const;
  void set_itemid(const ::std::string& value);
  #if LANG_CXX11
  void set_itemid(::std::string&& value);
  #endif
  void set_itemid(const char* value);
  void set_itemid(const char* value, size_t size);
  ::std::string* mutable_itemid();
  ::std::string* release_itemid();
  void set_allocated_itemid(::std::string* itemid);

  // double score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  double score() const;
  void set_score(double value);

  // @@protoc_insertion_point(class_scope:so_predictor.ItemScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr itemid_;
  double score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContextProfile_IdeaMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntryLite<ContextProfile_IdeaMapEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntryLite<ContextProfile_IdeaMapEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ContextProfile_IdeaMapEntry_DoNotUse();
  ContextProfile_IdeaMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ContextProfile_IdeaMapEntry_DoNotUse& other);
  static const ContextProfile_IdeaMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ContextProfile_IdeaMapEntry_DoNotUse*>(&_ContextProfile_IdeaMapEntry_DoNotUse_default_instance_); }
};

// -------------------------------------------------------------------

class ContextProfile : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.ContextProfile) */ {
 public:
  ContextProfile();
  virtual ~ContextProfile();

  ContextProfile(const ContextProfile& from);

  inline ContextProfile& operator=(const ContextProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContextProfile(ContextProfile&& from) noexcept
    : ContextProfile() {
    *this = ::std::move(from);
  }

  inline ContextProfile& operator=(ContextProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ContextProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContextProfile* internal_default_instance() {
    return reinterpret_cast<const ContextProfile*>(
               &_ContextProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ContextProfile* other);
  friend void swap(ContextProfile& a, ContextProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContextProfile* New() const final {
    return CreateMaybeMessage<ContextProfile>(NULL);
  }

  ContextProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContextProfile>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ContextProfile& from);
  void MergeFrom(const ContextProfile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContextProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ideaMap = 35;
  int ideamap_size() const;
  void clear_ideamap();
  static const int kIdeaMapFieldNumber = 35;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ideamap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ideamap();

  // repeated .so_predictor.Interval ageInterval = 37;
  int ageinterval_size() const;
  void clear_ageinterval();
  static const int kAgeIntervalFieldNumber = 37;
  ::so_predictor::Interval* mutable_ageinterval(int index);
  ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >*
      mutable_ageinterval();
  const ::so_predictor::Interval& ageinterval(int index) const;
  ::so_predictor::Interval* add_ageinterval();
  const ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >&
      ageinterval() const;

  // repeated .so_predictor.Interval incomeInterval = 41;
  int incomeinterval_size() const;
  void clear_incomeinterval();
  static const int kIncomeIntervalFieldNumber = 41;
  ::so_predictor::Interval* mutable_incomeinterval(int index);
  ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >*
      mutable_incomeinterval();
  const ::so_predictor::Interval& incomeinterval(int index) const;
  ::so_predictor::Interval* add_incomeinterval();
  const ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >&
      incomeinterval() const;

  // repeated uint32 vecCityId = 43;
  int veccityid_size() const;
  void clear_veccityid();
  static const int kVecCityIdFieldNumber = 43;
  ::google::protobuf::uint32 veccityid(int index) const;
  void set_veccityid(int index, ::google::protobuf::uint32 value);
  void add_veccityid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      veccityid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_veccityid();

  // string contextId = 1;
  void clear_contextid();
  static const int kContextIdFieldNumber = 1;
  const ::std::string& contextid() const;
  void set_contextid(const ::std::string& value);
  #if LANG_CXX11
  void set_contextid(::std::string&& value);
  #endif
  void set_contextid(const char* value);
  void set_contextid(const char* value, size_t size);
  ::std::string* mutable_contextid();
  ::std::string* release_contextid();
  void set_allocated_contextid(::std::string* contextid);

  // string context = 2;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // string query = 3;
  void clear_query();
  static const int kQueryFieldNumber = 3;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // string reqId = 4;
  void clear_reqid();
  static const int kReqIdFieldNumber = 4;
  const ::std::string& reqid() const;
  void set_reqid(const ::std::string& value);
  #if LANG_CXX11
  void set_reqid(::std::string&& value);
  #endif
  void set_reqid(const char* value);
  void set_reqid(const char* value, size_t size);
  ::std::string* mutable_reqid();
  ::std::string* release_reqid();
  void set_allocated_reqid(::std::string* reqid);

  // string androidId = 6;
  void clear_androidid();
  static const int kAndroidIdFieldNumber = 6;
  const ::std::string& androidid() const;
  void set_androidid(const ::std::string& value);
  #if LANG_CXX11
  void set_androidid(::std::string&& value);
  #endif
  void set_androidid(const char* value);
  void set_androidid(const char* value, size_t size);
  ::std::string* mutable_androidid();
  ::std::string* release_androidid();
  void set_allocated_androidid(::std::string* androidid);

  // string imei = 7;
  void clear_imei();
  static const int kImeiFieldNumber = 7;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // string language = 9;
  void clear_language();
  static const int kLanguageFieldNumber = 9;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // string manufacturer = 10;
  void clear_manufacturer();
  static const int kManufacturerFieldNumber = 10;
  const ::std::string& manufacturer() const;
  void set_manufacturer(const ::std::string& value);
  #if LANG_CXX11
  void set_manufacturer(::std::string&& value);
  #endif
  void set_manufacturer(const char* value);
  void set_manufacturer(const char* value, size_t size);
  ::std::string* mutable_manufacturer();
  ::std::string* release_manufacturer();
  void set_allocated_manufacturer(::std::string* manufacturer);

  // string modelName = 11;
  void clear_modelname();
  static const int kModelNameFieldNumber = 11;
  const ::std::string& modelname() const;
  void set_modelname(const ::std::string& value);
  #if LANG_CXX11
  void set_modelname(::std::string&& value);
  #endif
  void set_modelname(const char* value);
  void set_modelname(const char* value, size_t size);
  ::std::string* mutable_modelname();
  ::std::string* release_modelname();
  void set_allocated_modelname(::std::string* modelname);

  // string osVersion = 12;
  void clear_osversion();
  static const int kOsVersionFieldNumber = 12;
  const ::std::string& osversion() const;
  void set_osversion(const ::std::string& value);
  #if LANG_CXX11
  void set_osversion(::std::string&& value);
  #endif
  void set_osversion(const char* value);
  void set_osversion(const char* value, size_t size);
  ::std::string* mutable_osversion();
  ::std::string* release_osversion();
  void set_allocated_osversion(::std::string* osversion);

  // string resolution = 13;
  void clear_resolution();
  static const int kResolutionFieldNumber = 13;
  const ::std::string& resolution() const;
  void set_resolution(const ::std::string& value);
  #if LANG_CXX11
  void set_resolution(::std::string&& value);
  #endif
  void set_resolution(const char* value);
  void set_resolution(const char* value, size_t size);
  ::std::string* mutable_resolution();
  ::std::string* release_resolution();
  void set_allocated_resolution(::std::string* resolution);

  // string macAddr = 14;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 14;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // string clientVersion = 15;
  void clear_clientversion();
  static const int kClientVersionFieldNumber = 15;
  const ::std::string& clientversion() const;
  void set_clientversion(const ::std::string& value);
  #if LANG_CXX11
  void set_clientversion(::std::string&& value);
  #endif
  void set_clientversion(const char* value);
  void set_clientversion(const char* value, size_t size);
  ::std::string* mutable_clientversion();
  ::std::string* release_clientversion();
  void set_allocated_clientversion(::std::string* clientversion);

  // string city = 16;
  void clear_city();
  static const int kCityFieldNumber = 16;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // string longitude = 17;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 17;
  const ::std::string& longitude() const;
  void set_longitude(const ::std::string& value);
  #if LANG_CXX11
  void set_longitude(::std::string&& value);
  #endif
  void set_longitude(const char* value);
  void set_longitude(const char* value, size_t size);
  ::std::string* mutable_longitude();
  ::std::string* release_longitude();
  void set_allocated_longitude(::std::string* longitude);

  // string timezone = 18;
  void clear_timezone();
  static const int kTimezoneFieldNumber = 18;
  const ::std::string& timezone() const;
  void set_timezone(const ::std::string& value);
  #if LANG_CXX11
  void set_timezone(::std::string&& value);
  #endif
  void set_timezone(const char* value);
  void set_timezone(const char* value, size_t size);
  ::std::string* mutable_timezone();
  ::std::string* release_timezone();
  void set_allocated_timezone(::std::string* timezone);

  // string imsi = 19;
  void clear_imsi();
  static const int kImsiFieldNumber = 19;
  const ::std::string& imsi() const;
  void set_imsi(const ::std::string& value);
  #if LANG_CXX11
  void set_imsi(::std::string&& value);
  #endif
  void set_imsi(const char* value);
  void set_imsi(const char* value, size_t size);
  ::std::string* mutable_imsi();
  ::std::string* release_imsi();
  void set_allocated_imsi(::std::string* imsi);

  // string networkType = 20;
  void clear_networktype();
  static const int kNetworkTypeFieldNumber = 20;
  const ::std::string& networktype() const;
  void set_networktype(const ::std::string& value);
  #if LANG_CXX11
  void set_networktype(::std::string&& value);
  #endif
  void set_networktype(const char* value);
  void set_networktype(const char* value, size_t size);
  ::std::string* mutable_networktype();
  ::std::string* release_networktype();
  void set_allocated_networktype(::std::string* networktype);

  // string networkOperator = 21;
  void clear_networkoperator();
  static const int kNetworkOperatorFieldNumber = 21;
  const ::std::string& networkoperator() const;
  void set_networkoperator(const ::std::string& value);
  #if LANG_CXX11
  void set_networkoperator(::std::string&& value);
  #endif
  void set_networkoperator(const char* value);
  void set_networkoperator(const char* value, size_t size);
  ::std::string* mutable_networkoperator();
  ::std::string* release_networkoperator();
  void set_allocated_networkoperator(::std::string* networkoperator);

  // string phoneNumber = 22;
  void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 22;
  const ::std::string& phonenumber() const;
  void set_phonenumber(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenumber(::std::string&& value);
  #endif
  void set_phonenumber(const char* value);
  void set_phonenumber(const char* value, size_t size);
  ::std::string* mutable_phonenumber();
  ::std::string* release_phonenumber();
  void set_allocated_phonenumber(::std::string* phonenumber);

  // string clientIp = 23;
  void clear_clientip();
  static const int kClientIpFieldNumber = 23;
  const ::std::string& clientip() const;
  void set_clientip(const ::std::string& value);
  #if LANG_CXX11
  void set_clientip(::std::string&& value);
  #endif
  void set_clientip(const char* value);
  void set_clientip(const char* value, size_t size);
  ::std::string* mutable_clientip();
  ::std::string* release_clientip();
  void set_allocated_clientip(::std::string* clientip);

  // string wifiSsid = 26;
  void clear_wifissid();
  static const int kWifiSsidFieldNumber = 26;
  const ::std::string& wifissid() const;
  void set_wifissid(const ::std::string& value);
  #if LANG_CXX11
  void set_wifissid(::std::string&& value);
  #endif
  void set_wifissid(const char* value);
  void set_wifissid(const char* value, size_t size);
  ::std::string* mutable_wifissid();
  ::std::string* release_wifissid();
  void set_allocated_wifissid(::std::string* wifissid);

  // string wifiBssid = 27;
  void clear_wifibssid();
  static const int kWifiBssidFieldNumber = 27;
  const ::std::string& wifibssid() const;
  void set_wifibssid(const ::std::string& value);
  #if LANG_CXX11
  void set_wifibssid(::std::string&& value);
  #endif
  void set_wifibssid(const char* value);
  void set_wifibssid(const char* value, size_t size);
  ::std::string* mutable_wifibssid();
  ::std::string* release_wifibssid();
  void set_allocated_wifibssid(::std::string* wifibssid);

  // string potionId = 28;
  void clear_potionid();
  static const int kPotionIdFieldNumber = 28;
  const ::std::string& potionid() const;
  void set_potionid(const ::std::string& value);
  #if LANG_CXX11
  void set_potionid(::std::string&& value);
  #endif
  void set_potionid(const char* value);
  void set_potionid(const char* value, size_t size);
  ::std::string* mutable_potionid();
  ::std::string* release_potionid();
  void set_allocated_potionid(::std::string* potionid);

  // string adtxt = 29;
  void clear_adtxt();
  static const int kAdtxtFieldNumber = 29;
  const ::std::string& adtxt() const;
  void set_adtxt(const ::std::string& value);
  #if LANG_CXX11
  void set_adtxt(::std::string&& value);
  #endif
  void set_adtxt(const char* value);
  void set_adtxt(const char* value, size_t size);
  ::std::string* mutable_adtxt();
  ::std::string* release_adtxt();
  void set_allocated_adtxt(::std::string* adtxt);

  // int64 superUser = 8;
  void clear_superuser();
  static const int kSuperUserFieldNumber = 8;
  ::google::protobuf::int64 superuser() const;
  void set_superuser(::google::protobuf::int64 value);

  // uint32 sceneId = 5;
  void clear_sceneid();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // int32 netType = 24;
  void clear_nettype();
  static const int kNetTypeFieldNumber = 24;
  ::google::protobuf::int32 nettype() const;
  void set_nettype(::google::protobuf::int32 value);

  // int32 extNetworkType = 25;
  void clear_extnetworktype();
  static const int kExtNetworkTypeFieldNumber = 25;
  ::google::protobuf::int32 extnetworktype() const;
  void set_extnetworktype(::google::protobuf::int32 value);

  // int32 adType = 30;
  void clear_adtype();
  static const int kAdTypeFieldNumber = 30;
  ::google::protobuf::int32 adtype() const;
  void set_adtype(::google::protobuf::int32 value);

  // int32 startTime = 31;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 31;
  ::google::protobuf::int32 starttime() const;
  void set_starttime(::google::protobuf::int32 value);

  // int32 endTime = 32;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 32;
  ::google::protobuf::int32 endtime() const;
  void set_endtime(::google::protobuf::int32 value);

  // double price = 33;
  void clear_price();
  static const int kPriceFieldNumber = 33;
  double price() const;
  void set_price(double value);

  // int32 costType = 34;
  void clear_costtype();
  static const int kCostTypeFieldNumber = 34;
  ::google::protobuf::int32 costtype() const;
  void set_costtype(::google::protobuf::int32 value);

  // int32 sex = 39;
  void clear_sex();
  static const int kSexFieldNumber = 39;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // bool isIncludeAge = 36;
  void clear_isincludeage();
  static const int kIsIncludeAgeFieldNumber = 36;
  bool isincludeage() const;
  void set_isincludeage(bool value);

  // bool isIncludeSex = 38;
  void clear_isincludesex();
  static const int kIsIncludeSexFieldNumber = 38;
  bool isincludesex() const;
  void set_isincludesex(bool value);

  // bool isIncludeIncome = 40;
  void clear_isincludeincome();
  static const int kIsIncludeIncomeFieldNumber = 40;
  bool isincludeincome() const;
  void set_isincludeincome(bool value);

  // bool isIncludeCity = 42;
  void clear_isincludecity();
  static const int kIsIncludeCityFieldNumber = 42;
  bool isincludecity() const;
  void set_isincludecity(bool value);

  // @@protoc_insertion_point(class_scope:so_predictor.ContextProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::MapFieldLite<
      ContextProfile_IdeaMapEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ideamap_;
  ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval > ageinterval_;
  ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval > incomeinterval_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > veccityid_;
  mutable int _veccityid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr contextid_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr reqid_;
  ::google::protobuf::internal::ArenaStringPtr androidid_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr manufacturer_;
  ::google::protobuf::internal::ArenaStringPtr modelname_;
  ::google::protobuf::internal::ArenaStringPtr osversion_;
  ::google::protobuf::internal::ArenaStringPtr resolution_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr clientversion_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr longitude_;
  ::google::protobuf::internal::ArenaStringPtr timezone_;
  ::google::protobuf::internal::ArenaStringPtr imsi_;
  ::google::protobuf::internal::ArenaStringPtr networktype_;
  ::google::protobuf::internal::ArenaStringPtr networkoperator_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr clientip_;
  ::google::protobuf::internal::ArenaStringPtr wifissid_;
  ::google::protobuf::internal::ArenaStringPtr wifibssid_;
  ::google::protobuf::internal::ArenaStringPtr potionid_;
  ::google::protobuf::internal::ArenaStringPtr adtxt_;
  ::google::protobuf::int64 superuser_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::int32 nettype_;
  ::google::protobuf::int32 extnetworktype_;
  ::google::protobuf::int32 adtype_;
  ::google::protobuf::int32 starttime_;
  ::google::protobuf::int32 endtime_;
  double price_;
  ::google::protobuf::int32 costtype_;
  ::google::protobuf::int32 sex_;
  bool isincludeage_;
  bool isincludesex_;
  bool isincludeincome_;
  bool isincludecity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interval : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.Interval) */ {
 public:
  Interval();
  virtual ~Interval();

  Interval(const Interval& from);

  inline Interval& operator=(const Interval& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interval(Interval&& from) noexcept
    : Interval() {
    *this = ::std::move(from);
  }

  inline Interval& operator=(Interval&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Interval& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interval* internal_default_instance() {
    return reinterpret_cast<const Interval*>(
               &_Interval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Interval* other);
  friend void swap(Interval& a, Interval& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interval* New() const final {
    return CreateMaybeMessage<Interval>(NULL);
  }

  Interval* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interval>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Interval& from);
  void MergeFrom(const Interval& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Interval* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double lowerLimit = 1;
  void clear_lowerlimit();
  static const int kLowerLimitFieldNumber = 1;
  double lowerlimit() const;
  void set_lowerlimit(double value);

  // double upperLimit = 2;
  void clear_upperlimit();
  static const int kUpperLimitFieldNumber = 2;
  double upperlimit() const;
  void set_upperlimit(double value);

  // @@protoc_insertion_point(class_scope:so_predictor.Interval)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double lowerlimit_;
  double upperlimit_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExperimentInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_predictor.ExperimentInfo) */ {
 public:
  ExperimentInfo();
  virtual ~ExperimentInfo();

  ExperimentInfo(const ExperimentInfo& from);

  inline ExperimentInfo& operator=(const ExperimentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExperimentInfo(ExperimentInfo&& from) noexcept
    : ExperimentInfo() {
    *this = ::std::move(from);
  }

  inline ExperimentInfo& operator=(ExperimentInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ExperimentInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExperimentInfo* internal_default_instance() {
    return reinterpret_cast<const ExperimentInfo*>(
               &_ExperimentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ExperimentInfo* other);
  friend void swap(ExperimentInfo& a, ExperimentInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExperimentInfo* New() const final {
    return CreateMaybeMessage<ExperimentInfo>(NULL);
  }

  ExperimentInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExperimentInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ExperimentInfo& from);
  void MergeFrom(const ExperimentInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExperimentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 eid = 1;
  void clear_eid();
  static const int kEidFieldNumber = 1;
  ::google::protobuf::uint64 eid() const;
  void set_eid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:so_predictor.ExperimentInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint64 eid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_predictor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PredictRequest

// string requestId = 1;
inline void PredictRequest::clear_requestid() {
  requestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictRequest::requestid() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.requestId)
  return requestid_.GetNoArena();
}
inline void PredictRequest::set_requestid(const ::std::string& value) {
  
  requestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.PredictRequest.requestId)
}
#if LANG_CXX11
inline void PredictRequest::set_requestid(::std::string&& value) {
  
  requestid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.PredictRequest.requestId)
}
#endif
inline void PredictRequest::set_requestid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  requestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.PredictRequest.requestId)
}
inline void PredictRequest::set_requestid(const char* value, size_t size) {
  
  requestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.PredictRequest.requestId)
}
inline ::std::string* PredictRequest::mutable_requestid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.requestId)
  return requestid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictRequest::release_requestid() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.requestId)
  
  return requestid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictRequest::set_allocated_requestid(::std::string* requestid) {
  if (requestid != NULL) {
    
  } else {
    
  }
  requestid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requestid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.requestId)
}

// string requestIp = 2;
inline void PredictRequest::clear_requestip() {
  requestip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictRequest::requestip() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.requestIp)
  return requestip_.GetNoArena();
}
inline void PredictRequest::set_requestip(const ::std::string& value) {
  
  requestip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.PredictRequest.requestIp)
}
#if LANG_CXX11
inline void PredictRequest::set_requestip(::std::string&& value) {
  
  requestip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.PredictRequest.requestIp)
}
#endif
inline void PredictRequest::set_requestip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  requestip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.PredictRequest.requestIp)
}
inline void PredictRequest::set_requestip(const char* value, size_t size) {
  
  requestip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.PredictRequest.requestIp)
}
inline ::std::string* PredictRequest::mutable_requestip() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.requestIp)
  return requestip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictRequest::release_requestip() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.requestIp)
  
  return requestip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictRequest::set_allocated_requestip(::std::string* requestip) {
  if (requestip != NULL) {
    
  } else {
    
  }
  requestip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requestip);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.requestIp)
}

// string accessKey = 3;
inline void PredictRequest::clear_accesskey() {
  accesskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictRequest::accesskey() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.accessKey)
  return accesskey_.GetNoArena();
}
inline void PredictRequest::set_accesskey(const ::std::string& value) {
  
  accesskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.PredictRequest.accessKey)
}
#if LANG_CXX11
inline void PredictRequest::set_accesskey(::std::string&& value) {
  
  accesskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.PredictRequest.accessKey)
}
#endif
inline void PredictRequest::set_accesskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accesskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.PredictRequest.accessKey)
}
inline void PredictRequest::set_accesskey(const char* value, size_t size) {
  
  accesskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.PredictRequest.accessKey)
}
inline ::std::string* PredictRequest::mutable_accesskey() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.accessKey)
  return accesskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictRequest::release_accesskey() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.accessKey)
  
  return accesskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictRequest::set_allocated_accesskey(::std::string* accesskey) {
  if (accesskey != NULL) {
    
  } else {
    
  }
  accesskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesskey);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.accessKey)
}

// string accessToken = 4;
inline void PredictRequest::clear_accesstoken() {
  accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictRequest::accesstoken() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.accessToken)
  return accesstoken_.GetNoArena();
}
inline void PredictRequest::set_accesstoken(const ::std::string& value) {
  
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.PredictRequest.accessToken)
}
#if LANG_CXX11
inline void PredictRequest::set_accesstoken(::std::string&& value) {
  
  accesstoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.PredictRequest.accessToken)
}
#endif
inline void PredictRequest::set_accesstoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.PredictRequest.accessToken)
}
inline void PredictRequest::set_accesstoken(const char* value, size_t size) {
  
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.PredictRequest.accessToken)
}
inline ::std::string* PredictRequest::mutable_accesstoken() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.accessToken)
  return accesstoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictRequest::release_accesstoken() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.accessToken)
  
  return accesstoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictRequest::set_allocated_accesstoken(::std::string* accesstoken) {
  if (accesstoken != NULL) {
    
  } else {
    
  }
  accesstoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesstoken);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.accessToken)
}

// .so_predictor.ExperimentInfo expInfo = 5;
inline bool PredictRequest::has_expinfo() const {
  return this != internal_default_instance() && expinfo_ != NULL;
}
inline void PredictRequest::clear_expinfo() {
  if (GetArenaNoVirtual() == NULL && expinfo_ != NULL) {
    delete expinfo_;
  }
  expinfo_ = NULL;
}
inline const ::so_predictor::ExperimentInfo& PredictRequest::_internal_expinfo() const {
  return *expinfo_;
}
inline const ::so_predictor::ExperimentInfo& PredictRequest::expinfo() const {
  const ::so_predictor::ExperimentInfo* p = expinfo_;
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.expInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::so_predictor::ExperimentInfo*>(
      &::so_predictor::_ExperimentInfo_default_instance_);
}
inline ::so_predictor::ExperimentInfo* PredictRequest::release_expinfo() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.expInfo)
  
  ::so_predictor::ExperimentInfo* temp = expinfo_;
  expinfo_ = NULL;
  return temp;
}
inline ::so_predictor::ExperimentInfo* PredictRequest::mutable_expinfo() {
  
  if (expinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::so_predictor::ExperimentInfo>(GetArenaNoVirtual());
    expinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.expInfo)
  return expinfo_;
}
inline void PredictRequest::set_allocated_expinfo(::so_predictor::ExperimentInfo* expinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete expinfo_;
  }
  if (expinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expinfo, submessage_arena);
    }
    
  } else {
    
  }
  expinfo_ = expinfo;
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.expInfo)
}

// string modelName = 11;
inline void PredictRequest::clear_modelname() {
  modelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictRequest::modelname() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.modelName)
  return modelname_.GetNoArena();
}
inline void PredictRequest::set_modelname(const ::std::string& value) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.PredictRequest.modelName)
}
#if LANG_CXX11
inline void PredictRequest::set_modelname(::std::string&& value) {
  
  modelname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.PredictRequest.modelName)
}
#endif
inline void PredictRequest::set_modelname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.PredictRequest.modelName)
}
inline void PredictRequest::set_modelname(const char* value, size_t size) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.PredictRequest.modelName)
}
inline ::std::string* PredictRequest::mutable_modelname() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.modelName)
  return modelname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictRequest::release_modelname() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.modelName)
  
  return modelname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictRequest::set_allocated_modelname(::std::string* modelname) {
  if (modelname != NULL) {
    
  } else {
    
  }
  modelname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modelname);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.modelName)
}

// .so_predictor.UserProfile user = 12;
inline bool PredictRequest::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void PredictRequest::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
}
inline const ::so_predictor::UserProfile& PredictRequest::_internal_user() const {
  return *user_;
}
inline const ::so_predictor::UserProfile& PredictRequest::user() const {
  const ::so_predictor::UserProfile* p = user_;
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.user)
  return p != NULL ? *p : *reinterpret_cast<const ::so_predictor::UserProfile*>(
      &::so_predictor::_UserProfile_default_instance_);
}
inline ::so_predictor::UserProfile* PredictRequest::release_user() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.user)
  
  ::so_predictor::UserProfile* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::so_predictor::UserProfile* PredictRequest::mutable_user() {
  
  if (user_ == NULL) {
    auto* p = CreateMaybeMessage<::so_predictor::UserProfile>(GetArenaNoVirtual());
    user_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.user)
  return user_;
}
inline void PredictRequest::set_allocated_user(::so_predictor::UserProfile* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_;
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.user)
}

// repeated .so_predictor.ItemProfile items = 13;
inline int PredictRequest::items_size() const {
  return items_.size();
}
inline void PredictRequest::clear_items() {
  items_.Clear();
}
inline ::so_predictor::ItemProfile* PredictRequest::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemProfile >*
PredictRequest::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:so_predictor.PredictRequest.items)
  return &items_;
}
inline const ::so_predictor::ItemProfile& PredictRequest::items(int index) const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.items)
  return items_.Get(index);
}
inline ::so_predictor::ItemProfile* PredictRequest::add_items() {
  // @@protoc_insertion_point(field_add:so_predictor.PredictRequest.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemProfile >&
PredictRequest::items() const {
  // @@protoc_insertion_point(field_list:so_predictor.PredictRequest.items)
  return items_;
}

// .so_predictor.ContextProfile context = 14;
inline bool PredictRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void PredictRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::so_predictor::ContextProfile& PredictRequest::_internal_context() const {
  return *context_;
}
inline const ::so_predictor::ContextProfile& PredictRequest::context() const {
  const ::so_predictor::ContextProfile* p = context_;
  // @@protoc_insertion_point(field_get:so_predictor.PredictRequest.context)
  return p != NULL ? *p : *reinterpret_cast<const ::so_predictor::ContextProfile*>(
      &::so_predictor::_ContextProfile_default_instance_);
}
inline ::so_predictor::ContextProfile* PredictRequest::release_context() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictRequest.context)
  
  ::so_predictor::ContextProfile* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::so_predictor::ContextProfile* PredictRequest::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::so_predictor::ContextProfile>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictRequest.context)
  return context_;
}
inline void PredictRequest::set_allocated_context(::so_predictor::ContextProfile* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictRequest.context)
}

// map<string, string> extParams = 15;
inline int PredictRequest::extparams_size() const {
  return extparams_.size();
}
inline void PredictRequest::clear_extparams() {
  extparams_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PredictRequest::extparams() const {
  // @@protoc_insertion_point(field_map:so_predictor.PredictRequest.extParams)
  return extparams_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PredictRequest::mutable_extparams() {
  // @@protoc_insertion_point(field_mutable_map:so_predictor.PredictRequest.extParams)
  return extparams_.MutableMap();
}

// -------------------------------------------------------------------

// PredictResponse

// uint32 result = 1;
inline void PredictResponse::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 PredictResponse::result() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictResponse.result)
  return result_;
}
inline void PredictResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.PredictResponse.result)
}

// string errorMessage = 2;
inline void PredictResponse::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictResponse::errormessage() const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictResponse.errorMessage)
  return errormessage_.GetNoArena();
}
inline void PredictResponse::set_errormessage(const ::std::string& value) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.PredictResponse.errorMessage)
}
#if LANG_CXX11
inline void PredictResponse::set_errormessage(::std::string&& value) {
  
  errormessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.PredictResponse.errorMessage)
}
#endif
inline void PredictResponse::set_errormessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.PredictResponse.errorMessage)
}
inline void PredictResponse::set_errormessage(const char* value, size_t size) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.PredictResponse.errorMessage)
}
inline ::std::string* PredictResponse::mutable_errormessage() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictResponse.errorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictResponse::release_errormessage() {
  // @@protoc_insertion_point(field_release:so_predictor.PredictResponse.errorMessage)
  
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictResponse::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    
  } else {
    
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.PredictResponse.errorMessage)
}

// repeated .so_predictor.ItemScore itemScores = 3;
inline int PredictResponse::itemscores_size() const {
  return itemscores_.size();
}
inline void PredictResponse::clear_itemscores() {
  itemscores_.Clear();
}
inline ::so_predictor::ItemScore* PredictResponse::mutable_itemscores(int index) {
  // @@protoc_insertion_point(field_mutable:so_predictor.PredictResponse.itemScores)
  return itemscores_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemScore >*
PredictResponse::mutable_itemscores() {
  // @@protoc_insertion_point(field_mutable_list:so_predictor.PredictResponse.itemScores)
  return &itemscores_;
}
inline const ::so_predictor::ItemScore& PredictResponse::itemscores(int index) const {
  // @@protoc_insertion_point(field_get:so_predictor.PredictResponse.itemScores)
  return itemscores_.Get(index);
}
inline ::so_predictor::ItemScore* PredictResponse::add_itemscores() {
  // @@protoc_insertion_point(field_add:so_predictor.PredictResponse.itemScores)
  return itemscores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_predictor::ItemScore >&
PredictResponse::itemscores() const {
  // @@protoc_insertion_point(field_list:so_predictor.PredictResponse.itemScores)
  return itemscores_;
}

// -------------------------------------------------------------------

// UserProfile

// string userId = 14;
inline void UserProfile::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserProfile::userid() const {
  // @@protoc_insertion_point(field_get:so_predictor.UserProfile.userId)
  return userid_.GetNoArena();
}
inline void UserProfile::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.UserProfile.userId)
}
#if LANG_CXX11
inline void UserProfile::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.UserProfile.userId)
}
#endif
inline void UserProfile::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.UserProfile.userId)
}
inline void UserProfile::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.UserProfile.userId)
}
inline ::std::string* UserProfile::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.UserProfile.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserProfile::release_userid() {
  // @@protoc_insertion_point(field_release:so_predictor.UserProfile.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserProfile::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.UserProfile.userId)
}

// -------------------------------------------------------------------

// ItemProfile

// string itemId = 15;
inline void ItemProfile::clear_itemid() {
  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ItemProfile::itemid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ItemProfile.itemId)
  return itemid_.GetNoArena();
}
inline void ItemProfile::set_itemid(const ::std::string& value) {
  
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ItemProfile.itemId)
}
#if LANG_CXX11
inline void ItemProfile::set_itemid(::std::string&& value) {
  
  itemid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ItemProfile.itemId)
}
#endif
inline void ItemProfile::set_itemid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ItemProfile.itemId)
}
inline void ItemProfile::set_itemid(const char* value, size_t size) {
  
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ItemProfile.itemId)
}
inline ::std::string* ItemProfile::mutable_itemid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ItemProfile.itemId)
  return itemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemProfile::release_itemid() {
  // @@protoc_insertion_point(field_release:so_predictor.ItemProfile.itemId)
  
  return itemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemProfile::set_allocated_itemid(::std::string* itemid) {
  if (itemid != NULL) {
    
  } else {
    
  }
  itemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ItemProfile.itemId)
}

// -------------------------------------------------------------------

// ItemScore

// string itemId = 1;
inline void ItemScore::clear_itemid() {
  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ItemScore::itemid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ItemScore.itemId)
  return itemid_.GetNoArena();
}
inline void ItemScore::set_itemid(const ::std::string& value) {
  
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ItemScore.itemId)
}
#if LANG_CXX11
inline void ItemScore::set_itemid(::std::string&& value) {
  
  itemid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ItemScore.itemId)
}
#endif
inline void ItemScore::set_itemid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ItemScore.itemId)
}
inline void ItemScore::set_itemid(const char* value, size_t size) {
  
  itemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ItemScore.itemId)
}
inline ::std::string* ItemScore::mutable_itemid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ItemScore.itemId)
  return itemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemScore::release_itemid() {
  // @@protoc_insertion_point(field_release:so_predictor.ItemScore.itemId)
  
  return itemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemScore::set_allocated_itemid(::std::string* itemid) {
  if (itemid != NULL) {
    
  } else {
    
  }
  itemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ItemScore.itemId)
}

// double score = 2;
inline void ItemScore::clear_score() {
  score_ = 0;
}
inline double ItemScore::score() const {
  // @@protoc_insertion_point(field_get:so_predictor.ItemScore.score)
  return score_;
}
inline void ItemScore::set_score(double value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ItemScore.score)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ContextProfile

// string contextId = 1;
inline void ContextProfile::clear_contextid() {
  contextid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::contextid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.contextId)
  return contextid_.GetNoArena();
}
inline void ContextProfile::set_contextid(const ::std::string& value) {
  
  contextid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.contextId)
}
#if LANG_CXX11
inline void ContextProfile::set_contextid(::std::string&& value) {
  
  contextid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.contextId)
}
#endif
inline void ContextProfile::set_contextid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contextid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.contextId)
}
inline void ContextProfile::set_contextid(const char* value, size_t size) {
  
  contextid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.contextId)
}
inline ::std::string* ContextProfile::mutable_contextid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.contextId)
  return contextid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_contextid() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.contextId)
  
  return contextid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_contextid(::std::string* contextid) {
  if (contextid != NULL) {
    
  } else {
    
  }
  contextid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contextid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.contextId)
}

// string context = 2;
inline void ContextProfile::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::context() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.context)
  return context_.GetNoArena();
}
inline void ContextProfile::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.context)
}
#if LANG_CXX11
inline void ContextProfile::set_context(::std::string&& value) {
  
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.context)
}
#endif
inline void ContextProfile::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.context)
}
inline void ContextProfile::set_context(const char* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.context)
}
inline ::std::string* ContextProfile::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_context() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.context)
}

// string query = 3;
inline void ContextProfile::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::query() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.query)
  return query_.GetNoArena();
}
inline void ContextProfile::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.query)
}
#if LANG_CXX11
inline void ContextProfile::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.query)
}
#endif
inline void ContextProfile::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.query)
}
inline void ContextProfile::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.query)
}
inline ::std::string* ContextProfile::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_query() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.query)
}

// string reqId = 4;
inline void ContextProfile::clear_reqid() {
  reqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::reqid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.reqId)
  return reqid_.GetNoArena();
}
inline void ContextProfile::set_reqid(const ::std::string& value) {
  
  reqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.reqId)
}
#if LANG_CXX11
inline void ContextProfile::set_reqid(::std::string&& value) {
  
  reqid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.reqId)
}
#endif
inline void ContextProfile::set_reqid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.reqId)
}
inline void ContextProfile::set_reqid(const char* value, size_t size) {
  
  reqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.reqId)
}
inline ::std::string* ContextProfile::mutable_reqid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.reqId)
  return reqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_reqid() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.reqId)
  
  return reqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_reqid(::std::string* reqid) {
  if (reqid != NULL) {
    
  } else {
    
  }
  reqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.reqId)
}

// uint32 sceneId = 5;
inline void ContextProfile::clear_sceneid() {
  sceneid_ = 0u;
}
inline ::google::protobuf::uint32 ContextProfile::sceneid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.sceneId)
  return sceneid_;
}
inline void ContextProfile::set_sceneid(::google::protobuf::uint32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.sceneId)
}

// string androidId = 6;
inline void ContextProfile::clear_androidid() {
  androidid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::androidid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.androidId)
  return androidid_.GetNoArena();
}
inline void ContextProfile::set_androidid(const ::std::string& value) {
  
  androidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.androidId)
}
#if LANG_CXX11
inline void ContextProfile::set_androidid(::std::string&& value) {
  
  androidid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.androidId)
}
#endif
inline void ContextProfile::set_androidid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  androidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.androidId)
}
inline void ContextProfile::set_androidid(const char* value, size_t size) {
  
  androidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.androidId)
}
inline ::std::string* ContextProfile::mutable_androidid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.androidId)
  return androidid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_androidid() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.androidId)
  
  return androidid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_androidid(::std::string* androidid) {
  if (androidid != NULL) {
    
  } else {
    
  }
  androidid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.androidId)
}

// string imei = 7;
inline void ContextProfile::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::imei() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.imei)
  return imei_.GetNoArena();
}
inline void ContextProfile::set_imei(const ::std::string& value) {
  
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.imei)
}
#if LANG_CXX11
inline void ContextProfile::set_imei(::std::string&& value) {
  
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.imei)
}
#endif
inline void ContextProfile::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.imei)
}
inline void ContextProfile::set_imei(const char* value, size_t size) {
  
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.imei)
}
inline ::std::string* ContextProfile::mutable_imei() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_imei() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.imei)
  
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    
  } else {
    
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.imei)
}

// int64 superUser = 8;
inline void ContextProfile::clear_superuser() {
  superuser_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ContextProfile::superuser() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.superUser)
  return superuser_;
}
inline void ContextProfile::set_superuser(::google::protobuf::int64 value) {
  
  superuser_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.superUser)
}

// string language = 9;
inline void ContextProfile::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::language() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.language)
  return language_.GetNoArena();
}
inline void ContextProfile::set_language(const ::std::string& value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.language)
}
#if LANG_CXX11
inline void ContextProfile::set_language(::std::string&& value) {
  
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.language)
}
#endif
inline void ContextProfile::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.language)
}
inline void ContextProfile::set_language(const char* value, size_t size) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.language)
}
inline ::std::string* ContextProfile::mutable_language() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_language() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.language)
  
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    
  } else {
    
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.language)
}

// string manufacturer = 10;
inline void ContextProfile::clear_manufacturer() {
  manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::manufacturer() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.manufacturer)
  return manufacturer_.GetNoArena();
}
inline void ContextProfile::set_manufacturer(const ::std::string& value) {
  
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.manufacturer)
}
#if LANG_CXX11
inline void ContextProfile::set_manufacturer(::std::string&& value) {
  
  manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.manufacturer)
}
#endif
inline void ContextProfile::set_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.manufacturer)
}
inline void ContextProfile::set_manufacturer(const char* value, size_t size) {
  
  manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.manufacturer)
}
inline ::std::string* ContextProfile::mutable_manufacturer() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.manufacturer)
  return manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_manufacturer() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.manufacturer)
  
  return manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_manufacturer(::std::string* manufacturer) {
  if (manufacturer != NULL) {
    
  } else {
    
  }
  manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacturer);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.manufacturer)
}

// string modelName = 11;
inline void ContextProfile::clear_modelname() {
  modelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::modelname() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.modelName)
  return modelname_.GetNoArena();
}
inline void ContextProfile::set_modelname(const ::std::string& value) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.modelName)
}
#if LANG_CXX11
inline void ContextProfile::set_modelname(::std::string&& value) {
  
  modelname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.modelName)
}
#endif
inline void ContextProfile::set_modelname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.modelName)
}
inline void ContextProfile::set_modelname(const char* value, size_t size) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.modelName)
}
inline ::std::string* ContextProfile::mutable_modelname() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.modelName)
  return modelname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_modelname() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.modelName)
  
  return modelname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_modelname(::std::string* modelname) {
  if (modelname != NULL) {
    
  } else {
    
  }
  modelname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modelname);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.modelName)
}

// string osVersion = 12;
inline void ContextProfile::clear_osversion() {
  osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::osversion() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.osVersion)
  return osversion_.GetNoArena();
}
inline void ContextProfile::set_osversion(const ::std::string& value) {
  
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.osVersion)
}
#if LANG_CXX11
inline void ContextProfile::set_osversion(::std::string&& value) {
  
  osversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.osVersion)
}
#endif
inline void ContextProfile::set_osversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.osVersion)
}
inline void ContextProfile::set_osversion(const char* value, size_t size) {
  
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.osVersion)
}
inline ::std::string* ContextProfile::mutable_osversion() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.osVersion)
  return osversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_osversion() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.osVersion)
  
  return osversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_osversion(::std::string* osversion) {
  if (osversion != NULL) {
    
  } else {
    
  }
  osversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), osversion);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.osVersion)
}

// string resolution = 13;
inline void ContextProfile::clear_resolution() {
  resolution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::resolution() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.resolution)
  return resolution_.GetNoArena();
}
inline void ContextProfile::set_resolution(const ::std::string& value) {
  
  resolution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.resolution)
}
#if LANG_CXX11
inline void ContextProfile::set_resolution(::std::string&& value) {
  
  resolution_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.resolution)
}
#endif
inline void ContextProfile::set_resolution(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resolution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.resolution)
}
inline void ContextProfile::set_resolution(const char* value, size_t size) {
  
  resolution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.resolution)
}
inline ::std::string* ContextProfile::mutable_resolution() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.resolution)
  return resolution_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_resolution() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.resolution)
  
  return resolution_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_resolution(::std::string* resolution) {
  if (resolution != NULL) {
    
  } else {
    
  }
  resolution_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resolution);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.resolution)
}

// string macAddr = 14;
inline void ContextProfile::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::macaddr() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.macAddr)
  return macaddr_.GetNoArena();
}
inline void ContextProfile::set_macaddr(const ::std::string& value) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.macAddr)
}
#if LANG_CXX11
inline void ContextProfile::set_macaddr(::std::string&& value) {
  
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.macAddr)
}
#endif
inline void ContextProfile::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.macAddr)
}
inline void ContextProfile::set_macaddr(const char* value, size_t size) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.macAddr)
}
inline ::std::string* ContextProfile::mutable_macaddr() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.macAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_macaddr() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.macAddr)
  
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    
  } else {
    
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.macAddr)
}

// string clientVersion = 15;
inline void ContextProfile::clear_clientversion() {
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::clientversion() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.clientVersion)
  return clientversion_.GetNoArena();
}
inline void ContextProfile::set_clientversion(const ::std::string& value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.clientVersion)
}
#if LANG_CXX11
inline void ContextProfile::set_clientversion(::std::string&& value) {
  
  clientversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.clientVersion)
}
#endif
inline void ContextProfile::set_clientversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.clientVersion)
}
inline void ContextProfile::set_clientversion(const char* value, size_t size) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.clientVersion)
}
inline ::std::string* ContextProfile::mutable_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.clientVersion)
  return clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_clientversion() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.clientVersion)
  
  return clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_clientversion(::std::string* clientversion) {
  if (clientversion != NULL) {
    
  } else {
    
  }
  clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientversion);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.clientVersion)
}

// string city = 16;
inline void ContextProfile::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::city() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.city)
  return city_.GetNoArena();
}
inline void ContextProfile::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.city)
}
#if LANG_CXX11
inline void ContextProfile::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.city)
}
#endif
inline void ContextProfile::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.city)
}
inline void ContextProfile::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.city)
}
inline ::std::string* ContextProfile::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_city() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.city)
}

// string longitude = 17;
inline void ContextProfile::clear_longitude() {
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::longitude() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.longitude)
  return longitude_.GetNoArena();
}
inline void ContextProfile::set_longitude(const ::std::string& value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.longitude)
}
#if LANG_CXX11
inline void ContextProfile::set_longitude(::std::string&& value) {
  
  longitude_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.longitude)
}
#endif
inline void ContextProfile::set_longitude(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.longitude)
}
inline void ContextProfile::set_longitude(const char* value, size_t size) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.longitude)
}
inline ::std::string* ContextProfile::mutable_longitude() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.longitude)
  return longitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_longitude() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.longitude)
  
  return longitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_longitude(::std::string* longitude) {
  if (longitude != NULL) {
    
  } else {
    
  }
  longitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longitude);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.longitude)
}

// string timezone = 18;
inline void ContextProfile::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::timezone() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.timezone)
  return timezone_.GetNoArena();
}
inline void ContextProfile::set_timezone(const ::std::string& value) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.timezone)
}
#if LANG_CXX11
inline void ContextProfile::set_timezone(::std::string&& value) {
  
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.timezone)
}
#endif
inline void ContextProfile::set_timezone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.timezone)
}
inline void ContextProfile::set_timezone(const char* value, size_t size) {
  
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.timezone)
}
inline ::std::string* ContextProfile::mutable_timezone() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.timezone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_timezone() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.timezone)
  
  return timezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_timezone(::std::string* timezone) {
  if (timezone != NULL) {
    
  } else {
    
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.timezone)
}

// string imsi = 19;
inline void ContextProfile::clear_imsi() {
  imsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::imsi() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.imsi)
  return imsi_.GetNoArena();
}
inline void ContextProfile::set_imsi(const ::std::string& value) {
  
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.imsi)
}
#if LANG_CXX11
inline void ContextProfile::set_imsi(::std::string&& value) {
  
  imsi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.imsi)
}
#endif
inline void ContextProfile::set_imsi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.imsi)
}
inline void ContextProfile::set_imsi(const char* value, size_t size) {
  
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.imsi)
}
inline ::std::string* ContextProfile::mutable_imsi() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.imsi)
  return imsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_imsi() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.imsi)
  
  return imsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_imsi(::std::string* imsi) {
  if (imsi != NULL) {
    
  } else {
    
  }
  imsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imsi);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.imsi)
}

// string networkType = 20;
inline void ContextProfile::clear_networktype() {
  networktype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::networktype() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.networkType)
  return networktype_.GetNoArena();
}
inline void ContextProfile::set_networktype(const ::std::string& value) {
  
  networktype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.networkType)
}
#if LANG_CXX11
inline void ContextProfile::set_networktype(::std::string&& value) {
  
  networktype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.networkType)
}
#endif
inline void ContextProfile::set_networktype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  networktype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.networkType)
}
inline void ContextProfile::set_networktype(const char* value, size_t size) {
  
  networktype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.networkType)
}
inline ::std::string* ContextProfile::mutable_networktype() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.networkType)
  return networktype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_networktype() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.networkType)
  
  return networktype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_networktype(::std::string* networktype) {
  if (networktype != NULL) {
    
  } else {
    
  }
  networktype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), networktype);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.networkType)
}

// string networkOperator = 21;
inline void ContextProfile::clear_networkoperator() {
  networkoperator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::networkoperator() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.networkOperator)
  return networkoperator_.GetNoArena();
}
inline void ContextProfile::set_networkoperator(const ::std::string& value) {
  
  networkoperator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.networkOperator)
}
#if LANG_CXX11
inline void ContextProfile::set_networkoperator(::std::string&& value) {
  
  networkoperator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.networkOperator)
}
#endif
inline void ContextProfile::set_networkoperator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  networkoperator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.networkOperator)
}
inline void ContextProfile::set_networkoperator(const char* value, size_t size) {
  
  networkoperator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.networkOperator)
}
inline ::std::string* ContextProfile::mutable_networkoperator() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.networkOperator)
  return networkoperator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_networkoperator() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.networkOperator)
  
  return networkoperator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_networkoperator(::std::string* networkoperator) {
  if (networkoperator != NULL) {
    
  } else {
    
  }
  networkoperator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), networkoperator);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.networkOperator)
}

// string phoneNumber = 22;
inline void ContextProfile::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::phonenumber() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.phoneNumber)
  return phonenumber_.GetNoArena();
}
inline void ContextProfile::set_phonenumber(const ::std::string& value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.phoneNumber)
}
#if LANG_CXX11
inline void ContextProfile::set_phonenumber(::std::string&& value) {
  
  phonenumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.phoneNumber)
}
#endif
inline void ContextProfile::set_phonenumber(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.phoneNumber)
}
inline void ContextProfile::set_phonenumber(const char* value, size_t size) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.phoneNumber)
}
inline ::std::string* ContextProfile::mutable_phonenumber() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.phoneNumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_phonenumber() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.phoneNumber)
  
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    
  } else {
    
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.phoneNumber)
}

// string clientIp = 23;
inline void ContextProfile::clear_clientip() {
  clientip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::clientip() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.clientIp)
  return clientip_.GetNoArena();
}
inline void ContextProfile::set_clientip(const ::std::string& value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.clientIp)
}
#if LANG_CXX11
inline void ContextProfile::set_clientip(::std::string&& value) {
  
  clientip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.clientIp)
}
#endif
inline void ContextProfile::set_clientip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.clientIp)
}
inline void ContextProfile::set_clientip(const char* value, size_t size) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.clientIp)
}
inline ::std::string* ContextProfile::mutable_clientip() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.clientIp)
  return clientip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_clientip() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.clientIp)
  
  return clientip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_clientip(::std::string* clientip) {
  if (clientip != NULL) {
    
  } else {
    
  }
  clientip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientip);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.clientIp)
}

// int32 netType = 24;
inline void ContextProfile::clear_nettype() {
  nettype_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::nettype() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.netType)
  return nettype_;
}
inline void ContextProfile::set_nettype(::google::protobuf::int32 value) {
  
  nettype_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.netType)
}

// int32 extNetworkType = 25;
inline void ContextProfile::clear_extnetworktype() {
  extnetworktype_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::extnetworktype() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.extNetworkType)
  return extnetworktype_;
}
inline void ContextProfile::set_extnetworktype(::google::protobuf::int32 value) {
  
  extnetworktype_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.extNetworkType)
}

// string wifiSsid = 26;
inline void ContextProfile::clear_wifissid() {
  wifissid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::wifissid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.wifiSsid)
  return wifissid_.GetNoArena();
}
inline void ContextProfile::set_wifissid(const ::std::string& value) {
  
  wifissid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.wifiSsid)
}
#if LANG_CXX11
inline void ContextProfile::set_wifissid(::std::string&& value) {
  
  wifissid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.wifiSsid)
}
#endif
inline void ContextProfile::set_wifissid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wifissid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.wifiSsid)
}
inline void ContextProfile::set_wifissid(const char* value, size_t size) {
  
  wifissid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.wifiSsid)
}
inline ::std::string* ContextProfile::mutable_wifissid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.wifiSsid)
  return wifissid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_wifissid() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.wifiSsid)
  
  return wifissid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_wifissid(::std::string* wifissid) {
  if (wifissid != NULL) {
    
  } else {
    
  }
  wifissid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wifissid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.wifiSsid)
}

// string wifiBssid = 27;
inline void ContextProfile::clear_wifibssid() {
  wifibssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::wifibssid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.wifiBssid)
  return wifibssid_.GetNoArena();
}
inline void ContextProfile::set_wifibssid(const ::std::string& value) {
  
  wifibssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.wifiBssid)
}
#if LANG_CXX11
inline void ContextProfile::set_wifibssid(::std::string&& value) {
  
  wifibssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.wifiBssid)
}
#endif
inline void ContextProfile::set_wifibssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wifibssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.wifiBssid)
}
inline void ContextProfile::set_wifibssid(const char* value, size_t size) {
  
  wifibssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.wifiBssid)
}
inline ::std::string* ContextProfile::mutable_wifibssid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.wifiBssid)
  return wifibssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_wifibssid() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.wifiBssid)
  
  return wifibssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_wifibssid(::std::string* wifibssid) {
  if (wifibssid != NULL) {
    
  } else {
    
  }
  wifibssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wifibssid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.wifiBssid)
}

// string potionId = 28;
inline void ContextProfile::clear_potionid() {
  potionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::potionid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.potionId)
  return potionid_.GetNoArena();
}
inline void ContextProfile::set_potionid(const ::std::string& value) {
  
  potionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.potionId)
}
#if LANG_CXX11
inline void ContextProfile::set_potionid(::std::string&& value) {
  
  potionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.potionId)
}
#endif
inline void ContextProfile::set_potionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  potionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.potionId)
}
inline void ContextProfile::set_potionid(const char* value, size_t size) {
  
  potionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.potionId)
}
inline ::std::string* ContextProfile::mutable_potionid() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.potionId)
  return potionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_potionid() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.potionId)
  
  return potionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_potionid(::std::string* potionid) {
  if (potionid != NULL) {
    
  } else {
    
  }
  potionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), potionid);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.potionId)
}

// string adtxt = 29;
inline void ContextProfile::clear_adtxt() {
  adtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextProfile::adtxt() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.adtxt)
  return adtxt_.GetNoArena();
}
inline void ContextProfile::set_adtxt(const ::std::string& value) {
  
  adtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.adtxt)
}
#if LANG_CXX11
inline void ContextProfile::set_adtxt(::std::string&& value) {
  
  adtxt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_predictor.ContextProfile.adtxt)
}
#endif
inline void ContextProfile::set_adtxt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  adtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_predictor.ContextProfile.adtxt)
}
inline void ContextProfile::set_adtxt(const char* value, size_t size) {
  
  adtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_predictor.ContextProfile.adtxt)
}
inline ::std::string* ContextProfile::mutable_adtxt() {
  
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.adtxt)
  return adtxt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextProfile::release_adtxt() {
  // @@protoc_insertion_point(field_release:so_predictor.ContextProfile.adtxt)
  
  return adtxt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextProfile::set_allocated_adtxt(::std::string* adtxt) {
  if (adtxt != NULL) {
    
  } else {
    
  }
  adtxt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adtxt);
  // @@protoc_insertion_point(field_set_allocated:so_predictor.ContextProfile.adtxt)
}

// int32 adType = 30;
inline void ContextProfile::clear_adtype() {
  adtype_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::adtype() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.adType)
  return adtype_;
}
inline void ContextProfile::set_adtype(::google::protobuf::int32 value) {
  
  adtype_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.adType)
}

// int32 startTime = 31;
inline void ContextProfile::clear_starttime() {
  starttime_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::starttime() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.startTime)
  return starttime_;
}
inline void ContextProfile::set_starttime(::google::protobuf::int32 value) {
  
  starttime_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.startTime)
}

// int32 endTime = 32;
inline void ContextProfile::clear_endtime() {
  endtime_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::endtime() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.endTime)
  return endtime_;
}
inline void ContextProfile::set_endtime(::google::protobuf::int32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.endTime)
}

// double price = 33;
inline void ContextProfile::clear_price() {
  price_ = 0;
}
inline double ContextProfile::price() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.price)
  return price_;
}
inline void ContextProfile::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.price)
}

// int32 costType = 34;
inline void ContextProfile::clear_costtype() {
  costtype_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::costtype() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.costType)
  return costtype_;
}
inline void ContextProfile::set_costtype(::google::protobuf::int32 value) {
  
  costtype_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.costType)
}

// map<string, string> ideaMap = 35;
inline int ContextProfile::ideamap_size() const {
  return ideamap_.size();
}
inline void ContextProfile::clear_ideamap() {
  ideamap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ContextProfile::ideamap() const {
  // @@protoc_insertion_point(field_map:so_predictor.ContextProfile.ideaMap)
  return ideamap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ContextProfile::mutable_ideamap() {
  // @@protoc_insertion_point(field_mutable_map:so_predictor.ContextProfile.ideaMap)
  return ideamap_.MutableMap();
}

// bool isIncludeAge = 36;
inline void ContextProfile::clear_isincludeage() {
  isincludeage_ = false;
}
inline bool ContextProfile::isincludeage() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.isIncludeAge)
  return isincludeage_;
}
inline void ContextProfile::set_isincludeage(bool value) {
  
  isincludeage_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.isIncludeAge)
}

// repeated .so_predictor.Interval ageInterval = 37;
inline int ContextProfile::ageinterval_size() const {
  return ageinterval_.size();
}
inline void ContextProfile::clear_ageinterval() {
  ageinterval_.Clear();
}
inline ::so_predictor::Interval* ContextProfile::mutable_ageinterval(int index) {
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.ageInterval)
  return ageinterval_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >*
ContextProfile::mutable_ageinterval() {
  // @@protoc_insertion_point(field_mutable_list:so_predictor.ContextProfile.ageInterval)
  return &ageinterval_;
}
inline const ::so_predictor::Interval& ContextProfile::ageinterval(int index) const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.ageInterval)
  return ageinterval_.Get(index);
}
inline ::so_predictor::Interval* ContextProfile::add_ageinterval() {
  // @@protoc_insertion_point(field_add:so_predictor.ContextProfile.ageInterval)
  return ageinterval_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >&
ContextProfile::ageinterval() const {
  // @@protoc_insertion_point(field_list:so_predictor.ContextProfile.ageInterval)
  return ageinterval_;
}

// bool isIncludeSex = 38;
inline void ContextProfile::clear_isincludesex() {
  isincludesex_ = false;
}
inline bool ContextProfile::isincludesex() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.isIncludeSex)
  return isincludesex_;
}
inline void ContextProfile::set_isincludesex(bool value) {
  
  isincludesex_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.isIncludeSex)
}

// int32 sex = 39;
inline void ContextProfile::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 ContextProfile::sex() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.sex)
  return sex_;
}
inline void ContextProfile::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.sex)
}

// bool isIncludeIncome = 40;
inline void ContextProfile::clear_isincludeincome() {
  isincludeincome_ = false;
}
inline bool ContextProfile::isincludeincome() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.isIncludeIncome)
  return isincludeincome_;
}
inline void ContextProfile::set_isincludeincome(bool value) {
  
  isincludeincome_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.isIncludeIncome)
}

// repeated .so_predictor.Interval incomeInterval = 41;
inline int ContextProfile::incomeinterval_size() const {
  return incomeinterval_.size();
}
inline void ContextProfile::clear_incomeinterval() {
  incomeinterval_.Clear();
}
inline ::so_predictor::Interval* ContextProfile::mutable_incomeinterval(int index) {
  // @@protoc_insertion_point(field_mutable:so_predictor.ContextProfile.incomeInterval)
  return incomeinterval_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >*
ContextProfile::mutable_incomeinterval() {
  // @@protoc_insertion_point(field_mutable_list:so_predictor.ContextProfile.incomeInterval)
  return &incomeinterval_;
}
inline const ::so_predictor::Interval& ContextProfile::incomeinterval(int index) const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.incomeInterval)
  return incomeinterval_.Get(index);
}
inline ::so_predictor::Interval* ContextProfile::add_incomeinterval() {
  // @@protoc_insertion_point(field_add:so_predictor.ContextProfile.incomeInterval)
  return incomeinterval_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_predictor::Interval >&
ContextProfile::incomeinterval() const {
  // @@protoc_insertion_point(field_list:so_predictor.ContextProfile.incomeInterval)
  return incomeinterval_;
}

// bool isIncludeCity = 42;
inline void ContextProfile::clear_isincludecity() {
  isincludecity_ = false;
}
inline bool ContextProfile::isincludecity() const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.isIncludeCity)
  return isincludecity_;
}
inline void ContextProfile::set_isincludecity(bool value) {
  
  isincludecity_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.isIncludeCity)
}

// repeated uint32 vecCityId = 43;
inline int ContextProfile::veccityid_size() const {
  return veccityid_.size();
}
inline void ContextProfile::clear_veccityid() {
  veccityid_.Clear();
}
inline ::google::protobuf::uint32 ContextProfile::veccityid(int index) const {
  // @@protoc_insertion_point(field_get:so_predictor.ContextProfile.vecCityId)
  return veccityid_.Get(index);
}
inline void ContextProfile::set_veccityid(int index, ::google::protobuf::uint32 value) {
  veccityid_.Set(index, value);
  // @@protoc_insertion_point(field_set:so_predictor.ContextProfile.vecCityId)
}
inline void ContextProfile::add_veccityid(::google::protobuf::uint32 value) {
  veccityid_.Add(value);
  // @@protoc_insertion_point(field_add:so_predictor.ContextProfile.vecCityId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ContextProfile::veccityid() const {
  // @@protoc_insertion_point(field_list:so_predictor.ContextProfile.vecCityId)
  return veccityid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ContextProfile::mutable_veccityid() {
  // @@protoc_insertion_point(field_mutable_list:so_predictor.ContextProfile.vecCityId)
  return &veccityid_;
}

// -------------------------------------------------------------------

// Interval

// double lowerLimit = 1;
inline void Interval::clear_lowerlimit() {
  lowerlimit_ = 0;
}
inline double Interval::lowerlimit() const {
  // @@protoc_insertion_point(field_get:so_predictor.Interval.lowerLimit)
  return lowerlimit_;
}
inline void Interval::set_lowerlimit(double value) {
  
  lowerlimit_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.Interval.lowerLimit)
}

// double upperLimit = 2;
inline void Interval::clear_upperlimit() {
  upperlimit_ = 0;
}
inline double Interval::upperlimit() const {
  // @@protoc_insertion_point(field_get:so_predictor.Interval.upperLimit)
  return upperlimit_;
}
inline void Interval::set_upperlimit(double value) {
  
  upperlimit_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.Interval.upperLimit)
}

// -------------------------------------------------------------------

// ExperimentInfo

// uint64 eid = 1;
inline void ExperimentInfo::clear_eid() {
  eid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExperimentInfo::eid() const {
  // @@protoc_insertion_point(field_get:so_predictor.ExperimentInfo.eid)
  return eid_;
}
inline void ExperimentInfo::set_eid(::google::protobuf::uint64 value) {
  
  eid_ = value;
  // @@protoc_insertion_point(field_set:so_predictor.ExperimentInfo.eid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace so_predictor

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_predictor_2eproto
