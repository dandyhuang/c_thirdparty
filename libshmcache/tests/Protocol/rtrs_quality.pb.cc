// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtrs_quality.proto

#include "rtrs_quality.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_recommend_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocationInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NetworkInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RuleAppDirectInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_RecommendInfo;
}  // namespace protobuf_recommend_2eproto
namespace protobuf_rtrs_5fabtest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fabtest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AbtestReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fabtest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AbtestRsp;
}  // namespace protobuf_rtrs_5fabtest_2eproto
namespace protobuf_rtrs_5fexpinfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fexpinfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AlgMultiTestInfo;
}  // namespace protobuf_rtrs_5fexpinfo_2eproto
namespace protobuf_rtrs_5fquality_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fquality_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RequestTimeItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fquality_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_QualityRspBody_RspPosInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fquality_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_QualityReqBody_GlobalInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fquality_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_QualityReqBody_ReqPosInfo;
}  // namespace protobuf_rtrs_5fquality_2eproto
namespace protobuf_rtrs_5fschedule_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fschedule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Request;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fschedule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Response;
}  // namespace protobuf_rtrs_5fschedule_2eproto
namespace so_rtrs {
class QualityReqBody_ReqPosInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QualityReqBody_ReqPosInfo>
      _instance;
} _QualityReqBody_ReqPosInfo_default_instance_;
class QualityReqBody_GlobalInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QualityReqBody_GlobalInfo>
      _instance;
} _QualityReqBody_GlobalInfo_default_instance_;
class QualityReqBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QualityReqBody>
      _instance;
} _QualityReqBody_default_instance_;
class RequestTimeItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestTimeItem>
      _instance;
} _RequestTimeItem_default_instance_;
class QualityRspBody_RspPosInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QualityRspBody_RspPosInfo>
      _instance;
} _QualityRspBody_RspPosInfo_default_instance_;
class QualityRspBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QualityRspBody>
      _instance;
} _QualityRspBody_default_instance_;
}  // namespace so_rtrs
namespace protobuf_rtrs_5fquality_2eproto {
static void InitDefaultsQualityReqBody_ReqPosInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_QualityReqBody_ReqPosInfo_default_instance_;
    new (ptr) ::so_rtrs::QualityReqBody_ReqPosInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::QualityReqBody_ReqPosInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_QualityReqBody_ReqPosInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsQualityReqBody_ReqPosInfo}, {
      &protobuf_rtrs_5fschedule_2eproto::scc_info_Request.base,
      &protobuf_recommend_2eproto::scc_info_RecommendInfo.base,
      &protobuf_rtrs_5fabtest_2eproto::scc_info_AbtestReq.base,
      &protobuf_rtrs_5fexpinfo_2eproto::scc_info_AlgMultiTestInfo.base,}};

static void InitDefaultsQualityReqBody_GlobalInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_QualityReqBody_GlobalInfo_default_instance_;
    new (ptr) ::so_rtrs::QualityReqBody_GlobalInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::QualityReqBody_GlobalInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_QualityReqBody_GlobalInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsQualityReqBody_GlobalInfo}, {
      &protobuf_recommend_2eproto::scc_info_RuleAppDirectInfo.base,
      &protobuf_recommend_2eproto::scc_info_DeviceInfo.base,
      &protobuf_recommend_2eproto::scc_info_LocationInfo.base,
      &protobuf_recommend_2eproto::scc_info_NetworkInfo.base,}};

static void InitDefaultsQualityReqBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_QualityReqBody_default_instance_;
    new (ptr) ::so_rtrs::QualityReqBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::QualityReqBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_QualityReqBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsQualityReqBody}, {
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody_GlobalInfo.base,
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody_ReqPosInfo.base,
      &protobuf_rtrs_5fquality_2eproto::scc_info_RequestTimeItem.base,}};

static void InitDefaultsRequestTimeItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_RequestTimeItem_default_instance_;
    new (ptr) ::so_rtrs::RequestTimeItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::RequestTimeItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestTimeItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestTimeItem}, {}};

static void InitDefaultsQualityRspBody_RspPosInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_QualityRspBody_RspPosInfo_default_instance_;
    new (ptr) ::so_rtrs::QualityRspBody_RspPosInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::QualityRspBody_RspPosInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_QualityRspBody_RspPosInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsQualityRspBody_RspPosInfo}, {
      &protobuf_rtrs_5fschedule_2eproto::scc_info_Response.base,
      &protobuf_recommend_2eproto::scc_info_RecommendInfo.base,
      &protobuf_rtrs_5fabtest_2eproto::scc_info_AbtestRsp.base,}};

static void InitDefaultsQualityRspBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_QualityRspBody_default_instance_;
    new (ptr) ::so_rtrs::QualityRspBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::QualityRspBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QualityRspBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQualityRspBody}, {
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityRspBody_RspPosInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QualityReqBody_ReqPosInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QualityReqBody_GlobalInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QualityReqBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestTimeItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QualityRspBody_RspPosInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QualityRspBody.base);
}

}  // namespace protobuf_rtrs_5fquality_2eproto
namespace so_rtrs {

// ===================================================================

void QualityReqBody_ReqPosInfo::InitAsDefaultInstance() {
  ::so_rtrs::_QualityReqBody_ReqPosInfo_default_instance_._instance.get_mutable()->mix_req_ = const_cast< ::so_rtrs::schedule::Request*>(
      ::so_rtrs::schedule::Request::internal_default_instance());
  ::so_rtrs::_QualityReqBody_ReqPosInfo_default_instance_._instance.get_mutable()->pos_detail_info_ = const_cast< ::so_rtrs::RecommendInfo*>(
      ::so_rtrs::RecommendInfo::internal_default_instance());
  ::so_rtrs::_QualityReqBody_ReqPosInfo_default_instance_._instance.get_mutable()->abtest_req_ = const_cast< ::so_rtrs::AbtestReq*>(
      ::so_rtrs::AbtestReq::internal_default_instance());
}
void QualityReqBody_ReqPosInfo::clear_mix_req() {
  if (GetArenaNoVirtual() == NULL && mix_req_ != NULL) {
    delete mix_req_;
  }
  mix_req_ = NULL;
}
void QualityReqBody_ReqPosInfo::clear_pos_detail_info() {
  if (GetArenaNoVirtual() == NULL && pos_detail_info_ != NULL) {
    delete pos_detail_info_;
  }
  pos_detail_info_ = NULL;
}
void QualityReqBody_ReqPosInfo::clear_abtest_req() {
  if (GetArenaNoVirtual() == NULL && abtest_req_ != NULL) {
    delete abtest_req_;
  }
  abtest_req_ = NULL;
}
void QualityReqBody_ReqPosInfo::clear_exp_info() {
  exp_info_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QualityReqBody_ReqPosInfo::kPosIdFieldNumber;
const int QualityReqBody_ReqPosInfo::kMixReqFieldNumber;
const int QualityReqBody_ReqPosInfo::kPosDetailInfoFieldNumber;
const int QualityReqBody_ReqPosInfo::kAbtestReqFieldNumber;
const int QualityReqBody_ReqPosInfo::kExpInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QualityReqBody_ReqPosInfo::QualityReqBody_ReqPosInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody_ReqPosInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.QualityReqBody.ReqPosInfo)
}
QualityReqBody_ReqPosInfo::QualityReqBody_ReqPosInfo(const QualityReqBody_ReqPosInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      exp_info_(from.exp_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mix_req()) {
    mix_req_ = new ::so_rtrs::schedule::Request(*from.mix_req_);
  } else {
    mix_req_ = NULL;
  }
  if (from.has_pos_detail_info()) {
    pos_detail_info_ = new ::so_rtrs::RecommendInfo(*from.pos_detail_info_);
  } else {
    pos_detail_info_ = NULL;
  }
  if (from.has_abtest_req()) {
    abtest_req_ = new ::so_rtrs::AbtestReq(*from.abtest_req_);
  } else {
    abtest_req_ = NULL;
  }
  pos_id_ = from.pos_id_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.QualityReqBody.ReqPosInfo)
}

void QualityReqBody_ReqPosInfo::SharedCtor() {
  ::memset(&mix_req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_id_) -
      reinterpret_cast<char*>(&mix_req_)) + sizeof(pos_id_));
}

QualityReqBody_ReqPosInfo::~QualityReqBody_ReqPosInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.QualityReqBody.ReqPosInfo)
  SharedDtor();
}

void QualityReqBody_ReqPosInfo::SharedDtor() {
  if (this != internal_default_instance()) delete mix_req_;
  if (this != internal_default_instance()) delete pos_detail_info_;
  if (this != internal_default_instance()) delete abtest_req_;
}

void QualityReqBody_ReqPosInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QualityReqBody_ReqPosInfo& QualityReqBody_ReqPosInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody_ReqPosInfo.base);
  return *internal_default_instance();
}


void QualityReqBody_ReqPosInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.QualityReqBody.ReqPosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exp_info_.Clear();
  if (GetArenaNoVirtual() == NULL && mix_req_ != NULL) {
    delete mix_req_;
  }
  mix_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_detail_info_ != NULL) {
    delete pos_detail_info_;
  }
  pos_detail_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && abtest_req_ != NULL) {
    delete abtest_req_;
  }
  abtest_req_ = NULL;
  pos_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QualityReqBody_ReqPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.QualityReqBody.ReqPosInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pos_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.schedule.Request mix_req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mix_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.RecommendInfo pos_detail_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos_detail_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.AbtestReq abtest_req = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_abtest_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.AlgMultiTestInfo exp_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exp_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.QualityReqBody.ReqPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.QualityReqBody.ReqPosInfo)
  return false;
#undef DO_
}

void QualityReqBody_ReqPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.QualityReqBody.ReqPosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pos_id = 1;
  if (this->pos_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos_id(), output);
  }

  // .so_rtrs.schedule.Request mix_req = 2;
  if (this->has_mix_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_mix_req(), output);
  }

  // .so_rtrs.RecommendInfo pos_detail_info = 3;
  if (this->has_pos_detail_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_pos_detail_info(), output);
  }

  // .so_rtrs.AbtestReq abtest_req = 4;
  if (this->has_abtest_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_abtest_req(), output);
  }

  // repeated .so_rtrs.AlgMultiTestInfo exp_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exp_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->exp_info(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.QualityReqBody.ReqPosInfo)
}

size_t QualityReqBody_ReqPosInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.QualityReqBody.ReqPosInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.AlgMultiTestInfo exp_info = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->exp_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exp_info(static_cast<int>(i)));
    }
  }

  // .so_rtrs.schedule.Request mix_req = 2;
  if (this->has_mix_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mix_req_);
  }

  // .so_rtrs.RecommendInfo pos_detail_info = 3;
  if (this->has_pos_detail_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_detail_info_);
  }

  // .so_rtrs.AbtestReq abtest_req = 4;
  if (this->has_abtest_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *abtest_req_);
  }

  // uint32 pos_id = 1;
  if (this->pos_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pos_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QualityReqBody_ReqPosInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const QualityReqBody_ReqPosInfo*>(&from));
}

void QualityReqBody_ReqPosInfo::MergeFrom(const QualityReqBody_ReqPosInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.QualityReqBody.ReqPosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exp_info_.MergeFrom(from.exp_info_);
  if (from.has_mix_req()) {
    mutable_mix_req()->::so_rtrs::schedule::Request::MergeFrom(from.mix_req());
  }
  if (from.has_pos_detail_info()) {
    mutable_pos_detail_info()->::so_rtrs::RecommendInfo::MergeFrom(from.pos_detail_info());
  }
  if (from.has_abtest_req()) {
    mutable_abtest_req()->::so_rtrs::AbtestReq::MergeFrom(from.abtest_req());
  }
  if (from.pos_id() != 0) {
    set_pos_id(from.pos_id());
  }
}

void QualityReqBody_ReqPosInfo::CopyFrom(const QualityReqBody_ReqPosInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.QualityReqBody.ReqPosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityReqBody_ReqPosInfo::IsInitialized() const {
  return true;
}

void QualityReqBody_ReqPosInfo::Swap(QualityReqBody_ReqPosInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityReqBody_ReqPosInfo::InternalSwap(QualityReqBody_ReqPosInfo* other) {
  using std::swap;
  CastToBase(&exp_info_)->InternalSwap(CastToBase(&other->exp_info_));
  swap(mix_req_, other->mix_req_);
  swap(pos_detail_info_, other->pos_detail_info_);
  swap(abtest_req_, other->abtest_req_);
  swap(pos_id_, other->pos_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string QualityReqBody_ReqPosInfo::GetTypeName() const {
  return "so_rtrs.QualityReqBody.ReqPosInfo";
}


// ===================================================================

void QualityReqBody_GlobalInfo::InitAsDefaultInstance() {
  ::so_rtrs::_QualityReqBody_GlobalInfo_default_instance_._instance.get_mutable()->rule_app_direct_info_ = const_cast< ::so_rtrs::RuleAppDirectInfo*>(
      ::so_rtrs::RuleAppDirectInfo::internal_default_instance());
  ::so_rtrs::_QualityReqBody_GlobalInfo_default_instance_._instance.get_mutable()->recom_device_ = const_cast< ::so_rtrs::DeviceInfo*>(
      ::so_rtrs::DeviceInfo::internal_default_instance());
  ::so_rtrs::_QualityReqBody_GlobalInfo_default_instance_._instance.get_mutable()->recom_location_ = const_cast< ::so_rtrs::LocationInfo*>(
      ::so_rtrs::LocationInfo::internal_default_instance());
  ::so_rtrs::_QualityReqBody_GlobalInfo_default_instance_._instance.get_mutable()->recom_network_ = const_cast< ::so_rtrs::NetworkInfo*>(
      ::so_rtrs::NetworkInfo::internal_default_instance());
}
void QualityReqBody_GlobalInfo::clear_rule_app_direct_info() {
  if (GetArenaNoVirtual() == NULL && rule_app_direct_info_ != NULL) {
    delete rule_app_direct_info_;
  }
  rule_app_direct_info_ = NULL;
}
void QualityReqBody_GlobalInfo::clear_recom_device() {
  if (GetArenaNoVirtual() == NULL && recom_device_ != NULL) {
    delete recom_device_;
  }
  recom_device_ = NULL;
}
void QualityReqBody_GlobalInfo::clear_recom_location() {
  if (GetArenaNoVirtual() == NULL && recom_location_ != NULL) {
    delete recom_location_;
  }
  recom_location_ = NULL;
}
void QualityReqBody_GlobalInfo::clear_recom_network() {
  if (GetArenaNoVirtual() == NULL && recom_network_ != NULL) {
    delete recom_network_;
  }
  recom_network_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QualityReqBody_GlobalInfo::kLogIdFieldNumber;
const int QualityReqBody_GlobalInfo::kRuleAppDirectInfoFieldNumber;
const int QualityReqBody_GlobalInfo::kRecomDeviceFieldNumber;
const int QualityReqBody_GlobalInfo::kRecomLocationFieldNumber;
const int QualityReqBody_GlobalInfo::kRecomNetworkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QualityReqBody_GlobalInfo::QualityReqBody_GlobalInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody_GlobalInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.QualityReqBody.GlobalInfo)
}
QualityReqBody_GlobalInfo::QualityReqBody_GlobalInfo(const QualityReqBody_GlobalInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_id().size() > 0) {
    log_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_id_);
  }
  if (from.has_rule_app_direct_info()) {
    rule_app_direct_info_ = new ::so_rtrs::RuleAppDirectInfo(*from.rule_app_direct_info_);
  } else {
    rule_app_direct_info_ = NULL;
  }
  if (from.has_recom_device()) {
    recom_device_ = new ::so_rtrs::DeviceInfo(*from.recom_device_);
  } else {
    recom_device_ = NULL;
  }
  if (from.has_recom_location()) {
    recom_location_ = new ::so_rtrs::LocationInfo(*from.recom_location_);
  } else {
    recom_location_ = NULL;
  }
  if (from.has_recom_network()) {
    recom_network_ = new ::so_rtrs::NetworkInfo(*from.recom_network_);
  } else {
    recom_network_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:so_rtrs.QualityReqBody.GlobalInfo)
}

void QualityReqBody_GlobalInfo::SharedCtor() {
  log_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rule_app_direct_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recom_network_) -
      reinterpret_cast<char*>(&rule_app_direct_info_)) + sizeof(recom_network_));
}

QualityReqBody_GlobalInfo::~QualityReqBody_GlobalInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.QualityReqBody.GlobalInfo)
  SharedDtor();
}

void QualityReqBody_GlobalInfo::SharedDtor() {
  log_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rule_app_direct_info_;
  if (this != internal_default_instance()) delete recom_device_;
  if (this != internal_default_instance()) delete recom_location_;
  if (this != internal_default_instance()) delete recom_network_;
}

void QualityReqBody_GlobalInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QualityReqBody_GlobalInfo& QualityReqBody_GlobalInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody_GlobalInfo.base);
  return *internal_default_instance();
}


void QualityReqBody_GlobalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.QualityReqBody.GlobalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rule_app_direct_info_ != NULL) {
    delete rule_app_direct_info_;
  }
  rule_app_direct_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && recom_device_ != NULL) {
    delete recom_device_;
  }
  recom_device_ = NULL;
  if (GetArenaNoVirtual() == NULL && recom_location_ != NULL) {
    delete recom_location_;
  }
  recom_location_ = NULL;
  if (GetArenaNoVirtual() == NULL && recom_network_ != NULL) {
    delete recom_network_;
  }
  recom_network_ = NULL;
  _internal_metadata_.Clear();
}

bool QualityReqBody_GlobalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.QualityReqBody.GlobalInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes log_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.RuleAppDirectInfo rule_app_direct_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rule_app_direct_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.DeviceInfo recom_device = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recom_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.LocationInfo recom_location = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recom_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.NetworkInfo recom_network = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recom_network()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.QualityReqBody.GlobalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.QualityReqBody.GlobalInfo)
  return false;
#undef DO_
}

void QualityReqBody_GlobalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.QualityReqBody.GlobalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes log_id = 1;
  if (this->log_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->log_id(), output);
  }

  // .so_rtrs.RuleAppDirectInfo rule_app_direct_info = 2;
  if (this->has_rule_app_direct_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_rule_app_direct_info(), output);
  }

  // .so_rtrs.DeviceInfo recom_device = 3;
  if (this->has_recom_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_recom_device(), output);
  }

  // .so_rtrs.LocationInfo recom_location = 4;
  if (this->has_recom_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_recom_location(), output);
  }

  // .so_rtrs.NetworkInfo recom_network = 5;
  if (this->has_recom_network()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_recom_network(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.QualityReqBody.GlobalInfo)
}

size_t QualityReqBody_GlobalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.QualityReqBody.GlobalInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes log_id = 1;
  if (this->log_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_id());
  }

  // .so_rtrs.RuleAppDirectInfo rule_app_direct_info = 2;
  if (this->has_rule_app_direct_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rule_app_direct_info_);
  }

  // .so_rtrs.DeviceInfo recom_device = 3;
  if (this->has_recom_device()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recom_device_);
  }

  // .so_rtrs.LocationInfo recom_location = 4;
  if (this->has_recom_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recom_location_);
  }

  // .so_rtrs.NetworkInfo recom_network = 5;
  if (this->has_recom_network()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recom_network_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QualityReqBody_GlobalInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const QualityReqBody_GlobalInfo*>(&from));
}

void QualityReqBody_GlobalInfo::MergeFrom(const QualityReqBody_GlobalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.QualityReqBody.GlobalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_id().size() > 0) {

    log_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_id_);
  }
  if (from.has_rule_app_direct_info()) {
    mutable_rule_app_direct_info()->::so_rtrs::RuleAppDirectInfo::MergeFrom(from.rule_app_direct_info());
  }
  if (from.has_recom_device()) {
    mutable_recom_device()->::so_rtrs::DeviceInfo::MergeFrom(from.recom_device());
  }
  if (from.has_recom_location()) {
    mutable_recom_location()->::so_rtrs::LocationInfo::MergeFrom(from.recom_location());
  }
  if (from.has_recom_network()) {
    mutable_recom_network()->::so_rtrs::NetworkInfo::MergeFrom(from.recom_network());
  }
}

void QualityReqBody_GlobalInfo::CopyFrom(const QualityReqBody_GlobalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.QualityReqBody.GlobalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityReqBody_GlobalInfo::IsInitialized() const {
  return true;
}

void QualityReqBody_GlobalInfo::Swap(QualityReqBody_GlobalInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityReqBody_GlobalInfo::InternalSwap(QualityReqBody_GlobalInfo* other) {
  using std::swap;
  log_id_.Swap(&other->log_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rule_app_direct_info_, other->rule_app_direct_info_);
  swap(recom_device_, other->recom_device_);
  swap(recom_location_, other->recom_location_);
  swap(recom_network_, other->recom_network_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string QualityReqBody_GlobalInfo::GetTypeName() const {
  return "so_rtrs.QualityReqBody.GlobalInfo";
}


// ===================================================================

void QualityReqBody::InitAsDefaultInstance() {
  ::so_rtrs::_QualityReqBody_default_instance_._instance.get_mutable()->global_info_ = const_cast< ::so_rtrs::QualityReqBody_GlobalInfo*>(
      ::so_rtrs::QualityReqBody_GlobalInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QualityReqBody::kGlobalInfoFieldNumber;
const int QualityReqBody::kReqPosInfoFieldNumber;
const int QualityReqBody::kRequestTimeItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QualityReqBody::QualityReqBody()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.QualityReqBody)
}
QualityReqBody::QualityReqBody(const QualityReqBody& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      req_pos_info_(from.req_pos_info_),
      request_time_items_(from.request_time_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_global_info()) {
    global_info_ = new ::so_rtrs::QualityReqBody_GlobalInfo(*from.global_info_);
  } else {
    global_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:so_rtrs.QualityReqBody)
}

void QualityReqBody::SharedCtor() {
  global_info_ = NULL;
}

QualityReqBody::~QualityReqBody() {
  // @@protoc_insertion_point(destructor:so_rtrs.QualityReqBody)
  SharedDtor();
}

void QualityReqBody::SharedDtor() {
  if (this != internal_default_instance()) delete global_info_;
}

void QualityReqBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QualityReqBody& QualityReqBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtrs_5fquality_2eproto::scc_info_QualityReqBody.base);
  return *internal_default_instance();
}


void QualityReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.QualityReqBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_pos_info_.Clear();
  request_time_items_.Clear();
  if (GetArenaNoVirtual() == NULL && global_info_ != NULL) {
    delete global_info_;
  }
  global_info_ = NULL;
  _internal_metadata_.Clear();
}

bool QualityReqBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.QualityReqBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .so_rtrs.QualityReqBody.GlobalInfo global_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.QualityReqBody.ReqPosInfo req_pos_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_req_pos_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .so_rtrs.RequestTimeItem request_time_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_request_time_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.QualityReqBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.QualityReqBody)
  return false;
#undef DO_
}

void QualityReqBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.QualityReqBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .so_rtrs.QualityReqBody.GlobalInfo global_info = 1;
  if (this->has_global_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_global_info(), output);
  }

  // repeated .so_rtrs.QualityReqBody.ReqPosInfo req_pos_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->req_pos_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->req_pos_info(static_cast<int>(i)),
      output);
  }

  // repeated .so_rtrs.RequestTimeItem request_time_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->request_time_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->request_time_items(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.QualityReqBody)
}

size_t QualityReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.QualityReqBody)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.QualityReqBody.ReqPosInfo req_pos_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->req_pos_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->req_pos_info(static_cast<int>(i)));
    }
  }

  // repeated .so_rtrs.RequestTimeItem request_time_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->request_time_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->request_time_items(static_cast<int>(i)));
    }
  }

  // .so_rtrs.QualityReqBody.GlobalInfo global_info = 1;
  if (this->has_global_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *global_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QualityReqBody::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const QualityReqBody*>(&from));
}

void QualityReqBody::MergeFrom(const QualityReqBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.QualityReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  req_pos_info_.MergeFrom(from.req_pos_info_);
  request_time_items_.MergeFrom(from.request_time_items_);
  if (from.has_global_info()) {
    mutable_global_info()->::so_rtrs::QualityReqBody_GlobalInfo::MergeFrom(from.global_info());
  }
}

void QualityReqBody::CopyFrom(const QualityReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.QualityReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityReqBody::IsInitialized() const {
  return true;
}

void QualityReqBody::Swap(QualityReqBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityReqBody::InternalSwap(QualityReqBody* other) {
  using std::swap;
  CastToBase(&req_pos_info_)->InternalSwap(CastToBase(&other->req_pos_info_));
  CastToBase(&request_time_items_)->InternalSwap(CastToBase(&other->request_time_items_));
  swap(global_info_, other->global_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string QualityReqBody::GetTypeName() const {
  return "so_rtrs.QualityReqBody";
}


// ===================================================================

void RequestTimeItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestTimeItem::kStepNameFieldNumber;
const int RequestTimeItem::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestTimeItem::RequestTimeItem()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtrs_5fquality_2eproto::scc_info_RequestTimeItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.RequestTimeItem)
}
RequestTimeItem::RequestTimeItem(const RequestTimeItem& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.step_name().size() > 0) {
    step_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_name_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.RequestTimeItem)
}

void RequestTimeItem::SharedCtor() {
  step_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

RequestTimeItem::~RequestTimeItem() {
  // @@protoc_insertion_point(destructor:so_rtrs.RequestTimeItem)
  SharedDtor();
}

void RequestTimeItem::SharedDtor() {
  step_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestTimeItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestTimeItem& RequestTimeItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtrs_5fquality_2eproto::scc_info_RequestTimeItem.base);
  return *internal_default_instance();
}


void RequestTimeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.RequestTimeItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RequestTimeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.RequestTimeItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string step_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_step_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->step_name().data(), static_cast<int>(this->step_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "so_rtrs.RequestTimeItem.step_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.RequestTimeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.RequestTimeItem)
  return false;
#undef DO_
}

void RequestTimeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.RequestTimeItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step_name = 1;
  if (this->step_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_name().data(), static_cast<int>(this->step_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "so_rtrs.RequestTimeItem.step_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->step_name(), output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.RequestTimeItem)
}

size_t RequestTimeItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.RequestTimeItem)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string step_name = 1;
  if (this->step_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->step_name());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestTimeItem::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RequestTimeItem*>(&from));
}

void RequestTimeItem::MergeFrom(const RequestTimeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.RequestTimeItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.step_name().size() > 0) {

    step_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_name_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void RequestTimeItem::CopyFrom(const RequestTimeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.RequestTimeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestTimeItem::IsInitialized() const {
  return true;
}

void RequestTimeItem::Swap(RequestTimeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestTimeItem::InternalSwap(RequestTimeItem* other) {
  using std::swap;
  step_name_.Swap(&other->step_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string RequestTimeItem::GetTypeName() const {
  return "so_rtrs.RequestTimeItem";
}


// ===================================================================

void QualityRspBody_RspPosInfo::InitAsDefaultInstance() {
  ::so_rtrs::_QualityRspBody_RspPosInfo_default_instance_._instance.get_mutable()->mix_rsp_ = const_cast< ::so_rtrs::schedule::Response*>(
      ::so_rtrs::schedule::Response::internal_default_instance());
  ::so_rtrs::_QualityRspBody_RspPosInfo_default_instance_._instance.get_mutable()->pos_detail_info_ = const_cast< ::so_rtrs::RecommendInfo*>(
      ::so_rtrs::RecommendInfo::internal_default_instance());
  ::so_rtrs::_QualityRspBody_RspPosInfo_default_instance_._instance.get_mutable()->abtest_rsp_ = const_cast< ::so_rtrs::AbtestRsp*>(
      ::so_rtrs::AbtestRsp::internal_default_instance());
}
void QualityRspBody_RspPosInfo::clear_mix_rsp() {
  if (GetArenaNoVirtual() == NULL && mix_rsp_ != NULL) {
    delete mix_rsp_;
  }
  mix_rsp_ = NULL;
}
void QualityRspBody_RspPosInfo::clear_pos_detail_info() {
  if (GetArenaNoVirtual() == NULL && pos_detail_info_ != NULL) {
    delete pos_detail_info_;
  }
  pos_detail_info_ = NULL;
}
void QualityRspBody_RspPosInfo::clear_abtest_rsp() {
  if (GetArenaNoVirtual() == NULL && abtest_rsp_ != NULL) {
    delete abtest_rsp_;
  }
  abtest_rsp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QualityRspBody_RspPosInfo::kMixRspFieldNumber;
const int QualityRspBody_RspPosInfo::kPosDetailInfoFieldNumber;
const int QualityRspBody_RspPosInfo::kAbtestRspFieldNumber;
const int QualityRspBody_RspPosInfo::kRtrsCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QualityRspBody_RspPosInfo::QualityRspBody_RspPosInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityRspBody_RspPosInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.QualityRspBody.RspPosInfo)
}
QualityRspBody_RspPosInfo::QualityRspBody_RspPosInfo(const QualityRspBody_RspPosInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mix_rsp()) {
    mix_rsp_ = new ::so_rtrs::schedule::Response(*from.mix_rsp_);
  } else {
    mix_rsp_ = NULL;
  }
  if (from.has_pos_detail_info()) {
    pos_detail_info_ = new ::so_rtrs::RecommendInfo(*from.pos_detail_info_);
  } else {
    pos_detail_info_ = NULL;
  }
  if (from.has_abtest_rsp()) {
    abtest_rsp_ = new ::so_rtrs::AbtestRsp(*from.abtest_rsp_);
  } else {
    abtest_rsp_ = NULL;
  }
  rtrs_code_ = from.rtrs_code_;
  // @@protoc_insertion_point(copy_constructor:so_rtrs.QualityRspBody.RspPosInfo)
}

void QualityRspBody_RspPosInfo::SharedCtor() {
  ::memset(&mix_rsp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtrs_code_) -
      reinterpret_cast<char*>(&mix_rsp_)) + sizeof(rtrs_code_));
}

QualityRspBody_RspPosInfo::~QualityRspBody_RspPosInfo() {
  // @@protoc_insertion_point(destructor:so_rtrs.QualityRspBody.RspPosInfo)
  SharedDtor();
}

void QualityRspBody_RspPosInfo::SharedDtor() {
  if (this != internal_default_instance()) delete mix_rsp_;
  if (this != internal_default_instance()) delete pos_detail_info_;
  if (this != internal_default_instance()) delete abtest_rsp_;
}

void QualityRspBody_RspPosInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QualityRspBody_RspPosInfo& QualityRspBody_RspPosInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtrs_5fquality_2eproto::scc_info_QualityRspBody_RspPosInfo.base);
  return *internal_default_instance();
}


void QualityRspBody_RspPosInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.QualityRspBody.RspPosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mix_rsp_ != NULL) {
    delete mix_rsp_;
  }
  mix_rsp_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_detail_info_ != NULL) {
    delete pos_detail_info_;
  }
  pos_detail_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && abtest_rsp_ != NULL) {
    delete abtest_rsp_;
  }
  abtest_rsp_ = NULL;
  rtrs_code_ = 0;
  _internal_metadata_.Clear();
}

bool QualityRspBody_RspPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.QualityRspBody.RspPosInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .so_rtrs.schedule.Response mix_rsp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mix_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.RecommendInfo pos_detail_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos_detail_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .so_rtrs.AbtestRsp abtest_rsp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_abtest_rsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rtrs_code = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 8000 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rtrs_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.QualityRspBody.RspPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.QualityRspBody.RspPosInfo)
  return false;
#undef DO_
}

void QualityRspBody_RspPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.QualityRspBody.RspPosInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .so_rtrs.schedule.Response mix_rsp = 1;
  if (this->has_mix_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_mix_rsp(), output);
  }

  // .so_rtrs.RecommendInfo pos_detail_info = 2;
  if (this->has_pos_detail_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_pos_detail_info(), output);
  }

  // .so_rtrs.AbtestRsp abtest_rsp = 3;
  if (this->has_abtest_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_abtest_rsp(), output);
  }

  // int32 rtrs_code = 1000;
  if (this->rtrs_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1000, this->rtrs_code(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.QualityRspBody.RspPosInfo)
}

size_t QualityRspBody_RspPosInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.QualityRspBody.RspPosInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .so_rtrs.schedule.Response mix_rsp = 1;
  if (this->has_mix_rsp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mix_rsp_);
  }

  // .so_rtrs.RecommendInfo pos_detail_info = 2;
  if (this->has_pos_detail_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_detail_info_);
  }

  // .so_rtrs.AbtestRsp abtest_rsp = 3;
  if (this->has_abtest_rsp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *abtest_rsp_);
  }

  // int32 rtrs_code = 1000;
  if (this->rtrs_code() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rtrs_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QualityRspBody_RspPosInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const QualityRspBody_RspPosInfo*>(&from));
}

void QualityRspBody_RspPosInfo::MergeFrom(const QualityRspBody_RspPosInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.QualityRspBody.RspPosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mix_rsp()) {
    mutable_mix_rsp()->::so_rtrs::schedule::Response::MergeFrom(from.mix_rsp());
  }
  if (from.has_pos_detail_info()) {
    mutable_pos_detail_info()->::so_rtrs::RecommendInfo::MergeFrom(from.pos_detail_info());
  }
  if (from.has_abtest_rsp()) {
    mutable_abtest_rsp()->::so_rtrs::AbtestRsp::MergeFrom(from.abtest_rsp());
  }
  if (from.rtrs_code() != 0) {
    set_rtrs_code(from.rtrs_code());
  }
}

void QualityRspBody_RspPosInfo::CopyFrom(const QualityRspBody_RspPosInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.QualityRspBody.RspPosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityRspBody_RspPosInfo::IsInitialized() const {
  return true;
}

void QualityRspBody_RspPosInfo::Swap(QualityRspBody_RspPosInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityRspBody_RspPosInfo::InternalSwap(QualityRspBody_RspPosInfo* other) {
  using std::swap;
  swap(mix_rsp_, other->mix_rsp_);
  swap(pos_detail_info_, other->pos_detail_info_);
  swap(abtest_rsp_, other->abtest_rsp_);
  swap(rtrs_code_, other->rtrs_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string QualityRspBody_RspPosInfo::GetTypeName() const {
  return "so_rtrs.QualityRspBody.RspPosInfo";
}


// ===================================================================

void QualityRspBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QualityRspBody::kRspPosInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QualityRspBody::QualityRspBody()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rtrs_5fquality_2eproto::scc_info_QualityRspBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.QualityRspBody)
}
QualityRspBody::QualityRspBody(const QualityRspBody& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      rsp_pos_info_(from.rsp_pos_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:so_rtrs.QualityRspBody)
}

void QualityRspBody::SharedCtor() {
}

QualityRspBody::~QualityRspBody() {
  // @@protoc_insertion_point(destructor:so_rtrs.QualityRspBody)
  SharedDtor();
}

void QualityRspBody::SharedDtor() {
}

void QualityRspBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QualityRspBody& QualityRspBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rtrs_5fquality_2eproto::scc_info_QualityRspBody.base);
  return *internal_default_instance();
}


void QualityRspBody::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.QualityRspBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rsp_pos_info_.Clear();
  _internal_metadata_.Clear();
}

bool QualityRspBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.QualityRspBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .so_rtrs.QualityRspBody.RspPosInfo rsp_pos_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rsp_pos_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.QualityRspBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.QualityRspBody)
  return false;
#undef DO_
}

void QualityRspBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.QualityRspBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .so_rtrs.QualityRspBody.RspPosInfo rsp_pos_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rsp_pos_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->rsp_pos_info(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.QualityRspBody)
}

size_t QualityRspBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.QualityRspBody)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.QualityRspBody.RspPosInfo rsp_pos_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rsp_pos_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rsp_pos_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QualityRspBody::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const QualityRspBody*>(&from));
}

void QualityRspBody::MergeFrom(const QualityRspBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.QualityRspBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rsp_pos_info_.MergeFrom(from.rsp_pos_info_);
}

void QualityRspBody::CopyFrom(const QualityRspBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.QualityRspBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityRspBody::IsInitialized() const {
  return true;
}

void QualityRspBody::Swap(QualityRspBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityRspBody::InternalSwap(QualityRspBody* other) {
  using std::swap;
  CastToBase(&rsp_pos_info_)->InternalSwap(CastToBase(&other->rsp_pos_info_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string QualityRspBody::GetTypeName() const {
  return "so_rtrs.QualityRspBody";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace so_rtrs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::QualityReqBody_ReqPosInfo* Arena::CreateMaybeMessage< ::so_rtrs::QualityReqBody_ReqPosInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::QualityReqBody_ReqPosInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::QualityReqBody_GlobalInfo* Arena::CreateMaybeMessage< ::so_rtrs::QualityReqBody_GlobalInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::QualityReqBody_GlobalInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::QualityReqBody* Arena::CreateMaybeMessage< ::so_rtrs::QualityReqBody >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::QualityReqBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::RequestTimeItem* Arena::CreateMaybeMessage< ::so_rtrs::RequestTimeItem >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::RequestTimeItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::QualityRspBody_RspPosInfo* Arena::CreateMaybeMessage< ::so_rtrs::QualityRspBody_RspPosInfo >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::QualityRspBody_RspPosInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::QualityRspBody* Arena::CreateMaybeMessage< ::so_rtrs::QualityRspBody >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::QualityRspBody >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
