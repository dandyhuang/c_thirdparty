// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: batch_recommend.proto

#include "batch_recommend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_recommend_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RecomResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_recommend_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_RecomRequest;
}  // namespace protobuf_recommend_2eproto
namespace so_rtrs {
class BatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchRequest>
      _instance;
} _BatchRequest_default_instance_;
class BatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchResponse>
      _instance;
} _BatchResponse_default_instance_;
}  // namespace so_rtrs
namespace protobuf_batch_5frecommend_2eproto {
static void InitDefaultsBatchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_BatchRequest_default_instance_;
    new (ptr) ::so_rtrs::BatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::BatchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchRequest}, {
      &protobuf_recommend_2eproto::scc_info_RecomRequest.base,}};

static void InitDefaultsBatchResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::so_rtrs::_BatchResponse_default_instance_;
    new (ptr) ::so_rtrs::BatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::so_rtrs::BatchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchResponse}, {
      &protobuf_recommend_2eproto::scc_info_RecomResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BatchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchResponse.base);
}

}  // namespace protobuf_batch_5frecommend_2eproto
namespace so_rtrs {

// ===================================================================

void BatchRequest::InitAsDefaultInstance() {
}
void BatchRequest::clear_recomrequestlist() {
  recomrequestlist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchRequest::kRecomRequestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchRequest::BatchRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_batch_5frecommend_2eproto::scc_info_BatchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.BatchRequest)
}
BatchRequest::BatchRequest(const BatchRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      recomrequestlist_(from.recomrequestlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:so_rtrs.BatchRequest)
}

void BatchRequest::SharedCtor() {
}

BatchRequest::~BatchRequest() {
  // @@protoc_insertion_point(destructor:so_rtrs.BatchRequest)
  SharedDtor();
}

void BatchRequest::SharedDtor() {
}

void BatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatchRequest& BatchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_batch_5frecommend_2eproto::scc_info_BatchRequest.base);
  return *internal_default_instance();
}


void BatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.BatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recomrequestlist_.Clear();
  _internal_metadata_.Clear();
}

bool BatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.BatchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .so_rtrs.RecomRequest recomRequestList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_recomrequestlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.BatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.BatchRequest)
  return false;
#undef DO_
}

void BatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.BatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .so_rtrs.RecomRequest recomRequestList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recomrequestlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->recomrequestlist(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.BatchRequest)
}

size_t BatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.BatchRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.RecomRequest recomRequestList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->recomrequestlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->recomrequestlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BatchRequest*>(&from));
}

void BatchRequest::MergeFrom(const BatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.BatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recomrequestlist_.MergeFrom(from.recomrequestlist_);
}

void BatchRequest::CopyFrom(const BatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.BatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchRequest::IsInitialized() const {
  return true;
}

void BatchRequest::Swap(BatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchRequest::InternalSwap(BatchRequest* other) {
  using std::swap;
  CastToBase(&recomrequestlist_)->InternalSwap(CastToBase(&other->recomrequestlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BatchRequest::GetTypeName() const {
  return "so_rtrs.BatchRequest";
}


// ===================================================================

void BatchResponse::InitAsDefaultInstance() {
}
void BatchResponse::clear_recomresponselist() {
  recomresponselist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchResponse::kRecomResponseListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchResponse::BatchResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_batch_5frecommend_2eproto::scc_info_BatchResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:so_rtrs.BatchResponse)
}
BatchResponse::BatchResponse(const BatchResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      recomresponselist_(from.recomresponselist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:so_rtrs.BatchResponse)
}

void BatchResponse::SharedCtor() {
}

BatchResponse::~BatchResponse() {
  // @@protoc_insertion_point(destructor:so_rtrs.BatchResponse)
  SharedDtor();
}

void BatchResponse::SharedDtor() {
}

void BatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatchResponse& BatchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_batch_5frecommend_2eproto::scc_info_BatchResponse.base);
  return *internal_default_instance();
}


void BatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:so_rtrs.BatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recomresponselist_.Clear();
  _internal_metadata_.Clear();
}

bool BatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:so_rtrs.BatchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .so_rtrs.RecomResponse recomResponseList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_recomresponselist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:so_rtrs.BatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:so_rtrs.BatchResponse)
  return false;
#undef DO_
}

void BatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:so_rtrs.BatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .so_rtrs.RecomResponse recomResponseList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recomresponselist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->recomresponselist(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:so_rtrs.BatchResponse)
}

size_t BatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:so_rtrs.BatchResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .so_rtrs.RecomResponse recomResponseList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->recomresponselist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->recomresponselist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BatchResponse*>(&from));
}

void BatchResponse::MergeFrom(const BatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:so_rtrs.BatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recomresponselist_.MergeFrom(from.recomresponselist_);
}

void BatchResponse::CopyFrom(const BatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:so_rtrs.BatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchResponse::IsInitialized() const {
  return true;
}

void BatchResponse::Swap(BatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchResponse::InternalSwap(BatchResponse* other) {
  using std::swap;
  CastToBase(&recomresponselist_)->InternalSwap(CastToBase(&other->recomresponselist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BatchResponse::GetTypeName() const {
  return "so_rtrs.BatchResponse";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace so_rtrs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::BatchRequest* Arena::CreateMaybeMessage< ::so_rtrs::BatchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::BatchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::so_rtrs::BatchResponse* Arena::CreateMaybeMessage< ::so_rtrs::BatchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::so_rtrs::BatchResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
