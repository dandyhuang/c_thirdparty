// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtrs_quality.proto

#ifndef PROTOBUF_INCLUDED_rtrs_5fquality_2eproto
#define PROTOBUF_INCLUDED_rtrs_5fquality_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "recommend.pb.h"
#include "rtrs_schedule.pb.h"
#include "rtrs_abtest.pb.h"
#include "rtrs_expinfo.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_rtrs_5fquality_2eproto 

namespace protobuf_rtrs_5fquality_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_rtrs_5fquality_2eproto
namespace so_rtrs {
class QualityReqBody;
class QualityReqBodyDefaultTypeInternal;
extern QualityReqBodyDefaultTypeInternal _QualityReqBody_default_instance_;
class QualityReqBody_GlobalInfo;
class QualityReqBody_GlobalInfoDefaultTypeInternal;
extern QualityReqBody_GlobalInfoDefaultTypeInternal _QualityReqBody_GlobalInfo_default_instance_;
class QualityReqBody_ReqPosInfo;
class QualityReqBody_ReqPosInfoDefaultTypeInternal;
extern QualityReqBody_ReqPosInfoDefaultTypeInternal _QualityReqBody_ReqPosInfo_default_instance_;
class QualityRspBody;
class QualityRspBodyDefaultTypeInternal;
extern QualityRspBodyDefaultTypeInternal _QualityRspBody_default_instance_;
class QualityRspBody_RspPosInfo;
class QualityRspBody_RspPosInfoDefaultTypeInternal;
extern QualityRspBody_RspPosInfoDefaultTypeInternal _QualityRspBody_RspPosInfo_default_instance_;
class RequestTimeItem;
class RequestTimeItemDefaultTypeInternal;
extern RequestTimeItemDefaultTypeInternal _RequestTimeItem_default_instance_;
}  // namespace so_rtrs
namespace google {
namespace protobuf {
template<> ::so_rtrs::QualityReqBody* Arena::CreateMaybeMessage<::so_rtrs::QualityReqBody>(Arena*);
template<> ::so_rtrs::QualityReqBody_GlobalInfo* Arena::CreateMaybeMessage<::so_rtrs::QualityReqBody_GlobalInfo>(Arena*);
template<> ::so_rtrs::QualityReqBody_ReqPosInfo* Arena::CreateMaybeMessage<::so_rtrs::QualityReqBody_ReqPosInfo>(Arena*);
template<> ::so_rtrs::QualityRspBody* Arena::CreateMaybeMessage<::so_rtrs::QualityRspBody>(Arena*);
template<> ::so_rtrs::QualityRspBody_RspPosInfo* Arena::CreateMaybeMessage<::so_rtrs::QualityRspBody_RspPosInfo>(Arena*);
template<> ::so_rtrs::RequestTimeItem* Arena::CreateMaybeMessage<::so_rtrs::RequestTimeItem>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace so_rtrs {

// ===================================================================

class QualityReqBody_ReqPosInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_rtrs.QualityReqBody.ReqPosInfo) */ {
 public:
  QualityReqBody_ReqPosInfo();
  virtual ~QualityReqBody_ReqPosInfo();

  QualityReqBody_ReqPosInfo(const QualityReqBody_ReqPosInfo& from);

  inline QualityReqBody_ReqPosInfo& operator=(const QualityReqBody_ReqPosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityReqBody_ReqPosInfo(QualityReqBody_ReqPosInfo&& from) noexcept
    : QualityReqBody_ReqPosInfo() {
    *this = ::std::move(from);
  }

  inline QualityReqBody_ReqPosInfo& operator=(QualityReqBody_ReqPosInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const QualityReqBody_ReqPosInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityReqBody_ReqPosInfo* internal_default_instance() {
    return reinterpret_cast<const QualityReqBody_ReqPosInfo*>(
               &_QualityReqBody_ReqPosInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(QualityReqBody_ReqPosInfo* other);
  friend void swap(QualityReqBody_ReqPosInfo& a, QualityReqBody_ReqPosInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityReqBody_ReqPosInfo* New() const final {
    return CreateMaybeMessage<QualityReqBody_ReqPosInfo>(NULL);
  }

  QualityReqBody_ReqPosInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityReqBody_ReqPosInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const QualityReqBody_ReqPosInfo& from);
  void MergeFrom(const QualityReqBody_ReqPosInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityReqBody_ReqPosInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .so_rtrs.AlgMultiTestInfo exp_info = 5;
  int exp_info_size() const;
  void clear_exp_info();
  static const int kExpInfoFieldNumber = 5;
  ::so_rtrs::AlgMultiTestInfo* mutable_exp_info(int index);
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::AlgMultiTestInfo >*
      mutable_exp_info();
  const ::so_rtrs::AlgMultiTestInfo& exp_info(int index) const;
  ::so_rtrs::AlgMultiTestInfo* add_exp_info();
  const ::google::protobuf::RepeatedPtrField< ::so_rtrs::AlgMultiTestInfo >&
      exp_info() const;

  // .so_rtrs.schedule.Request mix_req = 2;
  bool has_mix_req() const;
  void clear_mix_req();
  static const int kMixReqFieldNumber = 2;
  private:
  const ::so_rtrs::schedule::Request& _internal_mix_req() const;
  public:
  const ::so_rtrs::schedule::Request& mix_req() const;
  ::so_rtrs::schedule::Request* release_mix_req();
  ::so_rtrs::schedule::Request* mutable_mix_req();
  void set_allocated_mix_req(::so_rtrs::schedule::Request* mix_req);

  // .so_rtrs.RecommendInfo pos_detail_info = 3;
  bool has_pos_detail_info() const;
  void clear_pos_detail_info();
  static const int kPosDetailInfoFieldNumber = 3;
  private:
  const ::so_rtrs::RecommendInfo& _internal_pos_detail_info() const;
  public:
  const ::so_rtrs::RecommendInfo& pos_detail_info() const;
  ::so_rtrs::RecommendInfo* release_pos_detail_info();
  ::so_rtrs::RecommendInfo* mutable_pos_detail_info();
  void set_allocated_pos_detail_info(::so_rtrs::RecommendInfo* pos_detail_info);

  // .so_rtrs.AbtestReq abtest_req = 4;
  bool has_abtest_req() const;
  void clear_abtest_req();
  static const int kAbtestReqFieldNumber = 4;
  private:
  const ::so_rtrs::AbtestReq& _internal_abtest_req() const;
  public:
  const ::so_rtrs::AbtestReq& abtest_req() const;
  ::so_rtrs::AbtestReq* release_abtest_req();
  ::so_rtrs::AbtestReq* mutable_abtest_req();
  void set_allocated_abtest_req(::so_rtrs::AbtestReq* abtest_req);

  // uint32 pos_id = 1;
  void clear_pos_id();
  static const int kPosIdFieldNumber = 1;
  ::google::protobuf::uint32 pos_id() const;
  void set_pos_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:so_rtrs.QualityReqBody.ReqPosInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::AlgMultiTestInfo > exp_info_;
  ::so_rtrs::schedule::Request* mix_req_;
  ::so_rtrs::RecommendInfo* pos_detail_info_;
  ::so_rtrs::AbtestReq* abtest_req_;
  ::google::protobuf::uint32 pos_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtrs_5fquality_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QualityReqBody_GlobalInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_rtrs.QualityReqBody.GlobalInfo) */ {
 public:
  QualityReqBody_GlobalInfo();
  virtual ~QualityReqBody_GlobalInfo();

  QualityReqBody_GlobalInfo(const QualityReqBody_GlobalInfo& from);

  inline QualityReqBody_GlobalInfo& operator=(const QualityReqBody_GlobalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityReqBody_GlobalInfo(QualityReqBody_GlobalInfo&& from) noexcept
    : QualityReqBody_GlobalInfo() {
    *this = ::std::move(from);
  }

  inline QualityReqBody_GlobalInfo& operator=(QualityReqBody_GlobalInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const QualityReqBody_GlobalInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityReqBody_GlobalInfo* internal_default_instance() {
    return reinterpret_cast<const QualityReqBody_GlobalInfo*>(
               &_QualityReqBody_GlobalInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(QualityReqBody_GlobalInfo* other);
  friend void swap(QualityReqBody_GlobalInfo& a, QualityReqBody_GlobalInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityReqBody_GlobalInfo* New() const final {
    return CreateMaybeMessage<QualityReqBody_GlobalInfo>(NULL);
  }

  QualityReqBody_GlobalInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityReqBody_GlobalInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const QualityReqBody_GlobalInfo& from);
  void MergeFrom(const QualityReqBody_GlobalInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityReqBody_GlobalInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes log_id = 1;
  void clear_log_id();
  static const int kLogIdFieldNumber = 1;
  const ::std::string& log_id() const;
  void set_log_id(const ::std::string& value);
  #if LANG_CXX11
  void set_log_id(::std::string&& value);
  #endif
  void set_log_id(const char* value);
  void set_log_id(const void* value, size_t size);
  ::std::string* mutable_log_id();
  ::std::string* release_log_id();
  void set_allocated_log_id(::std::string* log_id);

  // .so_rtrs.RuleAppDirectInfo rule_app_direct_info = 2;
  bool has_rule_app_direct_info() const;
  void clear_rule_app_direct_info();
  static const int kRuleAppDirectInfoFieldNumber = 2;
  private:
  const ::so_rtrs::RuleAppDirectInfo& _internal_rule_app_direct_info() const;
  public:
  const ::so_rtrs::RuleAppDirectInfo& rule_app_direct_info() const;
  ::so_rtrs::RuleAppDirectInfo* release_rule_app_direct_info();
  ::so_rtrs::RuleAppDirectInfo* mutable_rule_app_direct_info();
  void set_allocated_rule_app_direct_info(::so_rtrs::RuleAppDirectInfo* rule_app_direct_info);

  // .so_rtrs.DeviceInfo recom_device = 3;
  bool has_recom_device() const;
  void clear_recom_device();
  static const int kRecomDeviceFieldNumber = 3;
  private:
  const ::so_rtrs::DeviceInfo& _internal_recom_device() const;
  public:
  const ::so_rtrs::DeviceInfo& recom_device() const;
  ::so_rtrs::DeviceInfo* release_recom_device();
  ::so_rtrs::DeviceInfo* mutable_recom_device();
  void set_allocated_recom_device(::so_rtrs::DeviceInfo* recom_device);

  // .so_rtrs.LocationInfo recom_location = 4;
  bool has_recom_location() const;
  void clear_recom_location();
  static const int kRecomLocationFieldNumber = 4;
  private:
  const ::so_rtrs::LocationInfo& _internal_recom_location() const;
  public:
  const ::so_rtrs::LocationInfo& recom_location() const;
  ::so_rtrs::LocationInfo* release_recom_location();
  ::so_rtrs::LocationInfo* mutable_recom_location();
  void set_allocated_recom_location(::so_rtrs::LocationInfo* recom_location);

  // .so_rtrs.NetworkInfo recom_network = 5;
  bool has_recom_network() const;
  void clear_recom_network();
  static const int kRecomNetworkFieldNumber = 5;
  private:
  const ::so_rtrs::NetworkInfo& _internal_recom_network() const;
  public:
  const ::so_rtrs::NetworkInfo& recom_network() const;
  ::so_rtrs::NetworkInfo* release_recom_network();
  ::so_rtrs::NetworkInfo* mutable_recom_network();
  void set_allocated_recom_network(::so_rtrs::NetworkInfo* recom_network);

  // @@protoc_insertion_point(class_scope:so_rtrs.QualityReqBody.GlobalInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr log_id_;
  ::so_rtrs::RuleAppDirectInfo* rule_app_direct_info_;
  ::so_rtrs::DeviceInfo* recom_device_;
  ::so_rtrs::LocationInfo* recom_location_;
  ::so_rtrs::NetworkInfo* recom_network_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtrs_5fquality_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QualityReqBody : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_rtrs.QualityReqBody) */ {
 public:
  QualityReqBody();
  virtual ~QualityReqBody();

  QualityReqBody(const QualityReqBody& from);

  inline QualityReqBody& operator=(const QualityReqBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityReqBody(QualityReqBody&& from) noexcept
    : QualityReqBody() {
    *this = ::std::move(from);
  }

  inline QualityReqBody& operator=(QualityReqBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const QualityReqBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityReqBody* internal_default_instance() {
    return reinterpret_cast<const QualityReqBody*>(
               &_QualityReqBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(QualityReqBody* other);
  friend void swap(QualityReqBody& a, QualityReqBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityReqBody* New() const final {
    return CreateMaybeMessage<QualityReqBody>(NULL);
  }

  QualityReqBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityReqBody>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const QualityReqBody& from);
  void MergeFrom(const QualityReqBody& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityReqBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef QualityReqBody_ReqPosInfo ReqPosInfo;
  typedef QualityReqBody_GlobalInfo GlobalInfo;

  // accessors -------------------------------------------------------

  // repeated .so_rtrs.QualityReqBody.ReqPosInfo req_pos_info = 2;
  int req_pos_info_size() const;
  void clear_req_pos_info();
  static const int kReqPosInfoFieldNumber = 2;
  ::so_rtrs::QualityReqBody_ReqPosInfo* mutable_req_pos_info(int index);
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityReqBody_ReqPosInfo >*
      mutable_req_pos_info();
  const ::so_rtrs::QualityReqBody_ReqPosInfo& req_pos_info(int index) const;
  ::so_rtrs::QualityReqBody_ReqPosInfo* add_req_pos_info();
  const ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityReqBody_ReqPosInfo >&
      req_pos_info() const;

  // repeated .so_rtrs.RequestTimeItem request_time_items = 3;
  int request_time_items_size() const;
  void clear_request_time_items();
  static const int kRequestTimeItemsFieldNumber = 3;
  ::so_rtrs::RequestTimeItem* mutable_request_time_items(int index);
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::RequestTimeItem >*
      mutable_request_time_items();
  const ::so_rtrs::RequestTimeItem& request_time_items(int index) const;
  ::so_rtrs::RequestTimeItem* add_request_time_items();
  const ::google::protobuf::RepeatedPtrField< ::so_rtrs::RequestTimeItem >&
      request_time_items() const;

  // .so_rtrs.QualityReqBody.GlobalInfo global_info = 1;
  bool has_global_info() const;
  void clear_global_info();
  static const int kGlobalInfoFieldNumber = 1;
  private:
  const ::so_rtrs::QualityReqBody_GlobalInfo& _internal_global_info() const;
  public:
  const ::so_rtrs::QualityReqBody_GlobalInfo& global_info() const;
  ::so_rtrs::QualityReqBody_GlobalInfo* release_global_info();
  ::so_rtrs::QualityReqBody_GlobalInfo* mutable_global_info();
  void set_allocated_global_info(::so_rtrs::QualityReqBody_GlobalInfo* global_info);

  // @@protoc_insertion_point(class_scope:so_rtrs.QualityReqBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityReqBody_ReqPosInfo > req_pos_info_;
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::RequestTimeItem > request_time_items_;
  ::so_rtrs::QualityReqBody_GlobalInfo* global_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtrs_5fquality_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestTimeItem : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_rtrs.RequestTimeItem) */ {
 public:
  RequestTimeItem();
  virtual ~RequestTimeItem();

  RequestTimeItem(const RequestTimeItem& from);

  inline RequestTimeItem& operator=(const RequestTimeItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestTimeItem(RequestTimeItem&& from) noexcept
    : RequestTimeItem() {
    *this = ::std::move(from);
  }

  inline RequestTimeItem& operator=(RequestTimeItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const RequestTimeItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestTimeItem* internal_default_instance() {
    return reinterpret_cast<const RequestTimeItem*>(
               &_RequestTimeItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RequestTimeItem* other);
  friend void swap(RequestTimeItem& a, RequestTimeItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestTimeItem* New() const final {
    return CreateMaybeMessage<RequestTimeItem>(NULL);
  }

  RequestTimeItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestTimeItem>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const RequestTimeItem& from);
  void MergeFrom(const RequestTimeItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestTimeItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string step_name = 1;
  void clear_step_name();
  static const int kStepNameFieldNumber = 1;
  const ::std::string& step_name() const;
  void set_step_name(const ::std::string& value);
  #if LANG_CXX11
  void set_step_name(::std::string&& value);
  #endif
  void set_step_name(const char* value);
  void set_step_name(const char* value, size_t size);
  ::std::string* mutable_step_name();
  ::std::string* release_step_name();
  void set_allocated_step_name(::std::string* step_name);

  // uint64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:so_rtrs.RequestTimeItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr step_name_;
  ::google::protobuf::uint64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtrs_5fquality_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QualityRspBody_RspPosInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_rtrs.QualityRspBody.RspPosInfo) */ {
 public:
  QualityRspBody_RspPosInfo();
  virtual ~QualityRspBody_RspPosInfo();

  QualityRspBody_RspPosInfo(const QualityRspBody_RspPosInfo& from);

  inline QualityRspBody_RspPosInfo& operator=(const QualityRspBody_RspPosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityRspBody_RspPosInfo(QualityRspBody_RspPosInfo&& from) noexcept
    : QualityRspBody_RspPosInfo() {
    *this = ::std::move(from);
  }

  inline QualityRspBody_RspPosInfo& operator=(QualityRspBody_RspPosInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const QualityRspBody_RspPosInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityRspBody_RspPosInfo* internal_default_instance() {
    return reinterpret_cast<const QualityRspBody_RspPosInfo*>(
               &_QualityRspBody_RspPosInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(QualityRspBody_RspPosInfo* other);
  friend void swap(QualityRspBody_RspPosInfo& a, QualityRspBody_RspPosInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityRspBody_RspPosInfo* New() const final {
    return CreateMaybeMessage<QualityRspBody_RspPosInfo>(NULL);
  }

  QualityRspBody_RspPosInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityRspBody_RspPosInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const QualityRspBody_RspPosInfo& from);
  void MergeFrom(const QualityRspBody_RspPosInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityRspBody_RspPosInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .so_rtrs.schedule.Response mix_rsp = 1;
  bool has_mix_rsp() const;
  void clear_mix_rsp();
  static const int kMixRspFieldNumber = 1;
  private:
  const ::so_rtrs::schedule::Response& _internal_mix_rsp() const;
  public:
  const ::so_rtrs::schedule::Response& mix_rsp() const;
  ::so_rtrs::schedule::Response* release_mix_rsp();
  ::so_rtrs::schedule::Response* mutable_mix_rsp();
  void set_allocated_mix_rsp(::so_rtrs::schedule::Response* mix_rsp);

  // .so_rtrs.RecommendInfo pos_detail_info = 2;
  bool has_pos_detail_info() const;
  void clear_pos_detail_info();
  static const int kPosDetailInfoFieldNumber = 2;
  private:
  const ::so_rtrs::RecommendInfo& _internal_pos_detail_info() const;
  public:
  const ::so_rtrs::RecommendInfo& pos_detail_info() const;
  ::so_rtrs::RecommendInfo* release_pos_detail_info();
  ::so_rtrs::RecommendInfo* mutable_pos_detail_info();
  void set_allocated_pos_detail_info(::so_rtrs::RecommendInfo* pos_detail_info);

  // .so_rtrs.AbtestRsp abtest_rsp = 3;
  bool has_abtest_rsp() const;
  void clear_abtest_rsp();
  static const int kAbtestRspFieldNumber = 3;
  private:
  const ::so_rtrs::AbtestRsp& _internal_abtest_rsp() const;
  public:
  const ::so_rtrs::AbtestRsp& abtest_rsp() const;
  ::so_rtrs::AbtestRsp* release_abtest_rsp();
  ::so_rtrs::AbtestRsp* mutable_abtest_rsp();
  void set_allocated_abtest_rsp(::so_rtrs::AbtestRsp* abtest_rsp);

  // int32 rtrs_code = 1000;
  void clear_rtrs_code();
  static const int kRtrsCodeFieldNumber = 1000;
  ::google::protobuf::int32 rtrs_code() const;
  void set_rtrs_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:so_rtrs.QualityRspBody.RspPosInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::so_rtrs::schedule::Response* mix_rsp_;
  ::so_rtrs::RecommendInfo* pos_detail_info_;
  ::so_rtrs::AbtestRsp* abtest_rsp_;
  ::google::protobuf::int32 rtrs_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtrs_5fquality_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QualityRspBody : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:so_rtrs.QualityRspBody) */ {
 public:
  QualityRspBody();
  virtual ~QualityRspBody();

  QualityRspBody(const QualityRspBody& from);

  inline QualityRspBody& operator=(const QualityRspBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityRspBody(QualityRspBody&& from) noexcept
    : QualityRspBody() {
    *this = ::std::move(from);
  }

  inline QualityRspBody& operator=(QualityRspBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const QualityRspBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityRspBody* internal_default_instance() {
    return reinterpret_cast<const QualityRspBody*>(
               &_QualityRspBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(QualityRspBody* other);
  friend void swap(QualityRspBody& a, QualityRspBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityRspBody* New() const final {
    return CreateMaybeMessage<QualityRspBody>(NULL);
  }

  QualityRspBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityRspBody>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const QualityRspBody& from);
  void MergeFrom(const QualityRspBody& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityRspBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef QualityRspBody_RspPosInfo RspPosInfo;

  // accessors -------------------------------------------------------

  // repeated .so_rtrs.QualityRspBody.RspPosInfo rsp_pos_info = 1;
  int rsp_pos_info_size() const;
  void clear_rsp_pos_info();
  static const int kRspPosInfoFieldNumber = 1;
  ::so_rtrs::QualityRspBody_RspPosInfo* mutable_rsp_pos_info(int index);
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityRspBody_RspPosInfo >*
      mutable_rsp_pos_info();
  const ::so_rtrs::QualityRspBody_RspPosInfo& rsp_pos_info(int index) const;
  ::so_rtrs::QualityRspBody_RspPosInfo* add_rsp_pos_info();
  const ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityRspBody_RspPosInfo >&
      rsp_pos_info() const;

  // @@protoc_insertion_point(class_scope:so_rtrs.QualityRspBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityRspBody_RspPosInfo > rsp_pos_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rtrs_5fquality_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QualityReqBody_ReqPosInfo

// uint32 pos_id = 1;
inline void QualityReqBody_ReqPosInfo::clear_pos_id() {
  pos_id_ = 0u;
}
inline ::google::protobuf::uint32 QualityReqBody_ReqPosInfo::pos_id() const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.ReqPosInfo.pos_id)
  return pos_id_;
}
inline void QualityReqBody_ReqPosInfo::set_pos_id(::google::protobuf::uint32 value) {
  
  pos_id_ = value;
  // @@protoc_insertion_point(field_set:so_rtrs.QualityReqBody.ReqPosInfo.pos_id)
}

// .so_rtrs.schedule.Request mix_req = 2;
inline bool QualityReqBody_ReqPosInfo::has_mix_req() const {
  return this != internal_default_instance() && mix_req_ != NULL;
}
inline const ::so_rtrs::schedule::Request& QualityReqBody_ReqPosInfo::_internal_mix_req() const {
  return *mix_req_;
}
inline const ::so_rtrs::schedule::Request& QualityReqBody_ReqPosInfo::mix_req() const {
  const ::so_rtrs::schedule::Request* p = mix_req_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.ReqPosInfo.mix_req)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::schedule::Request*>(
      &::so_rtrs::schedule::_Request_default_instance_);
}
inline ::so_rtrs::schedule::Request* QualityReqBody_ReqPosInfo::release_mix_req() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.ReqPosInfo.mix_req)
  
  ::so_rtrs::schedule::Request* temp = mix_req_;
  mix_req_ = NULL;
  return temp;
}
inline ::so_rtrs::schedule::Request* QualityReqBody_ReqPosInfo::mutable_mix_req() {
  
  if (mix_req_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::schedule::Request>(GetArenaNoVirtual());
    mix_req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.ReqPosInfo.mix_req)
  return mix_req_;
}
inline void QualityReqBody_ReqPosInfo::set_allocated_mix_req(::so_rtrs::schedule::Request* mix_req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mix_req_);
  }
  if (mix_req) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mix_req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mix_req, submessage_arena);
    }
    
  } else {
    
  }
  mix_req_ = mix_req;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.ReqPosInfo.mix_req)
}

// .so_rtrs.RecommendInfo pos_detail_info = 3;
inline bool QualityReqBody_ReqPosInfo::has_pos_detail_info() const {
  return this != internal_default_instance() && pos_detail_info_ != NULL;
}
inline const ::so_rtrs::RecommendInfo& QualityReqBody_ReqPosInfo::_internal_pos_detail_info() const {
  return *pos_detail_info_;
}
inline const ::so_rtrs::RecommendInfo& QualityReqBody_ReqPosInfo::pos_detail_info() const {
  const ::so_rtrs::RecommendInfo* p = pos_detail_info_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.ReqPosInfo.pos_detail_info)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::RecommendInfo*>(
      &::so_rtrs::_RecommendInfo_default_instance_);
}
inline ::so_rtrs::RecommendInfo* QualityReqBody_ReqPosInfo::release_pos_detail_info() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.ReqPosInfo.pos_detail_info)
  
  ::so_rtrs::RecommendInfo* temp = pos_detail_info_;
  pos_detail_info_ = NULL;
  return temp;
}
inline ::so_rtrs::RecommendInfo* QualityReqBody_ReqPosInfo::mutable_pos_detail_info() {
  
  if (pos_detail_info_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::RecommendInfo>(GetArenaNoVirtual());
    pos_detail_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.ReqPosInfo.pos_detail_info)
  return pos_detail_info_;
}
inline void QualityReqBody_ReqPosInfo::set_allocated_pos_detail_info(::so_rtrs::RecommendInfo* pos_detail_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_detail_info_);
  }
  if (pos_detail_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos_detail_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos_detail_info, submessage_arena);
    }
    
  } else {
    
  }
  pos_detail_info_ = pos_detail_info;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.ReqPosInfo.pos_detail_info)
}

// .so_rtrs.AbtestReq abtest_req = 4;
inline bool QualityReqBody_ReqPosInfo::has_abtest_req() const {
  return this != internal_default_instance() && abtest_req_ != NULL;
}
inline const ::so_rtrs::AbtestReq& QualityReqBody_ReqPosInfo::_internal_abtest_req() const {
  return *abtest_req_;
}
inline const ::so_rtrs::AbtestReq& QualityReqBody_ReqPosInfo::abtest_req() const {
  const ::so_rtrs::AbtestReq* p = abtest_req_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.ReqPosInfo.abtest_req)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::AbtestReq*>(
      &::so_rtrs::_AbtestReq_default_instance_);
}
inline ::so_rtrs::AbtestReq* QualityReqBody_ReqPosInfo::release_abtest_req() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.ReqPosInfo.abtest_req)
  
  ::so_rtrs::AbtestReq* temp = abtest_req_;
  abtest_req_ = NULL;
  return temp;
}
inline ::so_rtrs::AbtestReq* QualityReqBody_ReqPosInfo::mutable_abtest_req() {
  
  if (abtest_req_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::AbtestReq>(GetArenaNoVirtual());
    abtest_req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.ReqPosInfo.abtest_req)
  return abtest_req_;
}
inline void QualityReqBody_ReqPosInfo::set_allocated_abtest_req(::so_rtrs::AbtestReq* abtest_req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(abtest_req_);
  }
  if (abtest_req) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      abtest_req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, abtest_req, submessage_arena);
    }
    
  } else {
    
  }
  abtest_req_ = abtest_req;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.ReqPosInfo.abtest_req)
}

// repeated .so_rtrs.AlgMultiTestInfo exp_info = 5;
inline int QualityReqBody_ReqPosInfo::exp_info_size() const {
  return exp_info_.size();
}
inline ::so_rtrs::AlgMultiTestInfo* QualityReqBody_ReqPosInfo::mutable_exp_info(int index) {
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.ReqPosInfo.exp_info)
  return exp_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_rtrs::AlgMultiTestInfo >*
QualityReqBody_ReqPosInfo::mutable_exp_info() {
  // @@protoc_insertion_point(field_mutable_list:so_rtrs.QualityReqBody.ReqPosInfo.exp_info)
  return &exp_info_;
}
inline const ::so_rtrs::AlgMultiTestInfo& QualityReqBody_ReqPosInfo::exp_info(int index) const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.ReqPosInfo.exp_info)
  return exp_info_.Get(index);
}
inline ::so_rtrs::AlgMultiTestInfo* QualityReqBody_ReqPosInfo::add_exp_info() {
  // @@protoc_insertion_point(field_add:so_rtrs.QualityReqBody.ReqPosInfo.exp_info)
  return exp_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_rtrs::AlgMultiTestInfo >&
QualityReqBody_ReqPosInfo::exp_info() const {
  // @@protoc_insertion_point(field_list:so_rtrs.QualityReqBody.ReqPosInfo.exp_info)
  return exp_info_;
}

// -------------------------------------------------------------------

// QualityReqBody_GlobalInfo

// bytes log_id = 1;
inline void QualityReqBody_GlobalInfo::clear_log_id() {
  log_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QualityReqBody_GlobalInfo::log_id() const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.GlobalInfo.log_id)
  return log_id_.GetNoArena();
}
inline void QualityReqBody_GlobalInfo::set_log_id(const ::std::string& value) {
  
  log_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_rtrs.QualityReqBody.GlobalInfo.log_id)
}
#if LANG_CXX11
inline void QualityReqBody_GlobalInfo::set_log_id(::std::string&& value) {
  
  log_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_rtrs.QualityReqBody.GlobalInfo.log_id)
}
#endif
inline void QualityReqBody_GlobalInfo::set_log_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_rtrs.QualityReqBody.GlobalInfo.log_id)
}
inline void QualityReqBody_GlobalInfo::set_log_id(const void* value, size_t size) {
  
  log_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_rtrs.QualityReqBody.GlobalInfo.log_id)
}
inline ::std::string* QualityReqBody_GlobalInfo::mutable_log_id() {
  
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.GlobalInfo.log_id)
  return log_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityReqBody_GlobalInfo::release_log_id() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.GlobalInfo.log_id)
  
  return log_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityReqBody_GlobalInfo::set_allocated_log_id(::std::string* log_id) {
  if (log_id != NULL) {
    
  } else {
    
  }
  log_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_id);
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.GlobalInfo.log_id)
}

// .so_rtrs.RuleAppDirectInfo rule_app_direct_info = 2;
inline bool QualityReqBody_GlobalInfo::has_rule_app_direct_info() const {
  return this != internal_default_instance() && rule_app_direct_info_ != NULL;
}
inline const ::so_rtrs::RuleAppDirectInfo& QualityReqBody_GlobalInfo::_internal_rule_app_direct_info() const {
  return *rule_app_direct_info_;
}
inline const ::so_rtrs::RuleAppDirectInfo& QualityReqBody_GlobalInfo::rule_app_direct_info() const {
  const ::so_rtrs::RuleAppDirectInfo* p = rule_app_direct_info_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.GlobalInfo.rule_app_direct_info)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::RuleAppDirectInfo*>(
      &::so_rtrs::_RuleAppDirectInfo_default_instance_);
}
inline ::so_rtrs::RuleAppDirectInfo* QualityReqBody_GlobalInfo::release_rule_app_direct_info() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.GlobalInfo.rule_app_direct_info)
  
  ::so_rtrs::RuleAppDirectInfo* temp = rule_app_direct_info_;
  rule_app_direct_info_ = NULL;
  return temp;
}
inline ::so_rtrs::RuleAppDirectInfo* QualityReqBody_GlobalInfo::mutable_rule_app_direct_info() {
  
  if (rule_app_direct_info_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::RuleAppDirectInfo>(GetArenaNoVirtual());
    rule_app_direct_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.GlobalInfo.rule_app_direct_info)
  return rule_app_direct_info_;
}
inline void QualityReqBody_GlobalInfo::set_allocated_rule_app_direct_info(::so_rtrs::RuleAppDirectInfo* rule_app_direct_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rule_app_direct_info_);
  }
  if (rule_app_direct_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rule_app_direct_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rule_app_direct_info, submessage_arena);
    }
    
  } else {
    
  }
  rule_app_direct_info_ = rule_app_direct_info;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.GlobalInfo.rule_app_direct_info)
}

// .so_rtrs.DeviceInfo recom_device = 3;
inline bool QualityReqBody_GlobalInfo::has_recom_device() const {
  return this != internal_default_instance() && recom_device_ != NULL;
}
inline const ::so_rtrs::DeviceInfo& QualityReqBody_GlobalInfo::_internal_recom_device() const {
  return *recom_device_;
}
inline const ::so_rtrs::DeviceInfo& QualityReqBody_GlobalInfo::recom_device() const {
  const ::so_rtrs::DeviceInfo* p = recom_device_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.GlobalInfo.recom_device)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::DeviceInfo*>(
      &::so_rtrs::_DeviceInfo_default_instance_);
}
inline ::so_rtrs::DeviceInfo* QualityReqBody_GlobalInfo::release_recom_device() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.GlobalInfo.recom_device)
  
  ::so_rtrs::DeviceInfo* temp = recom_device_;
  recom_device_ = NULL;
  return temp;
}
inline ::so_rtrs::DeviceInfo* QualityReqBody_GlobalInfo::mutable_recom_device() {
  
  if (recom_device_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::DeviceInfo>(GetArenaNoVirtual());
    recom_device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.GlobalInfo.recom_device)
  return recom_device_;
}
inline void QualityReqBody_GlobalInfo::set_allocated_recom_device(::so_rtrs::DeviceInfo* recom_device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recom_device_);
  }
  if (recom_device) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recom_device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recom_device, submessage_arena);
    }
    
  } else {
    
  }
  recom_device_ = recom_device;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.GlobalInfo.recom_device)
}

// .so_rtrs.LocationInfo recom_location = 4;
inline bool QualityReqBody_GlobalInfo::has_recom_location() const {
  return this != internal_default_instance() && recom_location_ != NULL;
}
inline const ::so_rtrs::LocationInfo& QualityReqBody_GlobalInfo::_internal_recom_location() const {
  return *recom_location_;
}
inline const ::so_rtrs::LocationInfo& QualityReqBody_GlobalInfo::recom_location() const {
  const ::so_rtrs::LocationInfo* p = recom_location_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.GlobalInfo.recom_location)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::LocationInfo*>(
      &::so_rtrs::_LocationInfo_default_instance_);
}
inline ::so_rtrs::LocationInfo* QualityReqBody_GlobalInfo::release_recom_location() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.GlobalInfo.recom_location)
  
  ::so_rtrs::LocationInfo* temp = recom_location_;
  recom_location_ = NULL;
  return temp;
}
inline ::so_rtrs::LocationInfo* QualityReqBody_GlobalInfo::mutable_recom_location() {
  
  if (recom_location_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::LocationInfo>(GetArenaNoVirtual());
    recom_location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.GlobalInfo.recom_location)
  return recom_location_;
}
inline void QualityReqBody_GlobalInfo::set_allocated_recom_location(::so_rtrs::LocationInfo* recom_location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recom_location_);
  }
  if (recom_location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recom_location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recom_location, submessage_arena);
    }
    
  } else {
    
  }
  recom_location_ = recom_location;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.GlobalInfo.recom_location)
}

// .so_rtrs.NetworkInfo recom_network = 5;
inline bool QualityReqBody_GlobalInfo::has_recom_network() const {
  return this != internal_default_instance() && recom_network_ != NULL;
}
inline const ::so_rtrs::NetworkInfo& QualityReqBody_GlobalInfo::_internal_recom_network() const {
  return *recom_network_;
}
inline const ::so_rtrs::NetworkInfo& QualityReqBody_GlobalInfo::recom_network() const {
  const ::so_rtrs::NetworkInfo* p = recom_network_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.GlobalInfo.recom_network)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::NetworkInfo*>(
      &::so_rtrs::_NetworkInfo_default_instance_);
}
inline ::so_rtrs::NetworkInfo* QualityReqBody_GlobalInfo::release_recom_network() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.GlobalInfo.recom_network)
  
  ::so_rtrs::NetworkInfo* temp = recom_network_;
  recom_network_ = NULL;
  return temp;
}
inline ::so_rtrs::NetworkInfo* QualityReqBody_GlobalInfo::mutable_recom_network() {
  
  if (recom_network_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::NetworkInfo>(GetArenaNoVirtual());
    recom_network_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.GlobalInfo.recom_network)
  return recom_network_;
}
inline void QualityReqBody_GlobalInfo::set_allocated_recom_network(::so_rtrs::NetworkInfo* recom_network) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recom_network_);
  }
  if (recom_network) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recom_network = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recom_network, submessage_arena);
    }
    
  } else {
    
  }
  recom_network_ = recom_network;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.GlobalInfo.recom_network)
}

// -------------------------------------------------------------------

// QualityReqBody

// .so_rtrs.QualityReqBody.GlobalInfo global_info = 1;
inline bool QualityReqBody::has_global_info() const {
  return this != internal_default_instance() && global_info_ != NULL;
}
inline void QualityReqBody::clear_global_info() {
  if (GetArenaNoVirtual() == NULL && global_info_ != NULL) {
    delete global_info_;
  }
  global_info_ = NULL;
}
inline const ::so_rtrs::QualityReqBody_GlobalInfo& QualityReqBody::_internal_global_info() const {
  return *global_info_;
}
inline const ::so_rtrs::QualityReqBody_GlobalInfo& QualityReqBody::global_info() const {
  const ::so_rtrs::QualityReqBody_GlobalInfo* p = global_info_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.global_info)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::QualityReqBody_GlobalInfo*>(
      &::so_rtrs::_QualityReqBody_GlobalInfo_default_instance_);
}
inline ::so_rtrs::QualityReqBody_GlobalInfo* QualityReqBody::release_global_info() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityReqBody.global_info)
  
  ::so_rtrs::QualityReqBody_GlobalInfo* temp = global_info_;
  global_info_ = NULL;
  return temp;
}
inline ::so_rtrs::QualityReqBody_GlobalInfo* QualityReqBody::mutable_global_info() {
  
  if (global_info_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::QualityReqBody_GlobalInfo>(GetArenaNoVirtual());
    global_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.global_info)
  return global_info_;
}
inline void QualityReqBody::set_allocated_global_info(::so_rtrs::QualityReqBody_GlobalInfo* global_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete global_info_;
  }
  if (global_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      global_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, global_info, submessage_arena);
    }
    
  } else {
    
  }
  global_info_ = global_info;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityReqBody.global_info)
}

// repeated .so_rtrs.QualityReqBody.ReqPosInfo req_pos_info = 2;
inline int QualityReqBody::req_pos_info_size() const {
  return req_pos_info_.size();
}
inline void QualityReqBody::clear_req_pos_info() {
  req_pos_info_.Clear();
}
inline ::so_rtrs::QualityReqBody_ReqPosInfo* QualityReqBody::mutable_req_pos_info(int index) {
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.req_pos_info)
  return req_pos_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityReqBody_ReqPosInfo >*
QualityReqBody::mutable_req_pos_info() {
  // @@protoc_insertion_point(field_mutable_list:so_rtrs.QualityReqBody.req_pos_info)
  return &req_pos_info_;
}
inline const ::so_rtrs::QualityReqBody_ReqPosInfo& QualityReqBody::req_pos_info(int index) const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.req_pos_info)
  return req_pos_info_.Get(index);
}
inline ::so_rtrs::QualityReqBody_ReqPosInfo* QualityReqBody::add_req_pos_info() {
  // @@protoc_insertion_point(field_add:so_rtrs.QualityReqBody.req_pos_info)
  return req_pos_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityReqBody_ReqPosInfo >&
QualityReqBody::req_pos_info() const {
  // @@protoc_insertion_point(field_list:so_rtrs.QualityReqBody.req_pos_info)
  return req_pos_info_;
}

// repeated .so_rtrs.RequestTimeItem request_time_items = 3;
inline int QualityReqBody::request_time_items_size() const {
  return request_time_items_.size();
}
inline void QualityReqBody::clear_request_time_items() {
  request_time_items_.Clear();
}
inline ::so_rtrs::RequestTimeItem* QualityReqBody::mutable_request_time_items(int index) {
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityReqBody.request_time_items)
  return request_time_items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_rtrs::RequestTimeItem >*
QualityReqBody::mutable_request_time_items() {
  // @@protoc_insertion_point(field_mutable_list:so_rtrs.QualityReqBody.request_time_items)
  return &request_time_items_;
}
inline const ::so_rtrs::RequestTimeItem& QualityReqBody::request_time_items(int index) const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityReqBody.request_time_items)
  return request_time_items_.Get(index);
}
inline ::so_rtrs::RequestTimeItem* QualityReqBody::add_request_time_items() {
  // @@protoc_insertion_point(field_add:so_rtrs.QualityReqBody.request_time_items)
  return request_time_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_rtrs::RequestTimeItem >&
QualityReqBody::request_time_items() const {
  // @@protoc_insertion_point(field_list:so_rtrs.QualityReqBody.request_time_items)
  return request_time_items_;
}

// -------------------------------------------------------------------

// RequestTimeItem

// string step_name = 1;
inline void RequestTimeItem::clear_step_name() {
  step_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestTimeItem::step_name() const {
  // @@protoc_insertion_point(field_get:so_rtrs.RequestTimeItem.step_name)
  return step_name_.GetNoArena();
}
inline void RequestTimeItem::set_step_name(const ::std::string& value) {
  
  step_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:so_rtrs.RequestTimeItem.step_name)
}
#if LANG_CXX11
inline void RequestTimeItem::set_step_name(::std::string&& value) {
  
  step_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:so_rtrs.RequestTimeItem.step_name)
}
#endif
inline void RequestTimeItem::set_step_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  step_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:so_rtrs.RequestTimeItem.step_name)
}
inline void RequestTimeItem::set_step_name(const char* value, size_t size) {
  
  step_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:so_rtrs.RequestTimeItem.step_name)
}
inline ::std::string* RequestTimeItem::mutable_step_name() {
  
  // @@protoc_insertion_point(field_mutable:so_rtrs.RequestTimeItem.step_name)
  return step_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestTimeItem::release_step_name() {
  // @@protoc_insertion_point(field_release:so_rtrs.RequestTimeItem.step_name)
  
  return step_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestTimeItem::set_allocated_step_name(::std::string* step_name) {
  if (step_name != NULL) {
    
  } else {
    
  }
  step_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), step_name);
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.RequestTimeItem.step_name)
}

// uint64 timestamp = 2;
inline void RequestTimeItem::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RequestTimeItem::timestamp() const {
  // @@protoc_insertion_point(field_get:so_rtrs.RequestTimeItem.timestamp)
  return timestamp_;
}
inline void RequestTimeItem::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:so_rtrs.RequestTimeItem.timestamp)
}

// -------------------------------------------------------------------

// QualityRspBody_RspPosInfo

// .so_rtrs.schedule.Response mix_rsp = 1;
inline bool QualityRspBody_RspPosInfo::has_mix_rsp() const {
  return this != internal_default_instance() && mix_rsp_ != NULL;
}
inline const ::so_rtrs::schedule::Response& QualityRspBody_RspPosInfo::_internal_mix_rsp() const {
  return *mix_rsp_;
}
inline const ::so_rtrs::schedule::Response& QualityRspBody_RspPosInfo::mix_rsp() const {
  const ::so_rtrs::schedule::Response* p = mix_rsp_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityRspBody.RspPosInfo.mix_rsp)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::schedule::Response*>(
      &::so_rtrs::schedule::_Response_default_instance_);
}
inline ::so_rtrs::schedule::Response* QualityRspBody_RspPosInfo::release_mix_rsp() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityRspBody.RspPosInfo.mix_rsp)
  
  ::so_rtrs::schedule::Response* temp = mix_rsp_;
  mix_rsp_ = NULL;
  return temp;
}
inline ::so_rtrs::schedule::Response* QualityRspBody_RspPosInfo::mutable_mix_rsp() {
  
  if (mix_rsp_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::schedule::Response>(GetArenaNoVirtual());
    mix_rsp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityRspBody.RspPosInfo.mix_rsp)
  return mix_rsp_;
}
inline void QualityRspBody_RspPosInfo::set_allocated_mix_rsp(::so_rtrs::schedule::Response* mix_rsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mix_rsp_);
  }
  if (mix_rsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mix_rsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mix_rsp, submessage_arena);
    }
    
  } else {
    
  }
  mix_rsp_ = mix_rsp;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityRspBody.RspPosInfo.mix_rsp)
}

// .so_rtrs.RecommendInfo pos_detail_info = 2;
inline bool QualityRspBody_RspPosInfo::has_pos_detail_info() const {
  return this != internal_default_instance() && pos_detail_info_ != NULL;
}
inline const ::so_rtrs::RecommendInfo& QualityRspBody_RspPosInfo::_internal_pos_detail_info() const {
  return *pos_detail_info_;
}
inline const ::so_rtrs::RecommendInfo& QualityRspBody_RspPosInfo::pos_detail_info() const {
  const ::so_rtrs::RecommendInfo* p = pos_detail_info_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityRspBody.RspPosInfo.pos_detail_info)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::RecommendInfo*>(
      &::so_rtrs::_RecommendInfo_default_instance_);
}
inline ::so_rtrs::RecommendInfo* QualityRspBody_RspPosInfo::release_pos_detail_info() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityRspBody.RspPosInfo.pos_detail_info)
  
  ::so_rtrs::RecommendInfo* temp = pos_detail_info_;
  pos_detail_info_ = NULL;
  return temp;
}
inline ::so_rtrs::RecommendInfo* QualityRspBody_RspPosInfo::mutable_pos_detail_info() {
  
  if (pos_detail_info_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::RecommendInfo>(GetArenaNoVirtual());
    pos_detail_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityRspBody.RspPosInfo.pos_detail_info)
  return pos_detail_info_;
}
inline void QualityRspBody_RspPosInfo::set_allocated_pos_detail_info(::so_rtrs::RecommendInfo* pos_detail_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_detail_info_);
  }
  if (pos_detail_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos_detail_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos_detail_info, submessage_arena);
    }
    
  } else {
    
  }
  pos_detail_info_ = pos_detail_info;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityRspBody.RspPosInfo.pos_detail_info)
}

// .so_rtrs.AbtestRsp abtest_rsp = 3;
inline bool QualityRspBody_RspPosInfo::has_abtest_rsp() const {
  return this != internal_default_instance() && abtest_rsp_ != NULL;
}
inline const ::so_rtrs::AbtestRsp& QualityRspBody_RspPosInfo::_internal_abtest_rsp() const {
  return *abtest_rsp_;
}
inline const ::so_rtrs::AbtestRsp& QualityRspBody_RspPosInfo::abtest_rsp() const {
  const ::so_rtrs::AbtestRsp* p = abtest_rsp_;
  // @@protoc_insertion_point(field_get:so_rtrs.QualityRspBody.RspPosInfo.abtest_rsp)
  return p != NULL ? *p : *reinterpret_cast<const ::so_rtrs::AbtestRsp*>(
      &::so_rtrs::_AbtestRsp_default_instance_);
}
inline ::so_rtrs::AbtestRsp* QualityRspBody_RspPosInfo::release_abtest_rsp() {
  // @@protoc_insertion_point(field_release:so_rtrs.QualityRspBody.RspPosInfo.abtest_rsp)
  
  ::so_rtrs::AbtestRsp* temp = abtest_rsp_;
  abtest_rsp_ = NULL;
  return temp;
}
inline ::so_rtrs::AbtestRsp* QualityRspBody_RspPosInfo::mutable_abtest_rsp() {
  
  if (abtest_rsp_ == NULL) {
    auto* p = CreateMaybeMessage<::so_rtrs::AbtestRsp>(GetArenaNoVirtual());
    abtest_rsp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityRspBody.RspPosInfo.abtest_rsp)
  return abtest_rsp_;
}
inline void QualityRspBody_RspPosInfo::set_allocated_abtest_rsp(::so_rtrs::AbtestRsp* abtest_rsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(abtest_rsp_);
  }
  if (abtest_rsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      abtest_rsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, abtest_rsp, submessage_arena);
    }
    
  } else {
    
  }
  abtest_rsp_ = abtest_rsp;
  // @@protoc_insertion_point(field_set_allocated:so_rtrs.QualityRspBody.RspPosInfo.abtest_rsp)
}

// int32 rtrs_code = 1000;
inline void QualityRspBody_RspPosInfo::clear_rtrs_code() {
  rtrs_code_ = 0;
}
inline ::google::protobuf::int32 QualityRspBody_RspPosInfo::rtrs_code() const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityRspBody.RspPosInfo.rtrs_code)
  return rtrs_code_;
}
inline void QualityRspBody_RspPosInfo::set_rtrs_code(::google::protobuf::int32 value) {
  
  rtrs_code_ = value;
  // @@protoc_insertion_point(field_set:so_rtrs.QualityRspBody.RspPosInfo.rtrs_code)
}

// -------------------------------------------------------------------

// QualityRspBody

// repeated .so_rtrs.QualityRspBody.RspPosInfo rsp_pos_info = 1;
inline int QualityRspBody::rsp_pos_info_size() const {
  return rsp_pos_info_.size();
}
inline void QualityRspBody::clear_rsp_pos_info() {
  rsp_pos_info_.Clear();
}
inline ::so_rtrs::QualityRspBody_RspPosInfo* QualityRspBody::mutable_rsp_pos_info(int index) {
  // @@protoc_insertion_point(field_mutable:so_rtrs.QualityRspBody.rsp_pos_info)
  return rsp_pos_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityRspBody_RspPosInfo >*
QualityRspBody::mutable_rsp_pos_info() {
  // @@protoc_insertion_point(field_mutable_list:so_rtrs.QualityRspBody.rsp_pos_info)
  return &rsp_pos_info_;
}
inline const ::so_rtrs::QualityRspBody_RspPosInfo& QualityRspBody::rsp_pos_info(int index) const {
  // @@protoc_insertion_point(field_get:so_rtrs.QualityRspBody.rsp_pos_info)
  return rsp_pos_info_.Get(index);
}
inline ::so_rtrs::QualityRspBody_RspPosInfo* QualityRspBody::add_rsp_pos_info() {
  // @@protoc_insertion_point(field_add:so_rtrs.QualityRspBody.rsp_pos_info)
  return rsp_pos_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::so_rtrs::QualityRspBody_RspPosInfo >&
QualityRspBody::rsp_pos_info() const {
  // @@protoc_insertion_point(field_list:so_rtrs.QualityRspBody.rsp_pos_info)
  return rsp_pos_info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace so_rtrs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_rtrs_5fquality_2eproto
